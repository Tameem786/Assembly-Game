Microsoft (R) Macro Assembler Version 14.35.32215.0	    02/27/23 21:39:50
COA-Game, Version 					     Page 1 - 1


				TITLE COA-Game, Version 1        

				; Game Title   : Money Heist
				; Organization : Team x86
				; Designer     : 

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

 00000000			.data

				;-------------------(Money_Heist_logo and Starting page)----------------------------------

 00000000 20 20 20 20 20	_heist_logo_graphic  byte "          ooo        ooooo   .oooooo.   ooooo      ooo oooooooooooo oooooo   oooo      ooooo   ooooo oooooooooooo ooooo    o    ooooooooooooo", 0ah
	   20 20 20 20 20
	   6F 6F 6F 20 20
	   20 20 20 20 20
	   20 6F 6F 6F 6F
	   6F 20 20 20 2E
	   6F 6F 6F 6F 6F
	   6F 2E 20 20 20
	   6F 6F 6F 6F 6F
	   20 20 20 20 20
	   20 6F 6F 6F 20
	   6F 6F 6F 6F 6F
	   6F 6F 6F 6F 6F
	   6F 6F 20 6F 6F
	   6F 6F 6F 6F 20
	   20 20 6F 6F 6F
	   6F 20 20 20 20
	   20 20 6F 6F 6F
	   6F 6F 20 20 20
	   6F 6F 6F 6F 6F
	   20 6F 6F 6F 6F
	   6F 6F 6F 6F 6F
	   6F 6F 6F 20 6F
	   6F 6F 6F 6F 20
	   20 20 20 6F 20
	   20 20 20 6F 6F
	   6F 6F 6F 6F 6F
	   6F 6F 6F 6F 6F
	   6F 0A
 0000008E  20 20 20 20 20					 byte "          `88.       .888'  d8P'  `Y8b  `888b.     `8' `888'     `8  `888.   .8'       `888'   `888' `888'     `8 `888' .d88888 8'   888   `8", 0ah
	   20 20 20 20 20
	   60 38 38 2E 20
	   20 20 20 20 20
	   20 2E 38 38 38
	   27 20 20 64 38
	   50 27 20 20 60
	   59 38 62 20 20
	   60 38 38 38 62
	   2E 20 20 20 20
	   20 60 38 27 20
	   60 38 38 38 27
	   20 20 20 20 20
	   60 38 20 20 60
	   38 38 38 2E 20
	   20 20 2E 38 27
	   20 20 20 20 20
	   20 20 60 38 38
	   38 27 20 20 20
	   60 38 38 38 27
	   20 60 38 38 38
	   27 20 20 20 20
	   20 60 38 20 60
	   38 38 38 27 20
	   2E 64 38 38 38
	   38 38 20 38 27
	   20 20 20 38 38
	   38 20 20 20 60
	   38 0A
 0000011C  20 20 20 20 20					 byte "           888b     d'888  888      888  8 `88b.    8   888           `888. .8'         888     888   888          888  8[ 8         888", 0ah	
	   20 20 20 20 20
	   20 38 38 38 62
	   20 20 20 20 20
	   64 27 38 38 38
	   20 20 38 38 38
	   20 20 20 20 20
	   20 38 38 38 20
	   20 38 20 60 38
	   38 62 2E 20 20
	   20 20 38 20 20
	   20 38 38 38 20
	   20 20 20 20 20
	   20 20 20 20 20
	   60 38 38 38 2E
	   20 2E 38 27 20
	   20 20 20 20 20
	   20 20 20 38 38
	   38 20 20 20 20
	   20 38 38 38 20
	   20 20 38 38 38
	   20 20 20 20 20
	   20 20 20 20 20
	   38 38 38 20 20
	   38 5B 20 38 20
	   20 20 20 20 20
	   20 20 20 38 38
	   38 0A
 000001A5  20 20 20 20 20					 byte "           8 Y88. .P  888  888      888  8   `88b.  8   888oooo8       `888.8'          888ooooo888   888oooo8     888  `Y888B.      888", 0ah	
	   20 20 20 20 20
	   20 38 20 59 38
	   38 2E 20 2E 50
	   20 20 38 38 38
	   20 20 38 38 38
	   20 20 20 20 20
	   20 38 38 38 20
	   20 38 20 20 20
	   60 38 38 62 2E
	   20 20 38 20 20
	   20 38 38 38 6F
	   6F 6F 6F 38 20
	   20 20 20 20 20
	   20 60 38 38 38
	   2E 38 27 20 20
	   20 20 20 20 20
	   20 20 20 38 38
	   38 6F 6F 6F 6F
	   6F 38 38 38 20
	   20 20 38 38 38
	   6F 6F 6F 6F 38
	   20 20 20 20 20
	   38 38 38 20 20
	   60 59 38 38 38
	   42 2E 20 20 20
	   20 20 20 38 38
	   38 0A
 0000022E  20 20 20 20 20					 byte "           8  `888'   888  888      888  8     `88b.8   888    *        `888'           888     888   888    *     888     8 ]8      888", 0ah	
	   20 20 20 20 20
	   20 38 20 20 60
	   38 38 38 27 20
	   20 20 38 38 38
	   20 20 38 38 38
	   20 20 20 20 20
	   20 38 38 38 20
	   20 38 20 20 20
	   20 20 60 38 38
	   62 2E 38 20 20
	   20 38 38 38 20
	   20 20 20 2A 20
	   20 20 20 20 20
	   20 20 60 38 38
	   38 27 20 20 20
	   20 20 20 20 20
	   20 20 20 38 38
	   38 20 20 20 20
	   20 38 38 38 20
	   20 20 38 38 38
	   20 20 20 20 2A
	   20 20 20 20 20
	   38 38 38 20 20
	   20 20 20 38 20
	   5D 38 20 20 20
	   20 20 20 38 38
	   38 0A
 000002B7  20 20 20 20 20					 byte "           8    Y     888  `88b    d88'  8       `888   888       o      888            888     888   888       o  888  88888P'      888", 0ah					
	   20 20 20 20 20
	   20 38 20 20 20
	   20 59 20 20 20
	   20 20 38 38 38
	   20 20 60 38 38
	   62 20 20 20 20
	   64 38 38 27 20
	   20 38 20 20 20
	   20 20 20 20 60
	   38 38 38 20 20
	   20 38 38 38 20
	   20 20 20 20 20
	   20 6F 20 20 20
	   20 20 20 38 38
	   38 20 20 20 20
	   20 20 20 20 20
	   20 20 20 38 38
	   38 20 20 20 20
	   20 38 38 38 20
	   20 20 38 38 38
	   20 20 20 20 20
	   20 20 6F 20 20
	   38 38 38 20 20
	   38 38 38 38 38
	   50 27 20 20 20
	   20 20 20 38 38
	   38 0A
 00000340  20 20 20 20 20					 byte "          o8o        o888o  `Y8bood8P'  o8o        `8  o888ooooood8     o888o          o888o   o888o o888ooooood8 o888o    8        o888o", 0
	   20 20 20 20 20
	   6F 38 6F 20 20
	   20 20 20 20 20
	   20 6F 38 38 38
	   6F 20 20 60 59
	   38 62 6F 6F 64
	   38 50 27 20 20
	   6F 38 6F 20 20
	   20 20 20 20 20
	   20 60 38 20 20
	   6F 38 38 38 6F
	   6F 6F 6F 6F 6F
	   64 38 20 20 20
	   20 20 6F 38 38
	   38 6F 20 20 20
	   20 20 20 20 20
	   20 20 6F 38 38
	   38 6F 20 20 20
	   6F 38 38 38 6F
	   20 6F 38 38 38
	   6F 6F 6F 6F 6F
	   6F 64 38 20 6F
	   38 38 38 6F 20
	   20 20 20 38 20
	   20 20 20 20 20
	   20 20 6F 38 38
	   38 6F 00

								 
 000003CA 20 20 20 20 20	_gameplay_message_graphic byte "                ____       _           _     _   ____                 _____   _                                            _  ", 0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 5F 5F 5F 5F
	   20 20 20 20 20
	   20 20 5F 20 20
	   20 20 20 20 20
	   20 20 20 20 5F
	   20 20 20 20 20
	   5F 20 20 20 5F
	   5F 5F 5F 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   5F 5F 5F 5F 5F
	   20 20 20 5F 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 5F 20
	   20 0A
 00000449  20 20 20 20 20	                          byte "               / ___|  ___| | ___  ___| |_  / | |___ \    ___  _ __  |___ /  | |_ ___    _ __  _ __ ___   ___ ___  ___  __| | ", 0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   2F 20 5F 5F 5F
	   7C 20 20 5F 5F
	   5F 7C 20 7C 20
	   5F 5F 5F 20 20
	   5F 5F 5F 7C 20
	   7C 5F 20 20 2F
	   20 7C 20 7C 5F
	   5F 5F 20 5C 20
	   20 20 20 5F 5F
	   5F 20 20 5F 20
	   5F 5F 20 20 7C
	   5F 5F 5F 20 2F
	   20 20 7C 20 7C
	   5F 20 5F 5F 5F
	   20 20 20 20 5F
	   20 5F 5F 20 20
	   5F 20 5F 5F 20
	   5F 5F 5F 20 20
	   20 5F 5F 5F 20
	   5F 5F 5F 20 20
	   5F 5F 5F 20 20
	   5F 5F 7C 20 7C
	   20 0A
 000004C8  20 20 20 20 20						 byte "               \___ \ / _ \ |/ _ \/ __| __| | |   __) |  / _ \| '__|   |_ \  | __/ _ \  | '_ \| '__/ _ \ / __/ _ \/ _ \/ _` |",0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   5C 5F 5F 5F 20
	   5C 20 2F 20 5F
	   20 5C 20 7C 2F
	   20 5F 20 5C 2F
	   20 5F 5F 7C 20
	   5F 5F 7C 20 7C
	   20 7C 20 20 20
	   5F 5F 29 20 7C
	   20 20 2F 20 5F
	   20 5C 7C 20 27
	   5F 5F 7C 20 20
	   20 7C 5F 20 5C
	   20 20 7C 20 5F
	   5F 2F 20 5F 20
	   5C 20 20 7C 20
	   27 5F 20 5C 7C
	   20 27 5F 5F 2F
	   20 5F 20 5C 20
	   2F 20 5F 5F 2F
	   20 5F 20 5C 2F
	   20 5F 20 5C 2F
	   20 5F 60 20 7C
	   0A
 00000546  20 20 20 20 20	                          byte "                ___) |  __/ |  __/ (__| |_  | |_ / __/  | (_) | |     ___) | | || (_) | | |_) | | | (_) | (_|  __/  __/ (_| |", 0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 5F 5F 5F 29
	   20 7C 20 20 5F
	   5F 2F 20 7C 20
	   20 5F 5F 2F 20
	   28 5F 5F 7C 20
	   7C 5F 20 20 7C
	   20 7C 5F 20 2F
	   20 5F 5F 2F 20
	   20 7C 20 28 5F
	   29 20 7C 20 7C
	   20 20 20 20 20
	   5F 5F 5F 29 20
	   7C 20 7C 20 7C
	   7C 20 28 5F 29
	   20 7C 20 7C 20
	   7C 5F 29 20 7C
	   20 7C 20 7C 20
	   28 5F 29 20 7C
	   20 28 5F 7C 20
	   20 5F 5F 2F 20
	   20 5F 5F 2F 20
	   28 5F 7C 20 7C
	   0A
 000005C4  20 20 20 20 20	                          byte "               |____/ \___|_|\___|\___|\__| |_( )_____|  \___/|_|    |____/   \__\___/  | .__/|_|  \___/ \___\___|\___|\__,_|", 0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   7C 5F 5F 5F 5F
	   2F 20 5C 5F 5F
	   5F 7C 5F 7C 5C
	   5F 5F 5F 7C 5C
	   5F 5F 5F 7C 5C
	   5F 5F 7C 20 7C
	   5F 28 20 29 5F
	   5F 5F 5F 5F 7C
	   20 20 5C 5F 5F
	   5F 2F 7C 5F 7C
	   20 20 20 20 7C
	   5F 5F 5F 5F 2F
	   20 20 20 5C 5F
	   5F 5C 5F 5F 5F
	   2F 20 20 7C 20
	   2E 5F 5F 2F 7C
	   5F 7C 20 20 5C
	   5F 5F 5F 2F 20
	   5C 5F 5F 5F 5C
	   5F 5F 5F 7C 5C
	   5F 5F 5F 7C 5C
	   5F 5F 2C 5F 7C
	   0A
 00000642  20 20 20 20 20						 byte "                                              |/                                        |_|                                  ", 0
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 7C 2F 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 7C 5F
	   7C 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   00
				                         
 000006C0 20 20 20 20 20	_gameplay_option_graphic  byte "                    ___        _____ _           _      _____               ", 0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   5F 5F 5F 20 20
	   20 20 20 20 20
	   20 5F 5F 5F 5F
	   5F 20 5F 20 20
	   20 20 20 20 20
	   20 20 20 20 5F
	   20 20 20 20 20
	   20 5F 5F 5F 5F
	   5F 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 0A
 0000070D  20 20 20 20 20	                          byte "                   |_  |      |   __| |_ ___ ___| |_   |   __|___ _____ ___ ", 0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 7C
	   5F 20 20 7C 20
	   20 20 20 20 20
	   7C 20 20 20 5F
	   5F 7C 20 7C 5F
	   20 5F 5F 5F 20
	   5F 5F 5F 7C 20
	   7C 5F 20 20 20
	   7C 20 20 20 5F
	   5F 7C 5F 5F 5F
	   20 5F 5F 5F 5F
	   5F 20 5F 5F 5F
	   20 0A
 0000075A  20 20 20 20 20	                          byte "                    _| |_ _   |__   |  _| .'|  _|  _|  |  |  | .'|     | -_|", 0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   5F 7C 20 7C 5F
	   20 5F 20 20 20
	   7C 5F 5F 20 20
	   20 7C 20 20 5F
	   7C 20 2E 27 7C
	   20 20 5F 7C 20
	   20 5F 7C 20 20
	   7C 20 20 7C 20
	   20 7C 20 2E 27
	   7C 20 20 20 20
	   20 7C 20 2D 5F
	   7C 0A
 000007A7  20 20 20 20 20	                          byte "                   |_____|_|  |_____|_| |__,|_| |_|    |_____|__,|_|_|_|___|", 0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 7C
	   5F 5F 5F 5F 5F
	   7C 5F 7C 20 20
	   7C 5F 5F 5F 5F
	   5F 7C 5F 7C 20
	   7C 5F 5F 2C 7C
	   5F 7C 20 7C 5F
	   7C 20 20 20 20
	   7C 5F 5F 5F 5F
	   5F 7C 5F 5F 2C
	   7C 5F 7C 5F 7C
	   5F 7C 5F 5F 5F
	   7C 0A
 000007F4  20 20 20 20 20	                          byte "                    ___      _____         _               _   _            ", 0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   5F 5F 5F 20 20
	   20 20 20 20 5F
	   5F 5F 5F 5F 20
	   20 20 20 20 20
	   20 20 20 5F 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 5F
	   20 20 20 5F 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 0A
 00000841  20 20 20 20 20	                          byte "                   |_  |    |     |___ ___| |_ ___ _ _ ___| |_|_|___ ___ ___ ", 0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 7C
	   5F 20 20 7C 20
	   20 20 20 7C 20
	   20 20 20 20 7C
	   5F 5F 5F 20 5F
	   5F 5F 7C 20 7C
	   5F 20 5F 5F 5F
	   20 5F 20 5F 20
	   5F 5F 5F 7C 20
	   7C 5F 7C 5F 7C
	   5F 5F 5F 20 5F
	   5F 5F 20 5F 5F
	   5F 20 0A
 0000088F  20 20 20 20 20	                          byte "                   |  _|_   |== ==|   |_ -|  _|  _| | |  _|  _| | . |   |_ -|", 0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 7C
	   20 20 5F 7C 5F
	   20 20 20 7C 3D
	   3D 20 3D 3D 7C
	   20 20 20 7C 5F
	   20 2D 7C 20 20
	   5F 7C 20 20 5F
	   7C 20 7C 20 7C
	   20 20 5F 7C 20
	   20 5F 7C 20 7C
	   20 2E 20 7C 20
	   20 20 7C 5F 20
	   2D 7C 0A
 000008DD  20 20 20 20 20						 byte "                   |___|_|  |_____|_|_|___|_| |_| |___|___|_| |_|___|_|_|___| ", 0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 7C
	   5F 5F 5F 7C 5F
	   7C 20 20 7C 5F
	   5F 5F 5F 5F 7C
	   5F 7C 5F 7C 5F
	   5F 5F 7C 5F 7C
	   20 7C 5F 7C 20
	   7C 5F 5F 5F 7C
	   5F 5F 5F 7C 5F
	   7C 20 7C 5F 7C
	   5F 5F 5F 7C 5F
	   7C 5F 7C 5F 5F
	   5F 7C 20 0A
 0000092C  20 20 20 20 20						 byte "                    ___      _____     _ _      _            _         _   _ ", 0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   5F 5F 5F 20 20
	   20 20 20 20 5F
	   5F 5F 5F 5F 20
	   20 20 20 20 5F
	   20 5F 20 20 20
	   20 20 20 5F 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 5F 20 20 20
	   20 20 20 20 20
	   20 5F 20 20 20
	   5F 20 0A
 0000097A  20 20 20 20 20						 byte "                   |_  |    |   __|_ _|_| |_   | |_ ___    _| |___ ___| |_| |_ ___ ___ ", 0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 7C
	   5F 20 20 7C 20
	   20 20 20 7C 20
	   20 20 5F 5F 7C
	   5F 20 5F 7C 5F
	   7C 20 7C 5F 20
	   20 20 7C 20 7C
	   5F 20 5F 5F 5F
	   20 20 20 20 5F
	   7C 20 7C 5F 5F
	   5F 20 5F 5F 5F
	   7C 20 7C 5F 7C
	   20 7C 5F 20 5F
	   5F 5F 20 5F 5F
	   5F 20 0A
 000009D2  20 20 20 20 20						 byte "                   |_  |_   |   __|_'_| |  _|  |  _| . |  | . | -_|_ -| '_|  _| . | . |", 0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 7C
	   5F 20 20 7C 5F
	   20 20 20 7C 20
	   20 20 5F 5F 7C
	   5F 27 5F 7C 20
	   7C 20 20 5F 7C
	   20 20 7C 20 20
	   5F 7C 20 2E 20
	   7C 20 20 7C 20
	   2E 20 7C 20 2D
	   5F 7C 5F 20 2D
	   7C 20 27 5F 7C
	   20 20 5F 7C 20
	   2E 20 7C 20 2E
	   20 7C 0A
 00000A2A  20 20 20 20 20						 byte "                   |___|_|  |_____|_,_|_|_|    |_| |___|  |___|___|___|_,_|_| |___|  _|", 0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 7C
	   5F 5F 5F 7C 5F
	   7C 20 20 7C 5F
	   5F 5F 5F 5F 7C
	   5F 2C 5F 7C 5F
	   7C 5F 7C 20 20
	   20 20 7C 5F 7C
	   20 7C 5F 5F 5F
	   7C 20 20 7C 5F
	   5F 5F 7C 5F 5F
	   5F 7C 5F 5F 5F
	   7C 5F 2C 5F 7C
	   5F 7C 20 7C 5F
	   5F 5F 7C 20 20
	   5F 7C 0A
 00000A82  20 20 20 20 20						 byte "                                                                                  |_|", 0
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 7C 5F 7C
	   00
									 




				;-------------------(Money_Heist_GAME_INTRUCTIONS)----------------------------------

 00000AD8 20 20 20 20 20	_instruction_heading byte "      ___ _   _ ____ _____ ____  _   _  ____ _____ ___ ___  _   _ ____ ", 0ah
	   20 5F 5F 5F 20
	   5F 20 20 20 5F
	   20 5F 5F 5F 5F
	   20 5F 5F 5F 5F
	   5F 20 5F 5F 5F
	   5F 20 20 5F 20
	   20 20 5F 20 20
	   5F 5F 5F 5F 20
	   5F 5F 5F 5F 5F
	   20 5F 5F 5F 20
	   5F 5F 5F 20 20
	   5F 20 20 20 5F
	   20 5F 5F 5F 5F
	   20 0A
 00000B20  20 20 20 20 20	                     byte "     |_ _| \ | / ___|_   _|  _ \| | | |/ ___|_   _|_ _/ _ \| \ | / ___|", 0ah
	   7C 5F 20 5F 7C
	   20 5C 20 7C 20
	   2F 20 5F 5F 5F
	   7C 5F 20 20 20
	   5F 7C 20 20 5F
	   20 5C 7C 20 7C
	   20 7C 20 7C 2F
	   20 5F 5F 5F 7C
	   5F 20 20 20 5F
	   7C 5F 20 5F 2F
	   20 5F 20 5C 7C
	   20 5C 20 7C 20
	   2F 20 5F 5F 5F
	   7C 0A
 00000B68  20 20 20 20 20	                     byte "      | ||  \| \___ \ | | | |_) | | | | |     | |  | | | | |  \| \___ \ ", 0ah               
	   20 7C 20 7C 7C
	   20 20 5C 7C 20
	   5C 5F 5F 5F 20
	   5C 20 7C 20 7C
	   20 7C 20 7C 5F
	   29 20 7C 20 7C
	   20 7C 20 7C 20
	   7C 20 20 20 20
	   20 7C 20 7C 20
	   20 7C 20 7C 20
	   7C 20 7C 20 7C
	   20 20 5C 7C 20
	   5C 5F 5F 5F 20
	   5C 20 0A
 00000BB1  20 20 20 20 20	                     byte "      | || |\  |___) || | |  _ <| |_| | |___  | |  | | |_| | |\  |___) |.",0ah
	   20 7C 20 7C 7C
	   20 7C 5C 20 20
	   7C 5F 5F 5F 29
	   20 7C 7C 20 7C
	   20 7C 20 20 5F
	   20 3C 7C 20 7C
	   5F 7C 20 7C 20
	   7C 5F 5F 5F 20
	   20 7C 20 7C 20
	   20 7C 20 7C 20
	   7C 5F 7C 20 7C
	   20 7C 5C 20 20
	   7C 5F 5F 5F 29
	   20 7C 2E 0A
 00000BFB  20 20 20 20 20					 byte "     |___|_| \_|____/ |_| |_| \_\\___/ \____| |_| |___\___/|_| \_|____/.",0
	   7C 5F 5F 5F 7C
	   5F 7C 20 5C 5F
	   7C 5F 5F 5F 5F
	   2F 20 7C 5F 7C
	   20 7C 5F 7C 20
	   5C 5F 5C 5C 5F
	   5F 5F 2F 20 5C
	   5F 5F 5F 5F 7C
	   20 7C 5F 7C 20
	   7C 5F 5F 5F 5C
	   5F 5F 5F 2F 7C
	   5F 7C 20 5C 5F
	   7C 5F 5F 5F 5F
	   2F 2E 00

 00000C44 20 20 20 20 43	 _instruction   byte "    Chose a character first.   You will then be given 1000 dollars to start the game.", 0ah
	   68 6F 73 65 20
	   61 20 63 68 61
	   72 61 63 74 65
	   72 20 66 69 72
	   73 74 2E 20 20
	   20 59 6F 75 20
	   77 69 6C 6C 20
	   74 68 65 6E 20
	   62 65 20 67 69
	   76 65 6E 20 31
	   30 30 30 20 64
	   6F 6C 6C 61 72
	   73 20 74 6F 20
	   73 74 61 72 74
	   20 74 68 65 20
	   67 61 6D 65 2E
	   0A
 00000C9A  20 20 20 20 54	                byte "    To play the game you must roll the dice.The dice roll will determine your fate!!!", 0ah
	   6F 20 70 6C 61
	   79 20 74 68 65
	   20 67 61 6D 65
	   20 79 6F 75 20
	   6D 75 73 74 20
	   72 6F 6C 6C 20
	   74 68 65 20 64
	   69 63 65 2E 54
	   68 65 20 64 69
	   63 65 20 72 6F
	   6C 6C 20 77 69
	   6C 6C 20 64 65
	   74 65 72 6D 69
	   6E 65 20 79 6F
	   75 72 20 66 61
	   74 65 21 21 21
	   0A
 00000CF0  20 20 20 20 45	                byte "    Each round you can gain money or lose money. After each round you can chose to ", 0ah               
	   61 63 68 20 72
	   6F 75 6E 64 20
	   79 6F 75 20 63
	   61 6E 20 67 61
	   69 6E 20 6D 6F
	   6E 65 79 20 6F
	   72 20 6C 6F 73
	   65 20 6D 6F 6E
	   65 79 2E 20 41
	   66 74 65 72 20
	   65 61 63 68 20
	   72 6F 75 6E 64
	   20 79 6F 75 20
	   63 61 6E 20 63
	   68 6F 73 65 20
	   74 6F 20 0A
 00000D44  20 20 20 20 63	                byte "    continue playing or leave the game with the money and assets you have already earned.", 0
	   6F 6E 74 69 6E
	   75 65 20 70 6C
	   61 79 69 6E 67
	   20 6F 72 20 6C
	   65 61 76 65 20
	   74 68 65 20 67
	   61 6D 65 20 77
	   69 74 68 20 74
	   68 65 20 6D 6F
	   6E 65 79 20 61
	   6E 64 20 61 73
	   73 65 74 73 20
	   79 6F 75 20 68
	   61 76 65 20 61
	   6C 72 65 61 64
	   79 20 65 61 72
	   6E 65 64 2E 00

 00000D9E 20 20 20 20 20	_instruction_screen_selection_message byte "           Select 1 or 2 to proceed", 0ah
	   20 20 20 20 20
	   20 53 65 6C 65
	   63 74 20 31 20
	   6F 72 20 32 20
	   74 6F 20 70 72
	   6F 63 65 65 64
	   0A
 00000DC2  20 20 20 20 20								   byte "                1. Start game", 0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 31 2E 20 53
	   74 61 72 74 20
	   67 61 6D 65 0A
 00000DE0  20 20 20 20 20								   byte "                2. Exit to desktop", 0
	   20 20 20 20 20
	   20 20 20 20 20
	   20 32 2E 20 45
	   78 69 74 20 74
	   6F 20 64 65 73
	   6B 74 6F 70 00


				;----------------------------------TITLE OF GAME and WELCOME MESSAGE----------------------------------------------------------

 00000E03 20 20 20 20 20	     _title      byte "                          __  __  ___  _   _ _______   __  _   _ _____ ___  _ _____ ", 0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 5F 5F 20 20
	   5F 5F 20 20 5F
	   5F 5F 20 20 5F
	   20 20 20 5F 20
	   5F 5F 5F 5F 5F
	   5F 5F 20 20 20
	   5F 5F 20 20 5F
	   20 20 20 5F 20
	   5F 5F 5F 5F 5F
	   20 5F 5F 5F 20
	   20 5F 20 5F 5F
	   5F 5F 5F 20 0A
 00000E58  20 20 20 20 20	                 byte "                         |  \/  |/ _ \| \ | | ____\ \ / / | | | | ____|_ _|| |_   _|", 0ah                
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   7C 20 20 5C 2F
	   20 20 7C 2F 20
	   5F 20 5C 7C 20
	   5C 20 7C 20 7C
	   20 5F 5F 5F 5F
	   5C 20 5C 20 2F
	   20 2F 20 7C 20
	   7C 20 7C 20 7C
	   20 5F 5F 5F 5F
	   7C 5F 20 5F 7C
	   7C 20 7C 5F 20
	   20 20 5F 7C 0A
 00000EAD  20 20 20 20 20	                 byte "                         | |\/| | | | |  \| |  _|  \ V /  | |_| |  _|  | |/ __)| |", 0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   7C 20 7C 5C 2F
	   7C 20 7C 20 7C
	   20 7C 20 7C 20
	   20 5C 7C 20 7C
	   20 20 5F 7C 20
	   20 5C 20 56 20
	   2F 20 20 7C 20
	   7C 5F 7C 20 7C
	   20 20 5F 7C 20
	   20 7C 20 7C 2F
	   20 5F 5F 29 7C
	   20 7C 0A
 00000F00  20 20 20 20 20	                 byte "                         | |  | | |_| | |\  | |___  | |   |  _  | |___ | |\__ \| |", 0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   7C 20 7C 20 20
	   7C 20 7C 20 7C
	   5F 7C 20 7C 20
	   7C 5C 20 20 7C
	   20 7C 5F 5F 5F
	   20 20 7C 20 7C
	   20 20 20 7C 20
	   20 5F 20 20 7C
	   20 7C 5F 5F 5F
	   20 7C 20 7C 5C
	   5F 5F 20 5C 7C
	   20 7C 0A
 00000F53  20 20 20 20 20				  byte "                         |_|  |_|\___/|_| \_|_____| |_|   |_| |_|_____|___(   /|_|", 0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   7C 5F 7C 20 20
	   7C 5F 7C 5C 5F
	   5F 5F 2F 7C 5F
	   7C 20 5C 5F 7C
	   5F 5F 5F 5F 5F
	   7C 20 7C 5F 7C
	   20 20 20 7C 5F
	   7C 20 7C 5F 7C
	   5F 5F 5F 5F 5F
	   7C 5F 5F 5F 28
	   20 20 20 2F 7C
	   5F 7C 0A
 00000FA6  20 20 20 20 20				  byte "                                                                           |_|     ", 0
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   7C 5F 7C 20 20
	   20 20 20 00

 00000FFA 57 65 6C 63 6F	     _welcome byte "Welcome to Money Heist !", 0
	   6D 65 20 74 6F
	   20 4D 6F 6E 65
	   79 20 48 65 69
	   73 74 20 21 00


				;----------------------------------Character SELECTION---------------------------------------------------------------------------

 00001013 42 65 66 6F 72	     charOption byte "Before you start the game - ", 0ah
	   65 20 79 6F 75
	   20 73 74 61 72
	   74 20 74 68 65
	   20 67 61 6D 65
	   20 2D 20 0A
 00001030  31 2E 20 54 6F	                byte "1. Tokyo", 0ah
	   6B 79 6F 0A
 00001039  32 2E 20 44 65	                byte "2. Denver", 0ah
	   6E 76 65 72 0A
 00001043  33 2E 20 50 72	                byte "3. Professor", 0ah
	   6F 66 65 73 73
	   6F 72 0A
 00001050  34 2E 20 4E 61	                byte "4. Nairobi", 0ah
	   69 72 6F 62 69
	   0A
 0000105B  35 2E 20 45 78	                byte "5. Exit", 0ah
	   69 74 0A
 00001063  43 68 6F 6F 73	                byte "Choose a character or EXIT - ", 0
	   65 20 61 20 63
	   68 61 72 61 63
	   74 65 72 20 6F
	   72 20 45 58 49
	   54 20 2D 20 00


				;----------------------------------------------------Welcoming message for specific CHARACTER----------------------------------

 00001081 48 65 79 20 50	     welcome_prof byte "Hey Professor! Let's begin the heist !", 0
	   72 6F 66 65 73
	   73 6F 72 21 20
	   4C 65 74 27 73
	   20 62 65 67 69
	   6E 20 74 68 65
	   20 68 65 69 73
	   74 20 21 00
 000010A8 48 65 79 20 54	     welcome_tokyo byte "Hey Tokyo! Let's begin the heist !", 0
	   6F 6B 79 6F 21
	   20 4C 65 74 27
	   73 20 62 65 67
	   69 6E 20 74 68
	   65 20 68 65 69
	   73 74 20 21 00
 000010CB 48 65 79 20 44	     welcome_denver byte "Hey Denver! Let's begin the heist !", 0
	   65 6E 76 65 72
	   21 20 4C 65 74
	   27 73 20 62 65
	   67 69 6E 20 74
	   68 65 20 68 65
	   69 73 74 20 21
	   00
 000010EF 4F 6F 6F 6F 77	     welcome_nairobi byte "Oooow....wait. You don't know nairobi is dead in Season 04. Sorry for the spoiler. Better you choose other character. Have fun !!!", 0
	   2E 2E 2E 2E 77
	   61 69 74 2E 20
	   59 6F 75 20 64
	   6F 6E 27 74 20
	   6B 6E 6F 77 20
	   6E 61 69 72 6F
	   62 69 20 69 73
	   20 64 65 61 64
	   20 69 6E 20 53
	   65 61 73 6F 6E
	   20 30 34 2E 20
	   53 6F 72 72 79
	   20 66 6F 72 20
	   74 68 65 20 73
	   70 6F 69 6C 65
	   72 2E 20 42 65
	   74 74 65 72 20
	   79 6F 75 20 63
	   68 6F 6F 73 65
	   20 6F 74 68 65
	   72 20 63 68 61
	   72 61 63 74 65
	   72 2E 20 48 61
	   76 65 20 66 75
	   6E 20 21 21 21
	   00
				 

				;----------------------------------------------------Message for each Character stating their initial money--------------------	
 00001172 50 72 6F 66 65		prof1 byte "Professor, You have ", 0
	   73 73 6F 72 2C
	   20 59 6F 75 20
	   68 61 76 65 20
	   00
 00001187 54 6F 6B 79 6F	     tokyo1 byte "Tokyo, You have ", 0
	   2C 20 59 6F 75
	   20 68 61 76 65
	   20 00
 00001198 44 65 6E 76 65	     den byte "Denver, You have ", 0
	   72 2C 20 59 6F
	   75 20 68 61 76
	   65 20 00

					
				;------------------------------------------------options for player (_main_)---------------------------------------------------

 000011AA 31 2E 20 42 75	     main_options byte "1. Buy a house", 0ah
	   79 20 61 20 68
	   6F 75 73 65 0A
 000011B9  32 2E 20 53 65	                  byte "2. Sell a product", 0ah
	   6C 6C 20 61 20
	   70 72 6F 64 75
	   63 74 0A
 000011CB  33 2E 20 42 61	                  byte "3. Bankrupt", 0ah
	   6E 6B 72 75 70
	   74 0A
 000011D7  34 2E 20 42 75	                  byte "4. Buy a car", 0ah
	   79 20 61 20 63
	   61 72 0A
 000011E4  35 2E 20 49 6E	                  byte "5. Invest", 0ah
	   76 65 73 74 0A
 000011EE  36 2E 20 53 74	                  byte "6. Start a business", 0ah
	   61 72 74 20 61
	   20 62 75 73 69
	   6E 65 73 73 0A
 00001202  37 2E 20 42 75	                  byte "7. Buy lottery", 0
	   79 20 6C 6F 74
	   74 65 72 79 00

 00001211 31 2E 20 42 75		main_options2 byte "1. Buy a car", 0ah
	   79 20 61 20 63
	   61 72 0A
 0000121E  32 2E 20 42 75	                  byte "2. Buy a house", 0ah
	   79 20 61 20 68
	   6F 75 73 65 0A
 0000122D  33 2E 20 42 61	                  byte "3. Bankrupt", 0ah
	   6E 6B 72 75 70
	   74 0A
 00001239  34 2E 20 53 65	                  byte "4. Sell a pruduct", 0ah
	   6C 6C 20 61 20
	   70 72 75 64 75
	   63 74 0A
 0000124B  35 2E 20 49 6E	                  byte "5. Invest", 0ah
	   76 65 73 74 0A
 00001255  36 2E 20 53 74	                  byte "6. Start a business", 0ah
	   61 72 74 20 61
	   20 62 75 73 69
	   6E 65 73 73 0A
 00001269  37 2E 20 42 75	                  byte "7. Buy lottery", 0
	   79 20 6C 6F 74
	   74 65 72 79 00


				;-------------------------------------------------sub-option  of (1. Buy a house)----------------------------------------------------- 

 00001278 4F 68 20 79 6F	     house_options byte "Oh you decided to buy a house, here are your options", 0ah
	   75 20 64 65 63
	   69 64 65 64 20
	   74 6F 20 62 75
	   79 20 61 20 68
	   6F 75 73 65 2C
	   20 68 65 72 65
	   20 61 72 65 20
	   79 6F 75 72 20
	   6F 70 74 69 6F
	   6E 73 0A
 000012AD  31 2E 20 50 65				    byte "1. Penthouse(400$)", 0ah
	   6E 74 68 6F 75
	   73 65 28 34 30
	   30 24 29 0A
 000012C0  32 2E 20 47 61	                   byte "2. Garden Apartment(200$)", 0ah
	   72 64 65 6E 20
	   41 70 61 72 74
	   6D 65 6E 74 28
	   32 30 30 24 29
	   0A
 000012DA  33 2E 20 53 6B	                   byte "3. Sky Loft(300$)", 0ah
	   79 20 4C 6F 66
	   74 28 33 30 30
	   24 29 0A
 000012EC  34 2E 20 43 68	                   byte "4. Change my mind", 0
	   61 6E 67 65 20
	   6D 79 20 6D 69
	   6E 64 00

				;--------------------------------------------------option output display for (1. Buy a house)---------------------------------------

 000012FE 4F 20 62 6F 79	     house_option1 byte "O boy! You bought a Penthouse in Miami", 0
	   21 20 59 6F 75
	   20 62 6F 75 67
	   68 74 20 61 20
	   50 65 6E 74 68
	   6F 75 73 65 20
	   69 6E 20 4D 69
	   61 6D 69 00
 00001325 59 65 65 21 20	     house_option2 byte "Yee! You bought a nice Garden Apartment in Florida", 0
	   59 6F 75 20 62
	   6F 75 67 68 74
	   20 61 20 6E 69
	   63 65 20 47 61
	   72 64 65 6E 20
	   41 70 61 72 74
	   6D 65 6E 74 20
	   69 6E 20 46 6C
	   6F 72 69 64 61
	   00
 00001358 53 6D 61 72 74	     house_option3 byte "Smart! You bought a Sky Loft in Los Angeles", 0
	   21 20 59 6F 75
	   20 62 6F 75 67
	   68 74 20 61 20
	   53 6B 79 20 4C
	   6F 66 74 20 69
	   6E 20 4C 6F 73
	   20 41 6E 67 65
	   6C 65 73 00
 00001384 59 6F 75 20 73	     house_option4 byte "You saved some money this time, but next time i will beat you", 0
	   61 76 65 64 20
	   73 6F 6D 65 20
	   6D 6F 6E 65 79
	   20 74 68 69 73
	   20 74 69 6D 65
	   2C 20 62 75 74
	   20 6E 65 78 74
	   20 74 69 6D 65
	   20 69 20 77 69
	   6C 6C 20 62 65
	   61 74 20 79 6F
	   75 00


				;---------------------------------------------------sub-option  of (2. Sell a product)---------------------------------------------------
 000013C2 4F 68 20 79 6F	     product_options byte "Oh you decided to sell a product! Here are your options", 0ah
	   75 20 64 65 63
	   69 64 65 64 20
	   74 6F 20 73 65
	   6C 6C 20 61 20
	   70 72 6F 64 75
	   63 74 21 20 48
	   65 72 65 20 61
	   72 65 20 79 6F
	   75 72 20 6F 70
	   74 69 6F 6E 73
	   0A
 000013FA  31 2E 20 50 69					 byte "1. Piano(200$)", 0ah
	   61 6E 6F 28 32
	   30 30 24 29 0A
 00001409  32 2E 20 57 61	                     byte "2. Watch(100$)", 0ah
	   74 63 68 28 31
	   30 30 24 29 0A
 00001418  33 2E 20 59 6F	                     byte "3. Your product got stolen, can not sell anymore", 0
	   75 72 20 70 72
	   6F 64 75 63 74
	   20 67 6F 74 20
	   73 74 6F 6C 65
	   6E 2C 20 63 61
	   6E 20 6E 6F 74
	   20 73 65 6C 6C
	   20 61 6E 79 6D
	   6F 72 65 00

				;----------------------------------------------------option output display for (2. Sell a product)-----------------------------------------
 00001449 4F 20 62 6F 79	     product_option1 byte "O boy! You sold your piano for 200$", 0
	   21 20 59 6F 75
	   20 73 6F 6C 64
	   20 79 6F 75 72
	   20 70 69 61 6E
	   6F 20 66 6F 72
	   20 32 30 30 24
	   00
 0000146D 59 65 65 21 20	     product_option2 byte "Yee! You sold your rolex watch for 100$", 0
	   59 6F 75 20 73
	   6F 6C 64 20 79
	   6F 75 72 20 72
	   6F 6C 65 78 20
	   77 61 74 63 68
	   20 66 6F 72 20
	   31 30 30 24 00
 00001495 42 61 64 20 4C	     product_option3 byte "Bad Luck! Or I got you", 0
	   75 63 6B 21 20
	   4F 72 20 49 20
	   67 6F 74 20 79
	   6F 75 00
				 
				;--------------------------------------------------------------------------------sub-option of (4. Buy a car)----------------------------------------
 000014AC 4F 68 20 79 6F		car_options byte "Oh you decided to buy a car! Here are your options", 0ah 
	   75 20 64 65 63
	   69 64 65 64 20
	   74 6F 20 62 75
	   79 20 61 20 63
	   61 72 21 20 48
	   65 72 65 20 61
	   72 65 20 79 6F
	   75 72 20 6F 70
	   74 69 6F 6E 73
	   0A
 000014DF  31 2E 20 41 55		            byte "1. AUDI(300$)", 0ah
	   44 49 28 33 30
	   30 24 29 0A
 000014ED  32 2E 20 4C 61	                 byte "2. Lamborghini (500$)", 0ah
	   6D 62 6F 72 67
	   68 69 6E 69 20
	   28 35 30 30 24
	   29 0A
 00001503  33 2E 20 46 65	                 byte "3. Ferrari(600$)", 0ah
	   72 72 61 72 69
	   28 36 30 30 24
	   29 0A
 00001514  34 2E 20 43 68	                 byte "4. Change my mind", 0
	   61 6E 67 65 20
	   6D 79 20 6D 69
	   6E 64 00

				;-------------------------------------------------------------------------------option output display for (4. Buy a car)---------------------------------
 00001526 53 6D 61 72 74	     car_option1 byte "Smart! You bought an AUDI", 0
	   21 20 59 6F 75
	   20 62 6F 75 67
	   68 74 20 61 6E
	   20 41 55 44 49
	   00
 00001540 59 65 65 21 20	     car_option2 byte "Yee! You bought a Lamborhini", 0
	   59 6F 75 20 62
	   6F 75 67 68 74
	   20 61 20 4C 61
	   6D 62 6F 72 68
	   69 6E 69 00
 0000155D 4F 68 20 62 6F	     car_option3 byte "Oh boy! You bought a Red Ferrari", 0
	   79 21 20 59 6F
	   75 20 62 6F 75
	   67 68 74 20 61
	   20 52 65 64 20
	   46 65 72 72 61
	   72 69 00
 0000157E 59 6F 75 20 73	     car_option4 byte "You saved some money this time, but next time i will beat you", 0
	   61 76 65 64 20
	   73 6F 6D 65 20
	   6D 6F 6E 65 79
	   20 74 68 69 73
	   20 74 69 6D 65
	   2C 20 62 75 74
	   20 6E 65 78 74
	   20 74 69 6D 65
	   20 69 20 77 69
	   6C 6C 20 62 65
	   61 74 20 79 6F
	   75 00

				;----------------------------------------------------------------------------sub-option of (5. Invest)--------------------------------------------------------
 000015BC 4F 68 20 79 6F	     invest_options byte "Oh you decided to invest in business! Here are your options", 0ah
	   75 20 64 65 63
	   69 64 65 64 20
	   74 6F 20 69 6E
	   76 65 73 74 20
	   69 6E 20 62 75
	   73 69 6E 65 73
	   73 21 20 48 65
	   72 65 20 61 72
	   65 20 79 6F 75
	   72 20 6F 70 74
	   69 6F 6E 73 0A
 000015F8  31 2E 20 43 6F					byte "1. Cokacola(+200$)", 0ah
	   6B 61 63 6F 6C
	   61 28 2B 32 30
	   30 24 29 0A
 0000160B  32 2E 20 41 43	                    byte "2. ACER(-300$)", 0ah
	   45 52 28 2D 33
	   30 30 24 29 0A
 0000161A  33 2E 20 53 70	                    byte "3. SpaceX(+500$)", 0ah
	   61 63 65 58 28
	   2B 35 30 30 24
	   29 0A
 0000162B  34 2E 20 59 61	                    byte "4. Yahoo(-500$)", 0
	   68 6F 6F 28 2D
	   35 30 30 24 29
	   00

				;--------------------------------------------------------------------------option output display for (5. Invest)----------------------------------------------
 0000163B 50 72 6F 66 69	     invest_option1 byte "Profit - 200$, Nice Job!", 0
	   74 20 2D 20 32
	   30 30 24 2C 20
	   4E 69 63 65 20
	   4A 6F 62 21 00
 00001654 4C 6F 73 65 20	     invest_option2 byte "Lose - 300$, Bad Invest", 0
	   2D 20 33 30 30
	   24 2C 20 42 61
	   64 20 49 6E 76
	   65 73 74 00
 0000166C 50 72 6F 66 69	     invest_option3 byte "Profit - 500$, You get the bussiness idea!", 0
	   74 20 2D 20 35
	   30 30 24 2C 20
	   59 6F 75 20 67
	   65 74 20 74 68
	   65 20 62 75 73
	   73 69 6E 65 73
	   73 20 69 64 65
	   61 21 00
 00001697 4C 6F 73 65 20	     invest_option4 byte "Lose - 500$, You are a worst investor", 0
	   2D 20 35 30 30
	   24 2C 20 59 6F
	   75 20 61 72 65
	   20 61 20 77 6F
	   72 73 74 20 69
	   6E 76 65 73 74
	   6F 72 00


				;-------------------------------------------------------------------------------sub-option (6. Start a business)-------------------------------------
 000016BD 4F 68 20 79 6F	     business_options byte "Oh you decided to start a business! Here are your options", 0ah
	   75 20 64 65 63
	   69 64 65 64 20
	   74 6F 20 73 74
	   61 72 74 20 61
	   20 62 75 73 69
	   6E 65 73 73 21
	   20 48 65 72 65
	   20 61 72 65 20
	   79 6F 75 72 20
	   6F 70 74 69 6F
	   6E 73 0A
 000016F7  31 2E 20 31 30					  byte "1. 100$ profit per cycle", 0ah
	   30 24 20 70 72
	   6F 66 69 74 20
	   70 65 72 20 63
	   79 63 6C 65 0A
 00001710  32 2E 20 59 6F	                      byte "2. You are not prepared", 0ah
	   75 20 61 72 65
	   20 6E 6F 74 20
	   70 72 65 70 61
	   72 65 64 0A
 00001728  33 2E 20 35 30	                      byte "3. 50$ lose per cycle", 0
	   24 20 6C 6F 73
	   65 20 70 65 72
	   20 63 79 63 6C
	   65 00

				;-----------------------------------------------------------------------------option output display for (6. Start a business)-------------------------------
 0000173E 4E 6F 77 20 79	     business_option1 byte "Now you will gain 100$ each time you start the game. Start from now", 0
	   6F 75 20 77 69
	   6C 6C 20 67 61
	   69 6E 20 31 30
	   30 24 20 65 61
	   63 68 20 74 69
	   6D 65 20 79 6F
	   75 20 73 74 61
	   72 74 20 74 68
	   65 20 67 61 6D
	   65 2E 20 53 74
	   61 72 74 20 66
	   72 6F 6D 20 6E
	   6F 77 00
 00001782 41 73 20 79 6F	     business_option2 byte "As you heared, Next Time", 0
	   75 20 68 65 61
	   72 65 64 2C 20
	   4E 65 78 74 20
	   54 69 6D 65 00
 0000179B 4E 6F 77 20 79	     business_option3 byte "Now you will loss 50$ each time you start the game. Start from now", 0
	   6F 75 20 77 69
	   6C 6C 20 6C 6F
	   73 73 20 35 30
	   24 20 65 61 63
	   68 20 74 69 6D
	   65 20 79 6F 75
	   20 73 74 61 72
	   74 20 74 68 65
	   20 67 61 6D 65
	   2E 20 53 74 61
	   72 74 20 66 72
	   6F 6D 20 6E 6F
	   77 00
				    
				;---------------------------------------------------------sub-option of (7. Buy lottery)------------------------------------------------------------------------------ 	
 000017DE 4F 68 20 79 6F		lottery_options byte "Oh you decided to buy a lottery! Here are your options.", 0ah
	   75 20 64 65 63
	   69 64 65 64 20
	   74 6F 20 62 75
	   79 20 61 20 6C
	   6F 74 74 65 72
	   79 21 20 48 65
	   72 65 20 61 72
	   65 20 79 6F 75
	   72 20 6F 70 74
	   69 6F 6E 73 2E
	   0A
 00001816  31 2E 20 4A 61					 byte "1. Jackpot(1000$)", 0ah
	   63 6B 70 6F 74
	   28 31 30 30 30
	   24 29 0A
 00001828  32 2E 20 4E 6F	                     byte "2. Nothing(-50$)", 0
	   74 68 69 6E 67
	   28 2D 35 30 24
	   29 00
 00001839 24 24 24 24 24	     lottery_option1 byte "$$$$$$$$$$ JACKPOT $$$$$$$$$$", 0
	   24 24 24 24 24
	   20 4A 41 43 4B
	   50 4F 54 20 24
	   24 24 24 24 24
	   24 24 24 24 00
 00001857 59 6F 75 20 67	     lottery_option2 byte "You got nothing. But you need to pay 50$ for purchasing the lottery", 0
	   6F 74 20 6E 6F
	   74 68 69 6E 67
	   2E 20 42 75 74
	   20 79 6F 75 20
	   6E 65 65 64 20
	   74 6F 20 70 61
	   79 20 35 30 24
	   20 66 6F 72 20
	   70 75 72 63 68
	   61 73 69 6E 67
	   20 74 68 65 20
	   6C 6F 74 74 65
	   72 79 00

				;----------------------------------------------------------------rolling the dice----------------------------------------------------
 0000189B 4C 65 74 27 73	     dice_roll byte "Let's roll the dice. Enter 1 to roll the dice", 0
	   20 72 6F 6C 6C
	   20 74 68 65 20
	   64 69 63 65 2E
	   20 45 6E 74 65
	   72 20 31 20 74
	   6F 20 72 6F 6C
	   6C 20 74 68 65
	   20 64 69 63 65
	   00
 000018C9 52 6F 6C 6C 69		dice_roll_status byte "Rolling.../" ,0
	   6E 67 2E 2E 2E
	   2F 00
 000018D5 4D 75 73 74 20		dice_roll_error_message byte "Must enter 1. Try again", 0 
	   65 6E 74 65 72
	   20 31 2E 20 54
	   72 79 20 61 67
	   61 69 6E 00

				;--------------------------------------------------------------_miscelenous_ messages--------------------------------------------------------------------- 

 000018ED 43 68 6F 6F 73	     welcome_other byte "Choose 1 to 5, Try Again", 0
	   65 20 31 20 74
	   6F 20 35 2C 20
	   54 72 79 20 41
	   67 61 69 6E 00
 00001906 59 6F 75 20 73	     sellProductString byte "You sold an item", 0
	   6F 6C 64 20 61
	   6E 20 69 74 65
	   6D 00

 00001917 20 20 59 62 20	     bankruptString  byte "  Yb  dP                8                                       8               8                     w      8 8 8", 0ah
	   20 64 50 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 38
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 38
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   38 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 77 20 20
	   20 20 20 20 38
	   20 38 20 38 0A
 0000198A  20 20 20 59 62				      byte "   YbdP  .d8b. 8   8    88b. .d88b .d8b .d88 8d8b.d8b. .d88b    88b. .d88 8d8b. 8.dP 8d8b 8   8 88b. w8ww    8 8 8", 0ah
	   64 50 20 20 2E
	   64 38 62 2E 20
	   38 20 20 20 38
	   20 20 20 20 38
	   38 62 2E 20 2E
	   64 38 38 62 20
	   2E 64 38 62 20
	   2E 64 38 38 20
	   38 64 38 62 2E
	   64 38 62 2E 20
	   2E 64 38 38 62
	   20 20 20 20 38
	   38 62 2E 20 2E
	   64 38 38 20 38
	   64 38 62 2E 20
	   38 2E 64 50 20
	   38 64 38 62 20
	   38 20 20 20 38
	   20 38 38 62 2E
	   20 77 38 77 77
	   20 20 20 20 38
	   20 38 20 38 0A
 000019FD  20 20 20 20 59				      byte "    YP   8' .8 8b d8    8  8 8.dP' 8    8  8 8P Y8P Y8 8.dP'    8  8 8  8 8P Y8 88b  8P   8b d8 8  8  8      * * *", 0ah
	   50 20 20 20 38
	   27 20 2E 38 20
	   38 62 20 64 38
	   20 20 20 20 38
	   20 20 38 20 38
	   2E 64 50 27 20
	   38 20 20 20 20
	   38 20 20 38 20
	   38 50 20 59 38
	   50 20 59 38 20
	   38 2E 64 50 27
	   20 20 20 20 38
	   20 20 38 20 38
	   20 20 38 20 38
	   50 20 59 38 20
	   38 38 62 20 20
	   38 50 20 20 20
	   38 62 20 64 38
	   20 38 20 20 38
	   20 20 38 20 20
	   20 20 20 20 2A
	   20 2A 20 2A 0A
 00001A70  20 20 20 20 38				      byte "    88   `Y8P' `Y8P8    88P' `Y88P `Y8P `Y88 8   8   8 `Y88P    88P' `Y88 8   8 8 Yb 8    `Y8P8 88P'  Y8P    w w w", 0ah
	   38 20 20 20 60
	   59 38 50 27 20
	   60 59 38 50 38
	   20 20 20 20 38
	   38 50 27 20 60
	   59 38 38 50 20
	   60 59 38 50 20
	   60 59 38 38 20
	   38 20 20 20 38
	   20 20 20 38 20
	   60 59 38 38 50
	   20 20 20 20 38
	   38 50 27 20 60
	   59 38 38 20 38
	   20 20 20 38 20
	   38 20 59 62 20
	   38 20 20 20 20
	   60 59 38 50 38
	   20 38 38 50 27
	   20 20 59 38 50
	   20 20 20 20 77
	   20 77 20 77 0A
 00001AE3  20 20 20 20 20					 byte "                                                                                                8                 ",0
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 38 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 00


 00001B56 59 6F 75 20 6A	     startBussinessString byte "You just started a new bussiness", 0
	   75 73 74 20 73
	   74 61 72 74 65
	   64 20 61 20 6E
	   65 77 20 62 75
	   73 73 69 6E 65
	   73 73 00
 00001B77 59 6F 75 20 62	     buyLotteryString byte "You bought a lottery", 0
	   6F 75 67 68 74
	   20 61 20 6C 6F
	   74 74 65 72 79
	   00
 00001B8C 59 6F 75 20 69	     investString byte "You invested in a company", 0
	   6E 76 65 73 74
	   65 64 20 69 6E
	   20 61 20 63 6F
	   6D 70 61 6E 79
	   00
 00001BA6 59 6F 75 20 62	     buyCarString byte "You bought a car", 0
	   6F 75 67 68 74
	   20 61 20 63 61
	   72 00
 00001BB7 43 75 72 72 65	     currentMoneyString byte "Current Balance - ", 0
	   6E 74 20 42 61
	   6C 61 6E 63 65
	   20 2D 20 00
 00001BCA 4E 6F 77 20 79	     userString1 byte "Now you have ", 0
	   6F 75 20 68 61
	   76 65 20 00
 00001BD8 44 6F 20 79 6F	     userDecision byte "Do you want to play again?( 1. Yes  2. No )--> ", 0
	   75 20 77 61 6E
	   74 20 74 6F 20
	   70 6C 61 79 20
	   61 67 61 69 6E
	   3F 28 20 31 2E
	   20 59 65 73 20
	   20 32 2E 20 4E
	   6F 20 29 2D 2D
	   3E 20 00
 00001C08 59 6F 75 20 64	     noMoney byte "You don't have enough money to continue the game", 0
	   6F 6E 27 74 20
	   68 61 76 65 20
	   65 6E 6F 75 67
	   68 20 6D 6F 6E
	   65 79 20 74 6F
	   20 63 6F 6E 74
	   69 6E 75 65 20
	   74 68 65 20 67
	   61 6D 65 00
 00001C39 24 00			     dollar byte "$", 0

 00001C3B 54 68 65 20 67		exit_desktop_message byte "The game has been exited ", 0
	   61 6D 65 20 68
	   61 73 20 62 65
	   65 6E 20 65 78
	   69 74 65 64 20
	   00


				;--------------------------------------------------------------_varibles_declared---------------------------------------------------------------------

 00001C55 00000000		     random_choice dword ? ; dice value after rolling
 00001C59 000003E8		     total_money dword 1000	; Initial amount of money given to players

 00001C5D  0000003C [		     property_list word 60 dup(0)  ; Array to store assets
	    0000
	   ]

				     ;----------------------------------------------((itemList))-------------------------------------
 00001CD5 20 5F 5F 20 5F	     item_list byte " __ __                                _                        ", 0ah
	   5F 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 5F 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 0A
 00001D15  7C 20 20 7C 20				byte "|  |  |___ _ _ ___    ___ ___ ___ ___| |_ ___    ___ ___ ___   ", 0ah
	   20 7C 5F 5F 5F
	   20 5F 20 5F 20
	   5F 5F 5F 20 20
	   20 20 5F 5F 5F
	   20 5F 5F 5F 20
	   5F 5F 5F 20 5F
	   5F 5F 7C 20 7C
	   5F 20 5F 5F 5F
	   20 20 20 20 5F
	   5F 5F 20 5F 5F
	   5F 20 5F 5F 5F
	   20 20 20 0A
 00001D55  7C 5F 20 20 20				byte "|_   _| . | | |  _|  | .'|_ -|_ -| -_|  _|_ -|  | .'|  _| -_|", 0ah
	   5F 7C 20 2E 20
	   7C 20 7C 20 7C
	   20 20 5F 7C 20
	   20 7C 20 2E 27
	   7C 5F 20 2D 7C
	   5F 20 2D 7C 20
	   2D 5F 7C 20 20
	   5F 7C 5F 20 2D
	   7C 20 20 7C 20
	   2E 27 7C 20 20
	   5F 7C 20 2D 5F
	   7C 0A
 00001D93  20 20 7C 5F 7C				byte "  |_| |___|___|_|    |__,|___|___|___|_| |___|  |__,|_| |___|_|", 0
	   20 7C 5F 5F 5F
	   7C 5F 5F 5F 7C
	   5F 7C 20 20 20
	   20 7C 5F 5F 2C
	   7C 5F 5F 5F 7C
	   5F 5F 5F 7C 5F
	   5F 5F 7C 5F 7C
	   20 7C 5F 5F 5F
	   7C 20 20 7C 5F
	   5F 2C 7C 5F 7C
	   20 7C 5F 5F 5F
	   7C 5F 7C 00
							
				     ;-------------------Houses---------------
 00001DD3 50 65 6E 74 68	     Penthouse_item byte "Penthouse", 0
	   6F 75 73 65 00
 00001DDD 47 61 72 64 65	     Garden_Apartment_item byte "Garden Apartment", 0
	   6E 20 41 70 61
	   72 74 6D 65 6E
	   74 00
 00001DEE 53 6B 79 20 4C	     Sky_Loft_item byte "Sky Loft", 0
	   6F 66 74 00

				     ;-------------------Cars-----------------
 00001DF7 41 75 64 69 00	     Audi_item byte "Audi", 0
 00001DFC 4C 61 6D 62 6F	     Lamborghini_item byte "Lamborghini", 0
	   72 67 68 69 6E
	   69 00
 00001E08 46 65 72 72 61	     Ferrari_item byte "Ferrari", 0
	   72 69 00

				     ;-------------------Companies------------

 00001E10 43 6F 6B 61 63	     Cokacola_item byte "Cokacola", 0 
	   6F 6C 61 00
 00001E19 41 63 65 72 00	     Acer_item byte "Acer", 0
 00001E1E 53 70 61 63 65	     SpaceX_item byte "SpaceX", 0
	   58 00
 00001E25 59 61 68 6F 6F	     Yahoo_item byte "Yahoo", 0
	   00



				;;----------------------------(ALL IMAGES)---------------------------------- 

					;-------------------(_buy_house) graphics----------------------------------

 00001E2B 20 20 20 20 20		penthouse_graphic byte "      [][][]  /\  [][][]", 0ah
	   20 5B 5D 5B 5D
	   5B 5D 20 20 2F
	   5C 20 20 5B 5D
	   5B 5D 5B 5D 0A
 00001E44  20 20 20 20 20					   byte "       |::| /____\ |::|", 0ah
	   20 20 7C 3A 3A
	   7C 20 2F 5F 5F
	   5F 5F 5C 20 7C
	   3A 3A 7C 0A
 00001E5C  20 20 20 20 20					   byte "       |[]|_|::::|_|[]|", 0ah
	   20 20 7C 5B 5D
	   7C 5F 7C 3A 3A
	   3A 3A 7C 5F 7C
	   5B 5D 7C 0A
 00001E74  20 20 20 20 20					   byte "       |::::::__::::::|", 0ah
	   20 20 7C 3A 3A
	   3A 3A 3A 3A 5F
	   5F 3A 3A 3A 3A
	   3A 3A 7C 0A
 00001E8C  20 20 20 20 20					   byte "       |:::::/||\:::::|", 0ah
	   20 20 7C 3A 3A
	   3A 3A 3A 2F 7C
	   7C 5C 3A 3A 3A
	   3A 3A 7C 0A
 00001EA4  20 20 20 20 20					   byte "       |:#:::||||::#::|", 0ah
	   20 20 7C 3A 23
	   3A 3A 3A 7C 7C
	   7C 7C 3A 3A 23
	   3A 3A 7C 0A
 00001EBC  20 20 20 20 20					   byte "     ####################", 0
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 23
	   00

 00001ED6 20 20 20 20 20		gardenApartment_graphic byte "                         ^", 0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   5E 0A
 00001EF1  20 20 20 20 20						    byte "            _______     ^^^", 0ah
	   20 20 20 20 20
	   20 20 5F 5F 5F
	   5F 5F 5F 5F 20
	   20 20 20 20 5E
	   5E 5E 0A
 00001F0D  20 20 20 20 20					         byte "           |xxxxxxx|  _^^^^^_", 0ah
	   20 20 20 20 20
	   20 7C 78 78 78
	   78 78 78 78 7C
	   20 20 5F 5E 5E
	   5E 5E 5E 5F 0A
 00001F2B  20 20 20 20 20					         byte "           |xxxxxxx| | [][]  |", 0ah
	   20 20 20 20 20
	   20 7C 78 78 78
	   78 78 78 78 7C
	   20 7C 20 5B 5D
	   5B 5D 20 20 7C
	   0A
 00001F4A  20 20 20 20 20					         byte "        ______xxxxx| |[][][] |", 0ah
	   20 20 20 5F 5F
	   5F 5F 5F 5F 78
	   78 78 78 78 7C
	   20 7C 5B 5D 5B
	   5D 5B 5D 20 7C
	   0A
 00001F69  20 20 20 20 20					         byte "       |++++++|xxxx| | [][][]|", 0ah
	   20 20 7C 2B 2B
	   2B 2B 2B 2B 7C
	   78 78 78 78 7C
	   20 7C 20 5B 5D
	   5B 5D 5B 5D 7C
	   0A
 00001F88  20 20 20 20 20					         byte "       |++++++|xxxx| |[][][] |", 0ah
	   20 20 7C 2B 2B
	   2B 2B 2B 2B 7C
	   78 78 78 78 7C
	   20 7C 5B 5D 5B
	   5D 5B 5D 20 7C
	   0A
 00001FA7  20 20 20 20 20						    byte "       |++++++|xxxx| | [][][]|", 0ah
	   20 20 7C 2B 2B
	   2B 2B 2B 2B 7C
	   78 78 78 78 7C
	   20 7C 20 5B 5D
	   5B 5D 5B 5D 7C
	   0A
 00001FC6  20 20 20 20 20						    byte "       |++++++|xxxx| |[][][] |", 0ah
	   20 20 7C 2B 2B
	   2B 2B 2B 2B 7C
	   78 78 78 78 7C
	   20 7C 5B 5D 5B
	   5D 5B 5D 20 7C
	   0A
 00001FE5  20 20 20 20 20						    byte "       |++HH++|xxxx| | [][][]|", 0ah
	   20 20 7C 2B 2B
	   48 48 2B 2B 7C
	   78 78 78 78 7C
	   20 7C 20 5B 5D
	   5B 5D 5B 5D 7C
	   0A
 00002004  20 20 20 20 20						    byte "      #########################", 0
	   20 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 23
	   23 00



					
 00002024 20 20 20 20 20		sky_loft_graphic        byte "         ^                   |~", 0ah
	   20 20 20 20 5E
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 7C
	   7E 0A
 00002044  20 20 20 20 20						    byte "       ^     ^  ^        _|__|__|_           ^   ^", 0ah
	   20 20 5E 20 20
	   20 20 20 5E 20
	   20 5E 20 20 20
	   20 20 20 20 20
	   5F 7C 5F 5F 7C
	   5F 5F 7C 5F 20
	   20 20 20 20 20
	   20 20 20 20 20
	   5E 20 20 20 5E
	   0A
 00002077  20 20 20 20 20					         byte "         ___________    _|  | |  |_    ___________   ^", 0ah
	   20 20 20 20 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   20 20 20 20 5F
	   7C 20 20 7C 20
	   7C 20 20 7C 5F
	   20 20 20 20 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   20 20 20 5E 0A
 000020AE  20 20 20 20 20					         byte "        (__IXIXIXIXI___|_|__|_|__|_|___IXIXIXIXI__)", 0ah
	   20 20 20 28 5F
	   5F 49 58 49 58
	   49 58 49 58 49
	   5F 5F 5F 7C 5F
	   7C 5F 5F 7C 5F
	   7C 5F 5F 7C 5F
	   7C 5F 5F 5F 49
	   58 49 58 49 58
	   49 58 49 5F 5F
	   29 0A
 000020E2  20 20 20 20 20					         byte "        (__|*|*|*|*| [=][=] [=] [=][=] |*|*|*|*|__)", 0ah
	   20 20 20 28 5F
	   5F 7C 2A 7C 2A
	   7C 2A 7C 2A 7C
	   20 5B 3D 5D 5B
	   3D 5D 20 5B 3D
	   5D 20 5B 3D 5D
	   5B 3D 5D 20 7C
	   2A 7C 2A 7C 2A
	   7C 2A 7C 5F 5F
	   29 0A
 00002116  20 20 20 20 20						    byte "        (__|*|*|*|*| [=][=] [=] [=][=] |*|*|*|*|__)", 0ah
	   20 20 20 28 5F
	   5F 7C 2A 7C 2A
	   7C 2A 7C 2A 7C
	   20 5B 3D 5D 5B
	   3D 5D 20 5B 3D
	   5D 20 5B 3D 5D
	   5B 3D 5D 20 7C
	   2A 7C 2A 7C 2A
	   7C 2A 7C 5F 5F
	   29 0A
 0000214A  20 20 20 20 20						    byte "        (__|*|*|*|*| [=][=] [=] [=][=] |*|*|*|*|__)", 0ah
	   20 20 20 28 5F
	   5F 7C 2A 7C 2A
	   7C 2A 7C 2A 7C
	   20 5B 3D 5D 5B
	   3D 5D 20 5B 3D
	   5D 20 5B 3D 5D
	   5B 3D 5D 20 7C
	   2A 7C 2A 7C 2A
	   7C 2A 7C 5F 5F
	   29 0A
 0000217E  20 20 20 20 20						    byte "        (__|*|*|*|*| [=][=] [=] [=][=] |*|*|*|*|__)", 0ah
	   20 20 20 28 5F
	   5F 7C 2A 7C 2A
	   7C 2A 7C 2A 7C
	   20 5B 3D 5D 5B
	   3D 5D 20 5B 3D
	   5D 20 5B 3D 5D
	   5B 3D 5D 20 7C
	   2A 7C 2A 7C 2A
	   7C 2A 7C 5F 5F
	   29 0A
 000021B2  20 20 20 20 20						    byte "        (__|*|*|*|*| [=][=] [=] [=][=] |*|*|*|*|__)", 0ah				        
	   20 20 20 28 5F
	   5F 7C 2A 7C 2A
	   7C 2A 7C 2A 7C
	   20 5B 3D 5D 5B
	   3D 5D 20 5B 3D
	   5D 20 5B 3D 5D
	   5B 3D 5D 20 7C
	   2A 7C 2A 7C 2A
	   7C 2A 7C 5F 5F
	   29 0A
 000021E6  20 20 20 20 20					         byte "      /)(__|*|*|*|*| [=][=] [=] [=][=] |*|*|*|*|__)", 0ah
	   20 2F 29 28 5F
	   5F 7C 2A 7C 2A
	   7C 2A 7C 2A 7C
	   20 5B 3D 5D 5B
	   3D 5D 20 5B 3D
	   5D 20 5B 3D 5D
	   5B 3D 5D 20 7C
	   2A 7C 2A 7C 2A
	   7C 2A 7C 5F 5F
	   29 0A
 0000221A  20 20 20 20 5F						    byte "    _/ )(__|*|*|*|*| [=][=] [=] [=][=] |*|*|*|*|__)_/)_", 0ah
	   2F 20 29 28 5F
	   5F 7C 2A 7C 2A
	   7C 2A 7C 2A 7C
	   20 5B 3D 5D 5B
	   3D 5D 20 5B 3D
	   5D 20 5B 3D 5D
	   5B 3D 5D 20 7C
	   2A 7C 2A 7C 2A
	   7C 2A 7C 5F 5F
	   29 5F 2F 29 5F
	   0A
 00002252  20 20 20 20 20						    byte "     ~^^(__|*|*|*|*| [=][=] [=] [=][=] |*|*|*|*|__) ~~^", 0ah
	   7E 5E 5E 28 5F
	   5F 7C 2A 7C 2A
	   7C 2A 7C 2A 7C
	   20 5B 3D 5D 5B
	   3D 5D 20 5B 3D
	   5D 20 5B 3D 5D
	   5B 3D 5D 20 7C
	   2A 7C 2A 7C 2A
	   7C 2A 7C 5F 5F
	   29 20 7E 7E 5E
	   0A
 0000228A  20 20 20 20 5E						    byte "    ^~~ (__|*|*|*|*| [=][=] [=] [=][=] |*|*|*|*|__)~~^", 0ah
	   7E 7E 20 28 5F
	   5F 7C 2A 7C 2A
	   7C 2A 7C 2A 7C
	   20 5B 3D 5D 5B
	   3D 5D 20 5B 3D
	   5D 20 5B 3D 5D
	   5B 3D 5D 20 7C
	   2A 7C 2A 7C 2A
	   7C 2A 7C 5F 5F
	   29 7E 7E 5E 0A
 000022C1  20 20 20 20 23						    byte "    ###################################################", 0
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 23
	   00




				;-------------------(_Sell_a_product_) graphics----------------------------------


 000022F9 20 20 20 20 20		piano_graphic  byte "             ____", 0ah
	   20 20 20 20 20
	   20 20 20 5F 5F
	   5F 5F 0A
 0000230B  20 20 20 20 20					byte "            | |  \", 0ah			
	   20 20 20 20 20
	   20 20 7C 20 7C
	   20 20 5C 0A
 0000231E  20 20 20 20 20					byte "            | |   \________", 0ah
	   20 20 20 20 20
	   20 20 7C 20 7C
	   20 20 20 5C 5F
	   5F 5F 5F 5F 5F
	   5F 5F 0A
 0000233A  20 20 20 20 20					byte "           _|_|____________)", 0ah
	   20 20 20 20 20
	   20 5F 7C 5F 7C
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 29 0A
 00002357  20 20 2F 7C 20					byte "  /|      /   |  __________)", 0ah
	   20 20 20 20 20
	   2F 20 20 20 7C
	   20 20 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 29 0A
 00002374  20 20 7C 7C 5F					byte "  ||__   /____|,'  ________|", 0ah
	   5F 20 20 20 2F
	   5F 5F 5F 5F 7C
	   2C 27 20 20 5F
	   5F 5F 5F 5F 5F
	   5F 5F 7C 0A
 00002391  20 20 7C 2F 5F					byte "  |/_/| _|_______,'      )(", 0ah
	   2F 7C 20 5F 7C
	   5F 5F 5F 5F 5F
	   5F 5F 2C 27 20
	   20 20 20 20 20
	   29 28 0A
 000023AD  20 20 7C 20 20					byte "  |  |   :|)(            )(", 0ah
	   7C 20 20 20 3A
	   7C 29 28 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   29 28 0A
 000023C9  20 20 20 20 20					byte "           )(              ", 0
	   20 20 20 20 20
	   20 29 28 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 00

					
 000023E5 20 20 20 20 20		watch_graphic  byte "             _..._", 0ah
	   20 20 20 20 20
	   20 20 20 5F 2E
	   2E 2E 5F 0A
 000023F8  20 20 20 20 20					byte "            |_____|", 0ah
	   20 20 20 20 20
	   20 20 7C 5F 5F
	   5F 5F 5F 7C 0A
 0000240C  20 20 20 20 20					byte "            |_____|", 0ah	
	   20 20 20 20 20
	   20 20 7C 5F 5F
	   5F 5F 5F 7C 0A
 00002420  20 20 20 20 20					byte "            |_____|", 0ah	
	   20 20 20 20 20
	   20 20 7C 5F 5F
	   5F 5F 5F 7C 0A
 00002434  20 20 20 20 20					byte "            |_____|", 0ah	
	   20 20 20 20 20
	   20 20 7C 5F 5F
	   5F 5F 5F 7C 0A
 00002448  20 20 20 20 20					byte "            |_____|", 0ah	
	   20 20 20 20 20
	   20 20 7C 5F 5F
	   5F 5F 5F 7C 0A
 0000245C  20 20 20 20 20					byte "           / _____ \",0ah 
	   20 20 20 20 20
	   20 2F 20 5F 5F
	   5F 5F 5F 20 5C
	   0A
 00002471  20 20 20 20 20					byte "           ||  '  ||", 0ah
	   20 20 20 20 20
	   20 7C 7C 20 20
	   27 20 20 7C 7C
	   0A
 00002486  20 20 20 20 20					byte "           ||  |  ||", 0ah
	   20 20 20 20 20
	   20 7C 7C 20 20
	   7C 20 20 7C 7C
	   0A
 0000249B  20 20 20 20 20					byte "           ||  |  ||)", 0ah
	   20 20 20 20 20
	   20 7C 7C 20 20
	   7C 20 20 7C 7C
	   29 0A
 000024B1  20 20 20 20 20					byte "           ||__.__||", 0ah
	   20 20 20 20 20
	   20 7C 7C 5F 5F
	   2E 5F 5F 7C 7C
	   0A
 000024C6  20 20 20 20 20					byte "           \_______/", 0ah
	   20 20 20 20 20
	   20 5C 5F 5F 5F
	   5F 5F 5F 5F 2F
	   0A
 000024DB  20 20 20 20 20					byte "            |_____|", 0ah
	   20 20 20 20 20
	   20 20 7C 5F 5F
	   5F 5F 5F 7C 0A
 000024EF  20 20 20 20 20					byte "            |_____|", 0ah
	   20 20 20 20 20
	   20 20 7C 5F 5F
	   5F 5F 5F 7C 0A
 00002503  20 20 20 20 20					byte "            |_____|", 0ah
	   20 20 20 20 20
	   20 20 7C 5F 5F
	   5F 5F 5F 7C 0A
 00002517  20 20 20 20 20					byte "            |_____|", 0ah
	   20 20 20 20 20
	   20 20 7C 5F 5F
	   5F 5F 5F 7C 0A
 0000252B  20 20 20 20 20					byte "            |_   _|", 0ah				
	   20 20 20 20 20
	   20 20 7C 5F 20
	   20 20 5F 7C 0A
 0000253F  20 20 20 20 20					byte "              ```", 0	
	   20 20 20 20 20
	   20 20 20 20 60
	   60 60 00



				;-------------------(_buy_a_car_) graphics----------------------------------

 00002551 20 20 20 20 20		lamborghini_graphic  byte "                              _.-=*_-         _", 0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   5F 2E 2D 3D 2A
	   5F 2D 20 20 20
	   20 20 20 20 20
	   20 5F 0A
 00002581  20 20 20 20 20					      byte "                         _.-=*   _-          | ||*******---._______     __.. ", 0ah	
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   5F 2E 2D 3D 2A
	   20 20 20 5F 2D
	   20 20 20 20 20
	   20 20 20 20 20
	   7C 20 7C 7C 2A
	   2A 2A 2A 2A 2A
	   2A 2D 2D 2D 2E
	   5F 5F 5F 5F 5F
	   5F 5F 20 20 20
	   20 20 5F 5F 2E
	   2E 20 0A
 000025CF  20 20 20 20 20						 byte "             ___.===****-.______-,,,,,,,,,,,,`-''----* ****       *****  __'", 0ah	
	   20 20 20 20 20
	   20 20 20 5F 5F
	   5F 2E 3D 3D 3D
	   2A 2A 2A 2A 2D
	   2E 5F 5F 5F 5F
	   5F 5F 2D 2C 2C
	   2C 2C 2C 2C 2C
	   2C 2C 2C 2C 2C
	   60 2D 27 27 2D
	   2D 2D 2D 2A 20
	   2A 2A 2A 2A 20
	   20 20 20 20 20
	   20 2A 2A 2A 2A
	   2A 20 20 5F 5F
	   27 0A
 0000261C  20 20 20 20 20					      byte "      __.--**     __        ,'                   o \           __        [__|", 0ah	
	   20 5F 5F 2E 2D
	   2D 2A 2A 20 20
	   20 20 20 5F 5F
	   20 20 20 20 20
	   20 20 20 2C 27
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 6F
	   20 5C 20 20 20
	   20 20 20 20 20
	   20 20 20 5F 5F
	   20 20 20 20 20
	   20 20 20 5B 5F
	   5F 7C 0A
 0000266A  20 5F 5F 2D 2A					      byte " __-**=======.--""  ""--.=================================.--**  **--.=======:             ", 0ah	
	   2A 3D 3D 3D 3D
	   3D 3D 3D 2E 2D
	   2D 22 20 20 22
	   2D 2D 2E 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 2E 2D 2D 2A
	   2A 20 20 2A 2A
	   2D 2D 2E 3D 3D
	   3D 3D 3D 3D 3D
	   3A 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 0A
 000026C4  5D 20 20 20 20					      byte "]       [w] : /        \ : |========================|    : /        \ :  [w] :             ", 0ah	
	   20 20 20 5B 77
	   5D 20 3A 20 2F
	   20 20 20 20 20
	   20 20 20 5C 20
	   3A 20 7C 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 7C 20 20
	   20 20 3A 20 2F
	   20 20 20 20 20
	   20 20 20 5C 20
	   3A 20 20 5B 77
	   5D 20 3A 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 0A
 00002720  56 5F 5F 5F 5F					      byte "V___________:|          |: |========================|    :|          |:   _-               ", 0ah
	   5F 5F 5F 5F 5F
	   5F 5F 3A 7C 20
	   20 20 20 20 20
	   20 20 20 20 7C
	   3A 20 7C 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 7C 20 20
	   20 20 3A 7C 20
	   20 20 20 20 20
	   20 20 20 20 7C
	   3A 20 20 20 5F
	   2D 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 0A
 0000277C  20 56 5F 5F 5F					      byte " V__________: \        / :_|=======================/_____: \        / :__-*                ", 0ah
	   5F 5F 5F 5F 5F
	   5F 5F 3A 20 5C
	   20 20 20 20 20
	   20 20 20 2F 20
	   3A 5F 7C 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 2F 5F 5F 5F
	   5F 5F 3A 20 5C
	   20 20 20 20 20
	   20 20 20 2F 20
	   3A 5F 5F 2D 2A
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 0A
 000027D8  20 2D 2D 2D 2D					      byte " -----------'  *-____-*  `-------------------------------'  *-____-*                       ", 0
	   2D 2D 2D 2D 2D
	   2D 2D 27 20 20
	   2A 2D 5F 5F 5F
	   5F 2D 2A 20 20
	   60 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 27 20 20
	   2A 2D 5F 5F 5F
	   5F 2D 2A 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 00
								      						
					
 00002834 20 20 20 20 20		ferrari_graphic byte "                       ___..............._", 0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 5F 5F
	   5F 2E 2E 2E 2E
	   2E 2E 2E 2E 2E
	   2E 2E 2E 2E 2E
	   2E 5F 0A
 0000285F  09 20 20 20 20					      byte "	      __.. ' _'.******\\********- .`-                                             ", 0ah						  	
	   20 20 5F 5F 2E
	   2E 20 27 20 5F
	   27 2E 2A 2A 2A
	   2A 2A 2A 5C 5C
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2D 20
	   2E 60 2D 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 0A
 000028B3  20 20 5F 5F 5F						 byte "  ______.-'         (_) |      \\           ` \\`-.                                  ", 0ah	
	   5F 5F 5F 2E 2D
	   27 20 20 20 20
	   20 20 20 20 20
	   28 5F 29 20 7C
	   20 20 20 20 20
	   20 5C 5C 20 20
	   20 20 20 20 20
	   20 20 20 20 60
	   20 5C 5C 60 2D
	   2E 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   0A
 00002909  20 2F 5F 20 20					      byte " /_       --------------'-------\\---....______\\__`.`  -..___                       ", 0ah	
	   20 20 20 20 20
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 27
	   2D 2D 2D 2D 2D
	   2D 2D 5C 5C 2D
	   2D 2D 2E 2E 2E
	   2E 5F 5F 5F 5F
	   5F 5F 5C 5C 5F
	   5F 60 2E 60 20
	   20 2D 2E 2E 5F
	   5F 5F 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   0A
 0000295F  20 7C 20 54 20					      byte " | T      _.----._           Xxx|x...           |          _.._`--. _                ", 0ah	
	   20 20 20 20 20
	   5F 2E 2D 2D 2D
	   2D 2E 5F 20 20
	   20 20 20 20 20
	   20 20 20 20 58
	   78 78 7C 78 2E
	   2E 2E 20 20 20
	   20 20 20 20 20
	   20 20 20 7C 20
	   20 20 20 20 20
	   20 20 20 20 5F
	   2E 2E 5F 60 2D
	   2D 2E 20 5F 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   0A
 000029B5  20 7C 20 7C 20					      byte " | |    .' ..--.. `.         XXX|XXXXXXXXXxx==  |       .'.---..`.     -._           ", 0ah	
	   20 20 20 2E 27
	   20 2E 2E 2D 2D
	   2E 2E 20 60 2E
	   20 20 20 20 20
	   20 20 20 20 58
	   58 58 7C 58 58
	   58 58 58 58 58
	   58 58 78 78 3D
	   3D 20 20 7C 20
	   20 20 20 20 20
	   20 2E 27 2E 2D
	   2D 2D 2E 2E 60
	   2E 20 20 20 20
	   20 2D 2E 5F 20
	   20 20 20 20 20
	   20 20 20 20 20
	   0A
 00002A0B  20 5C 5F 6A 20					      byte " \_j   /  /  __  \  \        XXX|XXXXXXXXXXX==  |      / /  __  \ \        `-.       ", 0ah
	   20 20 2F 20 20
	   2F 20 20 5F 5F
	   20 20 5C 20 20
	   5C 20 20 20 20
	   20 20 20 20 58
	   58 58 7C 58 58
	   58 58 58 58 58
	   58 58 58 58 3D
	   3D 20 20 7C 20
	   20 20 20 20 20
	   2F 20 2F 20 20
	   5F 5F 20 20 5C
	   20 5C 20 20 20
	   20 20 20 20 20
	   60 2D 2E 20 20
	   20 20 20 20 20
	   0A
 00002A61  20 20 5F 7C 20					      byte "  _|  |  |  /  \  |  |       XXX|**'            |     / |  /  \  | |          |      ", 0ah
	   20 7C 20 20 7C
	   20 20 2F 20 20
	   5C 20 20 7C 20
	   20 7C 20 20 20
	   20 20 20 20 58
	   58 58 7C 2A 2A
	   27 20 20 20 20
	   20 20 20 20 20
	   20 20 20 7C 20
	   20 20 20 20 2F
	   20 7C 20 20 2F
	   20 20 5C 20 20
	   7C 20 7C 20 20
	   20 20 20 20 20
	   20 20 20 7C 20
	   20 20 20 20 20
	   0A
 00002AB7  20 7C 5F 5F 5C					      byte " |__\_j  |  \__/  |  L__________|_______________|_____j |  \__/  | L__________J      ", 0ah
	   5F 6A 20 20 7C
	   20 20 5C 5F 5F
	   2F 20 20 7C 20
	   20 4C 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 7C 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 7C 5F
	   5F 5F 5F 5F 6A
	   20 7C 20 20 5C
	   5F 5F 2F 20 20
	   7C 20 4C 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 4A 20
	   20 20 20 20 20
	   0A
 00002B0D  20 20 20 20 20						 byte "      `'\ \      / ./__________________________________\ \      / /___________\      ", 0ah
	   20 60 27 5C 20
	   5C 20 20 20 20
	   20 20 2F 20 2E
	   2F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5C 20 5C 20 20
	   20 20 20 20 2F
	   20 2F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5C 20
	   20 20 20 20 20
	   0A
 00002B63  20 20 20 20 20						 byte "         `.`----'.'                                     `.`----'.'                   ", 0
	   20 20 20 20 60
	   2E 60 2D 2D 2D
	   2D 27 2E 27 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 60 2E 60 2D
	   2D 2D 2D 27 2E
	   27 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   00

									
 00002BB9 20 20 20 20 20		audi_graphic   byte "                     ___..................____", 0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 5F 5F 5F 2E
	   2E 2E 2E 2E 2E
	   2E 2E 2E 2E 2E
	   2E 2E 2E 2E 2E
	   2E 2E 5F 5F 5F
	   5F 0A
 00002BE8  20 20 20 20 20					byte "             _..--''~_______   _____...----~~~\\", 0ah
	   20 20 20 20 20
	   20 20 20 5F 2E
	   2E 2D 2D 27 27
	   7E 5F 5F 5F 5F
	   5F 5F 5F 20 20
	   20 5F 5F 5F 5F
	   5F 2E 2E 2E 2D
	   2D 2D 2D 7E 7E
	   7E 5C 5C 0A
 00002C19  20 20 20 20 20					byte "         __.'    .-'~       \\~      [_`.7     \\", 0ah	
	   20 20 20 20 5F
	   5F 2E 27 20 20
	   20 20 2E 2D 27
	   7E 20 20 20 20
	   20 20 20 5C 5C
	   7E 20 20 20 20
	   20 20 5B 5F 60
	   2E 37 20 20 20
	   20 20 5C 5C 0A
 00002C4B  20 20 20 2E 2D					byte "   .---~~      .'            \\           __..--\\_", 0ah	
	   2D 2D 7E 7E 20
	   20 20 20 20 20
	   2E 27 20 20 20
	   20 20 20 20 20
	   20 20 20 20 5C
	   5C 20 20 20 20
	   20 20 20 20 20
	   20 20 5F 5F 2E
	   2E 2D 2D 5C 5C
	   5F 0A
 00002C7F  20 20 2F 20 20					byte "  /             `-._          \\   _...~~~_..---~  ~~~~~~~~~~~~--.._", 0ah	
	   20 20 20 20 20
	   20 20 20 20 20
	   20 60 2D 2E 5F
	   20 20 20 20 20
	   20 20 20 20 20
	   5C 5C 20 20 20
	   5F 2E 2E 2E 7E
	   7E 7E 5F 2E 2E
	   2D 2D 2D 7E 20
	   20 7E 7E 7E 7E
	   7E 7E 7E 7E 7E
	   7E 7E 7E 2D 2D
	   2E 2E 5F 0A
 00002CC4  20 20 5C 20 20					byte "  \              /  ~~~~~~----_\`-~_-~~__          ~~~~~~~---.._    ~--.__", 0ah	
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 2F 20 20
	   7E 7E 7E 7E 7E
	   7E 2D 2D 2D 2D
	   5F 5C 60 2D 7E
	   5F 2D 7E 7E 5F
	   5F 20 20 20 20
	   20 20 20 20 20
	   20 7E 7E 7E 7E
	   7E 7E 7E 2D 2D
	   2D 2E 2E 5F 20
	   20 20 20 7E 2D
	   2D 2E 5F 5F 0A
 00002D0F  20 20 20 5C 20					byte "   \     _       |==            |   ~--___--------...__          `-   _.--***|",0ah 
	   20 20 20 20 5F
	   20 20 20 20 20
	   20 20 7C 3D 3D
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 7C 20 20
	   20 7E 2D 2D 5F
	   5F 5F 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2E 2E 2E 5F 5F
	   20 20 20 20 20
	   20 20 20 20 20
	   60 2D 20 20 20
	   5F 2E 2D 2D 2A
	   2A 2A 7C 0A
 00002D5E  20 20 20 20 5C					byte "    \ __/.-._\   |              |            ~~~~--.  `-._ ___...--~~~_.'|_Y |", 0ah
	   20 5F 5F 2F 2E
	   2D 2E 5F 5C 20
	   20 20 7C 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 7C 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   7E 7E 7E 7E 2D
	   2D 2E 20 20 60
	   2D 2E 5F 20 5F
	   5F 5F 2E 2E 2E
	   2D 2D 7E 7E 7E
	   5F 2E 27 7C 5F
	   59 20 7C 0A
 00002DAD  20 20 20 20 20					byte "     `--'|/~_\\  |              |     _____           _.~~~__..--~~_.-~~~.-~/", 0ah
	   60 2D 2D 27 7C
	   2F 7E 5F 5C 5C
	   20 20 7C 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 7C 20 20
	   20 20 20 5F 5F
	   5F 5F 5F 20 20
	   20 20 20 20 20
	   20 20 20 20 5F
	   2E 7E 7E 7E 5F
	   5F 2E 2E 2D 2D
	   7E 7E 5F 2E 2D
	   7E 7E 7E 2E 2D
	   7E 2F 0A
 00002DFB  20 20 20 20 20					byte "       | ||| |\\_|__            |.../.----.._.        | Y |__...--~~_.-~  _/", 0ah
	   20 20 7C 20 7C
	   7C 7C 20 7C 5C
	   5C 5F 7C 5F 5F
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 7C 2E 2E
	   2E 2F 2E 2D 2D
	   2D 2D 2E 2E 5F
	   2E 20 20 20 20
	   20 20 20 20 7C
	   20 59 20 7C 5F
	   5F 2E 2E 2E 2D
	   2D 7E 7E 5F 2E
	   2D 7E 20 20 5F
	   2F 0A
 00002E48  20 20 20 20 20					byte "        ~\\\ || ~|..__---____   |||||  .'~-. \\       |_..-----~~~~   _.~~", 0ah
	   20 20 20 7E 5C
	   5C 5C 20 7C 7C
	   20 7E 7C 2E 2E
	   5F 5F 2D 2D 2D
	   5F 5F 5F 5F 20
	   20 20 7C 7C 7C
	   7C 7C 20 20 2E
	   27 7E 2D 2E 20
	   5C 5C 20 20 20
	   20 20 20 20 7C
	   5F 2E 2E 2D 2D
	   2D 2D 2D 7E 7E
	   7E 7E 20 20 20
	   5F 2E 7E 7E 0A
 00002E93  20 20 20 20 20					byte "          \`-'/ /     ~~~----...|'''|  |/*_*\ \\   |~~'           __.~", 0ah
	   20 20 20 20 20
	   5C 60 2D 27 2F
	   20 2F 20 20 20
	   20 20 7E 7E 7E
	   2D 2D 2D 2D 2E
	   2E 2E 7C 27 27
	   27 7C 20 20 7C
	   2F 2A 5F 2A 5C
	   20 5C 5C 20 20
	   20 7C 7E 7E 27
	   20 20 20 20 20
	   20 20 20 20 20
	   20 5F 5F 2E 7E
	   0A
 00002EDA  20 20 20 20 20					byte "           `~~~'                 ~~-:  ||| ~| |\\  |        __..~~", 0ah
	   20 20 20 20 20
	   20 60 7E 7E 7E
	   27 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 7E 7E
	   2D 3A 20 20 7C
	   7C 7C 20 7E 7C
	   20 7C 5C 5C 20
	   20 7C 20 20 20
	   20 20 20 20 20
	   5F 5F 2E 2E 7E
	   7E 0A
 00002F1D  20 20 20 20 20					byte "                                     ~~|||  | | \\/  _.---~~", 0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 7E 7E 7C
	   7C 7C 20 20 7C
	   20 7C 20 5C 5C
	   2F 20 20 5F 2E
	   2D 2D 2D 7E 7E
	   0A
 00002F5A  20 20 20 20 20					byte "                                       \\\  //  | ~~~", 0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 5C
	   5C 5C 20 20 2F
	   2F 20 20 7C 20
	   7E 7E 7E 0A
 00002F90  20 20 20 20 20					byte "                                        \`-'/  /", 0ah								
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   5C 60 2D 27 2F
	   20 20 2F 0A
 00002FC1  20 20 20 20 20					byte "                                         `~~~~'", 0	
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 60 7E 7E 7E
	   7E 27 00
					


				;-------------------(_invest_) graphics----------------------------------


 00002FF1 20 20 20 20 20		coke_graphic   byte "              __                              ___   __        .ama     ,    ", 0ah
	   20 20 20 20 20
	   20 20 20 20 5F
	   5F 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 5F 5F 5F 20
	   20 20 5F 5F 20
	   20 20 20 20 20
	   20 20 2E 61 6D
	   61 20 20 20 20
	   20 2C 20 20 20
	   20 0A
 0000303E  20 20 20 20 20					byte "           ,d888a                          ,d88888888888ba.  ,88*I)   d     ", 0ah
	   20 20 20 20 20
	   20 2C 64 38 38
	   38 61 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 2C 64
	   38 38 38 38 38
	   38 38 38 38 38
	   38 62 61 2E 20
	   20 2C 38 38 2A
	   49 29 20 20 20
	   64 20 20 20 20
	   20 0A
 0000308B  20 20 20 20 20					byte "          a88']8i                         a88*.8*8)   `*8888:88  * _a8'     ", 0ah	
	   20 20 20 20 20
	   61 38 38 27 5D
	   38 69 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 61 38 38
	   2A 2E 38 2A 38
	   29 20 20 20 60
	   2A 38 38 38 38
	   3A 38 38 20 20
	   2A 20 5F 61 38
	   27 20 20 20 20
	   20 0A
 000030D8  20 20 20 20 20					byte "        .d8P' PP                        .d8P'.8  d)      *8:88:baad8P'      ", 0ah	
	   20 20 20 2E 64
	   38 50 27 20 50
	   50 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   2E 64 38 50 27
	   2E 38 20 20 64
	   29 20 20 20 20
	   20 20 2A 38 3A
	   38 38 3A 62 61
	   61 64 38 50 27
	   20 20 20 20 20
	   20 0A
 00003125  20 20 20 20 20					byte "       ,d8P' ,ama,   .aa,  .ama.g ,mmm  d8P' 8  .8'        88):888P'        ", 0ah	
	   20 20 2C 64 38
	   50 27 20 2C 61
	   6D 61 2C 20 20
	   20 2E 61 61 2C
	   20 20 2E 61 6D
	   61 2E 67 20 2C
	   6D 6D 6D 20 20
	   64 38 50 27 20
	   38 20 20 2E 38
	   27 20 20 20 20
	   20 20 20 20 38
	   38 29 3A 38 38
	   38 50 27 20 20
	   20 20 20 20 20
	   20 0A
 00003172  20 20 20 20 20					byte "      ,d88' d8[ *8..a8*88 ,8I*88[ I88' d88   ]IaI*        d8[               ", 0ah	
	   20 2C 64 38 38
	   27 20 64 38 5B
	   20 2A 38 2E 2E
	   61 38 2A 38 38
	   20 2C 38 49 2A
	   38 38 5B 20 49
	   38 38 27 20 64
	   38 38 20 20 20
	   5D 49 61 49 2A
	   20 20 20 20 20
	   20 20 20 64 38
	   5B 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 0A
 000031BF  20 20 20 20 20					byte "      a88' ]P *bm8mP8'(8'.8I  8[      d88'    `*         .88                ",0ah 
	   20 61 38 38 27
	   20 5D 50 20 2A
	   62 6D 38 6D 50
	   38 27 28 38 27
	   2E 38 49 20 20
	   38 5B 20 20 20
	   20 20 20 64 38
	   38 27 20 20 20
	   20 60 2A 20 20
	   20 20 20 20 20
	   20 20 2E 38 38
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 0A
 0000320C  20 20 20 20 20					byte "     ,88I ]P[  .I'.8     88' ,8' I[  ,88P ,ama    ,ama,  d8[  .ama.g        ", 0ah
	   2C 38 38 49 20
	   5D 50 5B 20 20
	   2E 49 27 2E 38
	   20 20 20 20 20
	   38 38 27 20 2C
	   38 27 20 49 5B
	   20 20 2C 38 38
	   50 20 2C 61 6D
	   61 20 20 20 20
	   2C 61 6D 61 2C
	   20 20 64 38 5B
	   20 20 2E 61 6D
	   61 2E 67 20 20
	   20 20 20 20 20
	   20 0A
 00003259  20 20 20 20 20					byte "     [88' I8, .I' ]8,  ,88B ,d8 aI   (88',88*8)  d8[ *8. 88 ,8I*88[         ", 0ah
	   5B 38 38 27 20
	   49 38 2C 20 2E
	   49 27 20 5D 38
	   2C 20 20 2C 38
	   38 42 20 2C 64
	   38 20 61 49 20
	   20 20 28 38 38
	   27 2C 38 38 2A
	   38 29 20 20 64
	   38 5B 20 2A 38
	   2E 20 38 38 20
	   2C 38 49 2A 38
	   38 5B 20 20 20
	   20 20 20 20 20
	   20 0A
 000032A6  20 20 20 20 20					byte "     ]88  `8888*  '8888* *88P*8m*    I88 88[ 8[ ]P *bm8m88[.8I  8[          ", 0ah
	   5D 38 38 20 20
	   60 38 38 38 38
	   2A 20 20 27 38
	   38 38 38 2A 20
	   2A 38 38 50 2A
	   38 6D 2A 20 20
	   20 20 49 38 38
	   20 38 38 5B 20
	   38 5B 20 5D 50
	   20 2A 62 6D 38
	   6D 38 38 5B 2E
	   38 49 20 20 38
	   5B 20 20 20 20
	   20 20 20 20 20
	   20 0A
 000032F3  20 20 20 20 20					byte "     ]88,          _,,aaaaaa,_       I88 8*  8 ]P[  .I' 88 88' ,8' I[       ", 0ah
	   5D 38 38 2C 20
	   20 20 20 20 20
	   20 20 20 20 5F
	   2C 2C 61 61 61
	   61 61 61 2C 5F
	   20 20 20 20 20
	   20 20 49 38 38
	   20 38 2A 20 20
	   38 20 5D 50 5B
	   20 20 2E 49 27
	   20 38 38 20 38
	   38 27 20 2C 38
	   27 20 49 5B 20
	   20 20 20 20 20
	   20 0A
 00003340  20 20 20 20 20					byte "     `888a,.  ,aadd88888888888bma.   )88,  ,]I I8, .I' )88a8B ,d8 aI        ", 0ah
	   60 38 38 38 61
	   2C 2E 20 20 2C
	   61 61 64 64 38
	   38 38 38 38 38
	   38 38 38 38 38
	   62 6D 61 2E 20
	   20 20 29 38 38
	   2C 20 20 2C 5D
	   49 20 49 38 2C
	   20 2E 49 27 20
	   29 38 38 61 38
	   42 20 2C 64 38
	   20 61 49 20 20
	   20 20 20 20 20
	   20 0A
 0000338D  20 20 20 20 20					byte "       *888888PP*'        `8******8   *888PP'  `8888*  `88P*88P*8m*    ", 0
	   20 20 2A 38 38
	   38 38 38 38 50
	   50 2A 27 20 20
	   20 20 20 20 20
	   20 60 38 2A 2A
	   2A 2A 2A 2A 38
	   20 20 20 2A 38
	   38 38 50 50 27
	   20 20 60 38 38
	   38 38 2A 20 20
	   60 38 38 50 2A
	   38 38 50 2A 38
	   6D 2A 20 20 20
	   20 00
								
 000033D5 2C 61 64 50 50		spacex_graphic   byte ",adPPYba, 8b,dPPYba,  ,adPPYYba,  ,adPPYba,  ,adPPYba, 8b,     ,d8          ", 0ah
	   59 62 61 2C 20
	   38 62 2C 64 50
	   50 59 62 61 2C
	   20 20 2C 61 64
	   50 50 59 59 62
	   61 2C 20 20 2C
	   61 64 50 50 59
	   62 61 2C 20 20
	   2C 61 64 50 50
	   59 62 61 2C 20
	   38 62 2C 20 20
	   20 20 20 2C 64
	   38 20 20 20 20
	   20 20 20 20 20
	   20 0A
 00003422  49 38 5B 20 20					byte "I8[    ** 88P'    *8a **     `Y8 a8*     ** a8P_____88  `Y8, ,8P'           ", 0ah
	   20 20 2A 2A 20
	   38 38 50 27 20
	   20 20 20 2A 38
	   61 20 2A 2A 20
	   20 20 20 20 60
	   59 38 20 61 38
	   2A 20 20 20 20
	   20 2A 2A 20 61
	   38 50 5F 5F 5F
	   5F 5F 38 38 20
	   20 60 59 38 2C
	   20 2C 38 50 27
	   20 20 20 20 20
	   20 20 20 20 20
	   20 0A
 0000346F  20 60 2A 59 38					byte " `*Y8ba,  88       d8 ,adPPPPP88 8b         8PP*******    )888(             ", 0ah
	   62 61 2C 20 20
	   38 38 20 20 20
	   20 20 20 20 64
	   38 20 2C 61 64
	   50 50 50 50 50
	   38 38 20 38 62
	   20 20 20 20 20
	   20 20 20 20 38
	   50 50 2A 2A 2A
	   2A 2A 2A 2A 20
	   20 20 20 29 38
	   38 38 28 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 0A
 000034BC  20 61 61 20 20					byte " aa    ]8I 88b,   ,a8* 88,    ,88 *8a,   ,aa *8b,   ,aa  ,d8* *8b,          ", 0ah	
	   20 20 5D 38 49
	   20 38 38 62 2C
	   20 20 20 2C 61
	   38 2A 20 38 38
	   2C 20 20 20 20
	   2C 38 38 20 2A
	   38 61 2C 20 20
	   20 2C 61 61 20
	   2A 38 62 2C 20
	   20 20 2C 61 61
	   20 20 2C 64 38
	   2A 20 2A 38 62
	   2C 20 20 20 20
	   20 20 20 20 20
	   20 0A
 00003509  60 2A 59 62 62					byte "`*YbbdP*' 88`YbbdP*'  `*8bbdP*Y8  `*Ybbd8*'  `*Ybbd8*' 8P'     `Y8          ", 0ah	
	   64 50 2A 27 20
	   38 38 60 59 62
	   62 64 50 2A 27
	   20 20 60 2A 38
	   62 62 64 50 2A
	   59 38 20 20 60
	   2A 59 62 62 64
	   38 2A 27 20 20
	   60 2A 59 62 62
	   64 38 2A 27 20
	   38 50 27 20 20
	   20 20 20 60 59
	   38 20 20 20 20
	   20 20 20 20 20
	   20 0A
 00003556  20 20 20 20 20					byte "          88  ", 0ah	
	   20 20 20 20 20
	   38 38 20 20 0A
 00003565  20 20 20 20 20					byte "          88                                                                ", 0	
	   20 20 20 20 20
	   38 38 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 00
								

 000035B2 20 20 20 20 20		acer_graphic   byte "              8888b.  .d8888b .d88b. 888d888           ", 0ah
	   20 20 20 20 20
	   20 20 20 20 38
	   38 38 38 62 2E
	   20 20 2E 64 38
	   38 38 38 62 20
	   2E 64 38 38 62
	   2E 20 38 38 38
	   64 38 38 38 20
	   20 20 20 20 20
	   20 20 20 20 20
	   0A
 000035EA  20 20 20 20 20					byte "                 *88bd88P*   d8P  Y8b888P*             ", 0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 2A 38 38
	   62 64 38 38 50
	   2A 20 20 20 64
	   38 50 20 20 59
	   38 62 38 38 38
	   50 2A 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   0A
 00003622  20 20 20 20 20					byte "             .d888888888     88888888888               ", 0ah	
	   20 20 20 20 20
	   20 20 20 2E 64
	   38 38 38 38 38
	   38 38 38 38 20
	   20 20 20 20 38
	   38 38 38 38 38
	   38 38 38 38 38
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   0A
 0000365A  20 20 20 20 20					byte "             888  888Y88b.   Y8b.    888               ", 0ah	
	   20 20 20 20 20
	   20 20 20 38 38
	   38 20 20 38 38
	   38 59 38 38 62
	   2E 20 20 20 59
	   38 62 2E 20 20
	   20 20 38 38 38
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   0A
 00003692  20 20 20 20 20					byte "             *Y888888 *Y8888P *Y8888 888               ", 0	
	   20 20 20 20 20
	   20 20 20 2A 59
	   38 38 38 38 38
	   38 20 2A 59 38
	   38 38 38 50 20
	   2A 59 38 38 38
	   38 20 38 38 38
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   00
								
 000036CA 20 20 20 20 20		yahoo_graphic   byte "                         888 ", 0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   38 38 38 20 0A
 000036E8  20 20 20 20 20					byte "                         888 ", 0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   38 38 38 20 0A
 00003706  20 20 20 20 20					byte "                         888 ", 0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   38 38 38 20 0A
 00003724  20 20 20 20 20					byte "         888  888 8888b. 88888b.  .d88b.  .d88b. ", 0ah	
	   20 20 20 20 38
	   38 38 20 20 38
	   38 38 20 38 38
	   38 38 62 2E 20
	   38 38 38 38 38
	   62 2E 20 20 2E
	   64 38 38 62 2E
	   20 20 2E 64 38
	   38 62 2E 20 0A
 00003756  20 20 20 20 20					byte "         888  888    *88b888 *88bd88**88bd88**88b ", 0ah	
	   20 20 20 20 38
	   38 38 20 20 38
	   38 38 20 20 20
	   20 2A 38 38 62
	   38 38 38 20 2A
	   38 38 62 64 38
	   38 2A 2A 38 38
	   62 64 38 38 2A
	   2A 38 38 62 20
	   0A
 00003789  20 20 20 20 20					byte "         888  888.d888888888  888888  888888  888 ",0ah 
	   20 20 20 20 38
	   38 38 20 20 38
	   38 38 2E 64 38
	   38 38 38 38 38
	   38 38 38 20 20
	   38 38 38 38 38
	   38 20 20 38 38
	   38 38 38 38 20
	   20 38 38 38 20
	   0A
 000037BC  20 20 20 20 20					byte "         Y88b 888888  888888  888Y88..88PY88..88P ", 0ah
	   20 20 20 20 59
	   38 38 62 20 38
	   38 38 38 38 38
	   20 20 38 38 38
	   38 38 38 20 20
	   38 38 38 59 38
	   38 2E 2E 38 38
	   50 59 38 38 2E
	   2E 38 38 50 20
	   0A
 000037EF  20 20 20 20 20					byte "          *Y88888*Y888888888  888 *Y88P*  *Y88P*  ", 0ah
	   20 20 20 20 20
	   2A 59 38 38 38
	   38 38 2A 59 38
	   38 38 38 38 38
	   38 38 38 20 20
	   38 38 38 20 2A
	   59 38 38 50 2A
	   20 20 2A 59 38
	   38 50 2A 20 20
	   0A
 00003822  20 20 20 20 20					byte "              888 ", 0ah
	   20 20 20 20 20
	   20 20 20 20 38
	   38 38 20 0A
 00003835  20 20 20 20 20					byte "         Y8b d88P  ", 0ah
	   20 20 20 20 59
	   38 62 20 64 38
	   38 50 20 20 0A
 00003849  20 20 20 20 20					byte "          *Y88P* ", 0
	   20 20 20 20 20
	   2A 59 38 38 50
	   2A 20 00

				;-------------------(_lottery_) graphics----------------------------------

 0000385B 3A 27 23 23 23		jackpot_graphic   byte ":'########:::'########:::::::::::'##::::'###:::::'######::'##:::'##:'########:::'#######::'########:::::'########:::'########::", 0ah
	   23 23 23 23 23
	   3A 3A 3A 27 23
	   23 23 23 23 23
	   23 23 3A 3A 3A
	   3A 3A 3A 3A 3A
	   3A 3A 3A 27 23
	   23 3A 3A 3A 3A
	   27 23 23 23 3A
	   3A 3A 3A 3A 27
	   23 23 23 23 23
	   23 3A 3A 27 23
	   23 3A 3A 3A 27
	   23 23 3A 27 23
	   23 23 23 23 23
	   23 23 3A 3A 3A
	   27 23 23 23 23
	   23 23 23 3A 3A
	   27 23 23 23 23
	   23 23 23 23 3A
	   3A 3A 3A 3A 27
	   23 23 23 23 23
	   23 23 23 3A 3A
	   3A 27 23 23 23
	   23 23 23 23 23
	   3A 3A 0A
 000038DB  27 23 23 2E 20					   byte "'##. ##. ##:'##. ##. ##:::::::::: ##:::'## ##:::'##... ##: ##::'##:: ##.... ##:'##.... ##:... ##..:::::'##. ##. ##:'##. ##. ##:", 0ah
	   23 23 2E 20 23
	   23 3A 27 23 23
	   2E 20 23 23 2E
	   20 23 23 3A 3A
	   3A 3A 3A 3A 3A
	   3A 3A 3A 20 23
	   23 3A 3A 3A 27
	   23 23 20 23 23
	   3A 3A 3A 27 23
	   23 2E 2E 2E 20
	   23 23 3A 20 23
	   23 3A 3A 27 23
	   23 3A 3A 20 23
	   23 2E 2E 2E 2E
	   20 23 23 3A 27
	   23 23 2E 2E 2E
	   2E 20 23 23 3A
	   2E 2E 2E 20 23
	   23 2E 2E 3A 3A
	   3A 3A 3A 27 23
	   23 2E 20 23 23
	   2E 20 23 23 3A
	   27 23 23 2E 20
	   23 23 2E 20 23
	   23 3A 0A
 0000395B  20 23 23 3A 20					   byte " ##: ##:..:: ##: ##:..::::::::::: ##::'##:. ##:: ##:::..:: ##:'##::: ##:::: ##: ##:::: ##:::: ##::::::: ##: ##:..:: ##: ##:..::", 0ah
	   23 23 3A 2E 2E
	   3A 3A 20 23 23
	   3A 20 23 23 3A
	   2E 2E 3A 3A 3A
	   3A 3A 3A 3A 3A
	   3A 3A 3A 20 23
	   23 3A 3A 27 23
	   23 3A 2E 20 23
	   23 3A 3A 20 23
	   23 3A 3A 3A 2E
	   2E 3A 3A 20 23
	   23 3A 27 23 23
	   3A 3A 3A 20 23
	   23 3A 3A 3A 3A
	   20 23 23 3A 20
	   23 23 3A 3A 3A
	   3A 20 23 23 3A
	   3A 3A 3A 20 23
	   23 3A 3A 3A 3A
	   3A 3A 3A 20 23
	   23 3A 20 23 23
	   3A 2E 2E 3A 3A
	   20 23 23 3A 20
	   23 23 3A 2E 2E
	   3A 3A 0A
 000039DB  2E 20 23 23 23					   byte ". ########::. ########::::::::::: ##:'##:::. ##: ##::::::: #####:::: ########:: ##:::: ##:::: ##:::::::. ########::. ########::", 0ah	
	   23 23 23 23 23
	   3A 3A 2E 20 23
	   23 23 23 23 23
	   23 23 3A 3A 3A
	   3A 3A 3A 3A 3A
	   3A 3A 3A 20 23
	   23 3A 27 23 23
	   3A 3A 3A 2E 20
	   23 23 3A 20 23
	   23 3A 3A 3A 3A
	   3A 3A 3A 20 23
	   23 23 23 23 3A
	   3A 3A 3A 20 23
	   23 23 23 23 23
	   23 23 3A 3A 20
	   23 23 3A 3A 3A
	   3A 20 23 23 3A
	   3A 3A 3A 20 23
	   23 3A 3A 3A 3A
	   3A 3A 3A 2E 20
	   23 23 23 23 23
	   23 23 23 3A 3A
	   2E 20 23 23 23
	   23 23 23 23 23
	   3A 3A 0A
 00003A5B  3A 2E 2E 2E 20					   byte ":... ##. ##::... ##. ##::::'##::: ##: #########: ##::::::: ##. ##::: ##.....::: ##:::: ##:::: ##::::::::... ##. ##::... ##. ##:", 0ah	
	   23 23 2E 20 23
	   23 3A 3A 2E 2E
	   2E 20 23 23 2E
	   20 23 23 3A 3A
	   3A 3A 27 23 23
	   3A 3A 3A 20 23
	   23 3A 20 23 23
	   23 23 23 23 23
	   23 23 3A 20 23
	   23 3A 3A 3A 3A
	   3A 3A 3A 20 23
	   23 2E 20 23 23
	   3A 3A 3A 20 23
	   23 2E 2E 2E 2E
	   2E 3A 3A 3A 20
	   23 23 3A 3A 3A
	   3A 20 23 23 3A
	   3A 3A 3A 20 23
	   23 3A 3A 3A 3A
	   3A 3A 3A 3A 2E
	   2E 2E 20 23 23
	   2E 20 23 23 3A
	   3A 2E 2E 2E 20
	   23 23 2E 20 23
	   23 3A 0A
 00003ADB  27 23 23 3A 20					   byte "'##: ##: ##:'##: ##: ##:::: ##::: ##: ##.... ##: ##::: ##: ##:. ##:: ##:::::::: ##:::: ##:::: ##:::::::'##: ##: ##:'##: ##: ##:",0ah 
	   23 23 3A 20 23
	   23 3A 27 23 23
	   3A 20 23 23 3A
	   20 23 23 3A 3A
	   3A 3A 20 23 23
	   3A 3A 3A 20 23
	   23 3A 20 23 23
	   2E 2E 2E 2E 20
	   23 23 3A 20 23
	   23 3A 3A 3A 20
	   23 23 3A 20 23
	   23 3A 2E 20 23
	   23 3A 3A 20 23
	   23 3A 3A 3A 3A
	   3A 3A 3A 3A 20
	   23 23 3A 3A 3A
	   3A 20 23 23 3A
	   3A 3A 3A 20 23
	   23 3A 3A 3A 3A
	   3A 3A 3A 27 23
	   23 3A 20 23 23
	   3A 20 23 23 3A
	   27 23 23 3A 20
	   23 23 3A 20 23
	   23 3A 0A
 00003B5B  2E 20 23 23 23					   byte ". ########::. ########:::::. ######:: ##:::: ##:. ######:: ##::. ##: ##::::::::. #######::::: ##:::::::. ########::. ########::", 0ah
	   23 23 23 23 23
	   3A 3A 2E 20 23
	   23 23 23 23 23
	   23 23 3A 3A 3A
	   3A 3A 2E 20 23
	   23 23 23 23 23
	   3A 3A 20 23 23
	   3A 3A 3A 3A 20
	   23 23 3A 2E 20
	   23 23 23 23 23
	   23 3A 3A 20 23
	   23 3A 3A 2E 20
	   23 23 3A 20 23
	   23 3A 3A 3A 3A
	   3A 3A 3A 3A 2E
	   20 23 23 23 23
	   23 23 23 3A 3A
	   3A 3A 3A 20 23
	   23 3A 3A 3A 3A
	   3A 3A 3A 2E 20
	   23 23 23 23 23
	   23 23 23 3A 3A
	   2E 20 23 23 23
	   23 23 23 23 23
	   3A 3A 0A
 00003BDB  3A 2E 2E 2E 2E					   byte ":........::::........:::::::......:::..:::::..:::......:::..::::..::..::::::::::.......::::::..:::::::::........::::........:::", 0
	   2E 2E 2E 2E 3A
	   3A 3A 3A 2E 2E
	   2E 2E 2E 2E 2E
	   2E 3A 3A 3A 3A
	   3A 3A 3A 2E 2E
	   2E 2E 2E 2E 3A
	   3A 3A 2E 2E 3A
	   3A 3A 3A 3A 2E
	   2E 3A 3A 3A 2E
	   2E 2E 2E 2E 2E
	   3A 3A 3A 2E 2E
	   3A 3A 3A 3A 2E
	   2E 3A 3A 2E 2E
	   3A 3A 3A 3A 3A
	   3A 3A 3A 3A 3A
	   2E 2E 2E 2E 2E
	   2E 2E 3A 3A 3A
	   3A 3A 3A 2E 2E
	   3A 3A 3A 3A 3A
	   3A 3A 3A 3A 2E
	   2E 2E 2E 2E 2E
	   2E 2E 3A 3A 3A
	   3A 2E 2E 2E 2E
	   2E 2E 2E 2E 3A
	   3A 3A 00







 00000000			.code 
 00000000			main PROC
					;-------------------(Money_Heist_logo and Starting page) print ----------------------------------

 00000000  E8 00000000 E		call crlf
 00000005  E8 00000000 E		call crlf
 0000000A  E8 00000000 E		call crlf
 0000000F  E8 00000000 E		call crlf
 00000014  E8 00000000 E		call crlf
 00000019  BA 00000000 R		mov edx, offset _heist_logo_graphic	
 0000001E  E8 00000000 E	     call writestring
 00000023  E8 00000000 E	     call crlf
 00000028  E8 00000000 E	     call crlf
 0000002D  E8 00000000 E		call crlf
 00000032  E8 00000000 E		call crlf
 00000037  E8 00000000 E		call crlf
 0000003C  E8 00000000 E		call crlf
 00000041  E8 00000000 E		call crlf
 00000046  E8 00000000 E		call crlf

 0000004B  BA 000003CA R		mov edx, offset _gameplay_message_graphic	
 00000050  E8 00000000 E	     call writestring
 00000055  E8 00000000 E	     call crlf
 0000005A  E8 00000000 E	     call crlf

 0000005F  BA 000006C0 R		mov edx, offset _gameplay_option_graphic	
 00000064  E8 00000000 E	     call writestring
 00000069  E8 00000000 E	     call crlf
 0000006E  E8 00000000 E	     call crlf

 00000073  E8 00000000 E		call readint   ;getting input for starting page menu
 00000078  83 F8 01			cmp eax, 1	; compare statement used to compare values with user input (1 to 3)
 0000007B  0F 84 000000D5	     je _game_start		; jump to start game
 00000081  83 F8 02		     cmp eax, 2
 00000084  74 09		     je instruct	;show instruction
 00000086  83 F8 03		     cmp eax, 3
 00000089  0F 84 00002A58		je _Exit		; out of game	



					;-------------------(Money_Heist_GAME_INTRUCTIONS)----------------------------------
 0000008F			instruct:
 0000008F  E8 00000000 E		call clrscr
					
 00000094  E8 00000000 E		call crlf
 00000099  E8 00000000 E		call crlf
 0000009E  E8 00000000 E		call crlf
 000000A3  BA 00000000 R		mov edx, offset _heist_logo_graphic	
 000000A8  E8 00000000 E	     call writestring
 000000AD  E8 00000000 E	     call crlf
 000000B2  E8 00000000 E	     call crlf
 000000B7  E8 00000000 E		call crlf
 000000BC  E8 00000000 E		call crlf
 000000C1  E8 00000000 E		call crlf
 000000C6  E8 00000000 E		call crlf

 000000CB  BA 00000AD8 R		mov edx, offset _instruction_heading
 000000D0  E8 00000000 E	     call writestring
 000000D5  E8 00000000 E	     call crlf
 000000DA  E8 00000000 E	     call crlf
 000000DF  E8 00000000 E		call crlf
 000000E4  E8 00000000 E		call crlf


 000000E9  BA 00000C44 R		mov edx, offset _instruction
 000000EE  E8 00000000 E	     call writestring
 000000F3  E8 00000000 E	     call crlf
 000000F8  E8 00000000 E	     call crlf
 000000FD  E8 00000000 E		call crlf
 00000102  E8 00000000 E		call crlf
 00000107  E8 00000000 E		call crlf

 0000010C  E8 00000000 E		call crlf
 00000111  E8 00000000 E		call crlf
 00000116  E8 00000000 E		call crlf
 0000011B  BA 00000D9E R		mov edx, offset _instruction_screen_selection_message	
 00000120  E8 00000000 E	     call writestring
 00000125  E8 00000000 E	     call crlf
 0000012A  E8 00000000 E	     call crlf
 0000012F  E8 00000000 E		call crlf
 00000134  E8 00000000 E		call crlf
 00000139  E8 00000000 E		call crlf
 0000013E  E8 00000000 E		call crlf


 00000143  E8 00000000 E		call readint ; user input in instruction screen

 00000148  83 F8 01			cmp eax, 1	; compare statement used to compare values with user input (1 or 2)
 0000014B  74 09		     je _game_start		; jump to start game

 0000014D  83 F8 02		     cmp eax, 2
 00000150  0F 84 00002991	     je _Exit            ;exit game
					
					
					



				     ;------------------------------------- heading setup -------------------------------------------
 00000156			_game_start:
 00000156  E8 00000000 E		call clrscr
					

 0000015B  8B 1D 00001C59 R	     mov ebx, total_money
				     

 00000161  BA 00000E03 R	     mov edx, offset _title	; printing  _title
 00000166  E8 00000000 E	     call writestring
 0000016B  E8 00000000 E	     call crlf
 00000170  E8 00000000 E	     call crlf

 00000175  BA 00000FFA R	     mov edx, offset _welcome ; printing welcome_message
 0000017A  E8 00000000 E	     call writestring
 0000017F  E8 00000000 E	     call crlf
 00000184  E8 00000000 E	     call crlf


 00000189			begin:

					
				     
				     ;-------------Character Option setup ------------------
 00000189  BA 00001013 R	     mov edx, offset charOption ; printing character selection option_)
 0000018E  E8 00000000 E	     call writestring


 00000193  E8 00000000 E	     call readint ; get user input
				     ;---------------- respone to the user input for choosing character ------------------
 00000198  83 F8 01		     cmp eax, 1	; compare statement used to compare values with user input (1 to 4 characters, 5 exit)
 0000019B  0F 84 00000D58	     je _Tokyo		; _if equal _jump_ to different player routes
 000001A1  83 F8 02		     cmp eax, 2
 000001A4  0F 84 00001A72	     je _Denver
 000001AA  83 F8 03		     cmp eax, 3
 000001AD  74 18		     je _Professor
 000001AF  83 F8 04		     cmp eax, 4
 000001B2  0F 84 0000278F	     je _Nairobi
 000001B8  83 F8 05		     cmp eax, 5
 000001BB  0F 84 00002926	     je _Exit
 000001C1  0F 85 00002799	     jne _Others

				;-------------------------- Character (Professor) ----------------------------------

				     ;---------------- Professor Route ---------------------------------
 000001C7			     _Professor:                                                                  ; character - Professor
 000001C7  BE 00001C5D R	          mov esi, offset property_list
				          ; -------------show option to professor -----------------------
 000001CC  BA 00001081 R	          mov edx, offset welcome_prof ; print welcome message for professor
 000001D1  E8 00000000 E	          call writestring
 000001D6  E8 00000000 E	          call crlf
 000001DB  E8 00000000 E	          call crlf

 000001E0			professor_startGame:                                                              ; start the loop of 'Professor Route'

 000001E0  BA 00001172 R	          mov edx, offset prof1
 000001E5  E8 00000000 E	          call writestring

 000001EA  8B C3		          mov eax, ebx	; ebx is current storing total money 
 000001EC  E8 00000000 E	          call writedec	; prints money amount

 000001F1  BA 00001C39 R	          mov edx, offset dollar ; prints dollar _sign
 000001F6  E8 00000000 E	          call writestring
 000001FB  E8 00000000 E	          call crlf
 00000200  E8 00000000 E	          call crlf

 00000205  BA 000011AA R	          mov edx, offset main_options ; prints main options
 0000020A  E8 00000000 E	          call writestring
 0000020F  E8 00000000 E	          call crlf
 00000214  E8 00000000 E	          call crlf

				          ;------------roll the dice ---------------------
 00000219  BA 0000189B R	          mov edx, offset dice_roll
 0000021E  E8 00000000 E	          call writestring
 00000223  E8 00000000 E			call crlf

 00000228  EB 0F				jmp _skip_error_prof    

 0000022A			_try_again_prof:

 0000022A  BA 000018D5 R			mov edx, offset dice_roll_error_message
 0000022F  E8 00000000 E	          call writestring
 00000234  E8 00000000 E			call crlf


 00000239			_skip_error_prof:
 00000239  E8 00000000 E			call readint 
 0000023E  83 F8 01			     cmp eax, 1	
 00000241  75 E7		          jne _try_again_prof

 00000243  BA 000018C9 R			mov edx, offset dice_roll_status
 00000248  E8 00000000 E	          call writestring
						
						

 0000024D  EB 00				jmp _random_generate_prof                


				          ;------------ randomly generate numbers between 1 to 7 ------------------ 
 0000024F			_random_generate_prof:
 0000024F  B8 00000006		          mov eax, 6
 00000254  E8 00000000 E	          call randomrange		; generates number 0 to 6
 00000259  83 C0 01		          add eax, 1			; to avoid the number 0, _if 0 than 1. Because our options starts with 1.
 0000025C  A3 00001C55 R	          mov random_choice, eax   ; store the value of eax register so that we can use eax register to store other values
 00000261  B8 00000BB8		          mov eax, 3000            ; delay function- 3secs
 00000266  E8 00000000 E	          call delay
 0000026B  A1 00001C55 R	          mov eax, random_choice
 00000270  E8 00000000 E	          call writedec
 00000275  E8 00000000 E	          call crlf
 0000027A  E8 00000000 E	          call crlf


				          ;--------------------compare result ----------------------------
 0000027F  83 F8 01		          cmp eax, 1			; eax has random (1 to 7 value) from random-choice
 00000282  74 36		          je buyHouse			; _jumps if equal
 00000284  83 F8 02		          cmp eax, 2
 00000287  0F 84 00000293	          je sellProduct
 0000028D  83 F8 03		          cmp eax, 3
 00000290  0F 84 0000044D	          je bankrupt
 00000296  83 F8 04		          cmp eax, 4
 00000299  0F 84 00000497	          je buyCar
 0000029F  83 F8 05		          cmp eax, 5
 000002A2  0F 84 000006F4	          je invest
 000002A8  83 F8 06		          cmp eax, 6
 000002AB  0F 84 0000097C	          je startBusiness
 000002B1  83 F8 07		          cmp eax, 7
 000002B4  0F 84 00000AF7	          je buyLottery


				          ;---------------------show result -------------------------------
 000002BA			          buyHouse:                                                                  ; main option 1 (_buy_house)
 000002BA  BA 00001278 R	               mov edx, offset house_options    ; print options for house
 000002BF  E8 00000000 E	               call writestring
 000002C4  E8 00000000 E	               call crlf

				               ;------------roll the dice ---------------------
 000002C9  BA 0000189B R	          mov edx, offset dice_roll
 000002CE  E8 00000000 E	          call writestring
 000002D3  E8 00000000 E			call crlf

 000002D8  EB 0F				jmp _skip_error_prof_buyhouse   

 000002DA			_try_again_prof_buyhouse:

 000002DA  BA 000018D5 R			mov edx, offset dice_roll_error_message
 000002DF  E8 00000000 E	          call writestring
 000002E4  E8 00000000 E			call crlf


 000002E9			_skip_error_prof_buyhouse:
 000002E9  E8 00000000 E			call readint 
 000002EE  83 F8 01			     cmp eax, 1	
 000002F1  75 E7		          jne _try_again_prof_buyhouse 

 000002F3  BA 000018C9 R			mov edx, offset dice_roll_status
 000002F8  E8 00000000 E	          call writestring	
						

 000002FD  EB 00				jmp _random_generate_prof_buyhouse
				;------------ randomly generate numbers between 1 to 4 ------------------ 
 000002FF			_random_generate_prof_buyhouse: 

 000002FF  B8 00000004		               mov eax, 4
 00000304  E8 00000000 E	               call randomrange
 00000309  83 C0 01		               add eax, 1				; turns 0 value to 1 
 0000030C  A3 00001C55 R	               mov random_choice, eax
 00000311  B8 00000BB8		               mov eax, 3000				; there is a delay before dice roll
 00000316  E8 00000000 E	               call delay
 0000031B  A1 00001C55 R	               mov eax, random_choice
 00000320  E8 00000000 E	               call writedec
 00000325  E8 00000000 E	               call crlf
 0000032A  E8 00000000 E	               call crlf

						  ;---------------------sub_option_ buy house -------------------------------
 0000032F  83 F8 01		               cmp eax, 1
 00000332  74 1B		               je penthouse		; depending on the random number value jump_equal will move to each different route
 00000334  83 F8 02		               cmp eax, 2
 00000337  0F 84 00000091	               je garden
 0000033D  83 F8 03		               cmp eax, 3
 00000340  0F 84 00000107	               je sky
 00000346  83 F8 04		               cmp eax, 4
 00000349  0F 84 0000017D	               je noHouse


 0000034F			               penthouse:                                                                  ; main option 1 sub option 1
 0000034F  B8 00000001		                    mov eax , 1
 00000354  89 06		                    mov [esi], eax
 00000356  83 C6 04		                    add esi, 4
 00000359  BA 000012FE R	                    mov edx, offset house_option1
 0000035E  E8 00000000 E	                    call writestring
 00000363  E8 00000000 E	                    call crlf
 00000368  E8 00000000 E					call crlf
 0000036D  E8 00000000 E					call crlf
 00000372  BA 00001E2B R					mov edx, offset penthouse_graphic
 00000377  E8 00000000 E	                    call writestring
 0000037C  E8 00000000 E	                    call crlf
 00000381  E8 00000000 E					call crlf
 00000386  BA 00001BCA R	                    mov edx, offset userString1
 0000038B  E8 00000000 E	                    call writestring
 00000390  81 EB 00000190	                    sub ebx, 400
 00000396  8B C3		                    mov eax, ebx
 00000398  E8 00000000 E	                    call writedec
 0000039D  BA 00001C39 R	                    mov edx, offset dollar
 000003A2  E8 00000000 E	                    call writestring
 000003A7  E8 00000000 E	                    call crlf
 000003AC  BA 00001BD8 R	                    mov edx, offset userDecision	; print statement that asks user if he wants to play again
 000003B1  E8 00000000 E	                    call writestring
 000003B6  E8 00000000 E	                    call readint				; takes user-input
 000003BB  B9 00000003		                    mov ecx, 3                    ; save a value in ecx. Later in 2050 line, in start section, we will check the ecx value. Based on the value we will know which character these code 
				                                                  ; belongs to currently. It's just use to track the character. We will use it in our future functions
 000003C0  83 F8 01		                    cmp eax, 1                    ; compare user input to 1
 000003C3  0F 84 000025B0	                    je start                      ; if equal, then jump at start
 000003C9  E9 000025DC		                    jmp showItem                     ; otherwise exit


 000003CE			               garden:                                                                  ; main option 1 sub option 2
 000003CE  B8 00000002		                    mov eax , 2
 000003D3  89 06		                    mov [esi], eax
 000003D5  83 C6 04		                    add esi, 4
 000003D8  BA 00001325 R	                    mov edx, offset house_option2
 000003DD  E8 00000000 E	                    call writestring
 000003E2  E8 00000000 E	                    call crlf
 000003E7  E8 00000000 E					call crlf
 000003EC  E8 00000000 E					call crlf
 000003F1  BA 00001ED6 R					mov edx, offset gardenApartment_graphic
 000003F6  E8 00000000 E	                    call writestring
 000003FB  E8 00000000 E	                    call crlf
 00000400  E8 00000000 E					call crlf
 00000405  BA 00001BCA R	                    mov edx, offset userString1
 0000040A  E8 00000000 E	                    call writestring
 0000040F  81 EB 000000C8	                    sub ebx, 200
 00000415  8B C3		                    mov eax, ebx
 00000417  E8 00000000 E	                    call writedec
 0000041C  BA 00001C39 R	                    mov edx, offset dollar
 00000421  E8 00000000 E	                    call writestring
 00000426  E8 00000000 E	                    call crlf
 0000042B  BA 00001BD8 R	                    mov edx, offset userDecision
 00000430  E8 00000000 E	                    call writestring
 00000435  E8 00000000 E	                    call readint				; takes user-input
 0000043A  B9 00000003		                    mov ecx, 3                    ; save a value in ecx. Later in 2050 line, in start section, we will check the ecx value. Based on the value we will know which character these code 
				                                                  ; belongs to currently. It's just use to track the character. We will use it in our future functions
 0000043F  83 F8 01		                    cmp eax, 1                    ; compare user input to 1
 00000442  0F 84 00002531	                    je start                      ; if equal, then jump at start
 00000448  E9 0000255D		                    jmp showItem                     ; otherwise exit


 0000044D			               sky:                                                                  ; main option 1 sub option 3
 0000044D  B8 00000003		                    mov eax , 3
 00000452  89 06		                    mov [esi], eax
 00000454  83 C6 04		                    add esi, 4
 00000457  BA 00001358 R	                    mov edx, offset house_option3
 0000045C  E8 00000000 E	                    call writestring
 00000461  E8 00000000 E	                    call crlf
 00000466  E8 00000000 E					call crlf
 0000046B  E8 00000000 E					call crlf
 00000470  BA 00002024 R					mov edx, offset sky_loft_graphic
 00000475  E8 00000000 E	                    call writestring
 0000047A  E8 00000000 E	                    call crlf
 0000047F  E8 00000000 E					call crlf
 00000484  BA 00001BCA R	                    mov edx, offset userString1
 00000489  E8 00000000 E	                    call writestring
 0000048E  81 EB 0000012C	                    sub ebx, 300
 00000494  8B C3		                    mov eax, ebx
 00000496  E8 00000000 E	                    call writedec
 0000049B  BA 00001C39 R	                    mov edx, offset dollar
 000004A0  E8 00000000 E	                    call writestring
 000004A5  E8 00000000 E	                    call crlf
 000004AA  BA 00001BD8 R	                    mov edx, offset userDecision
 000004AF  E8 00000000 E	                    call writestring
 000004B4  E8 00000000 E	                    call readint				; takes user-input
 000004B9  B9 00000003		                    mov ecx, 3                    ; save a value in ecx. Later in 2050 line, in start section, we will check the ecx value. Based on the value we will know which character these code 
				                                                  ; belongs to currently. It's just use to track the character. We will use it in our future functions
 000004BE  83 F8 01		                    cmp eax, 1                    ; compare user input to 1
 000004C1  0F 84 000024B2	                    je start                      ; if equal, then jump at start
 000004C7  E9 000024DE		                    jmp showItem                     ; otherwise exit


 000004CC			               noHouse:                                                                  ; main option 1 sub option 4
 000004CC  BA 00001384 R	                    mov edx, offset house_option4
 000004D1  E8 00000000 E	                    call writestring
 000004D6  E8 00000000 E	                    call crlf
 000004DB  BA 00001BCA R	                    mov edx, offset userString1
 000004E0  E8 00000000 E	                    call writestring
 000004E5  83 EB 00		                    sub ebx, 0
 000004E8  8B C3		                    mov eax, ebx
 000004EA  E8 00000000 E	                    call writedec
 000004EF  BA 00001C39 R	                    mov edx, offset dollar
 000004F4  E8 00000000 E	                    call writestring
 000004F9  E8 00000000 E	                    call crlf
 000004FE  BA 00001BD8 R	                    mov edx, offset userDecision
 00000503  E8 00000000 E	                    call writestring
 00000508  E8 00000000 E	                    call readint				; takes user-input
 0000050D  B9 00000003		                    mov ecx, 3                    ; save a value in ecx. Later in 2050 line, in start section, we will check the ecx value. Based on the value we will know which character these code 
				                                                  ; belongs to currently. It's just use to track the character. We will use it in our future functions
 00000512  83 F8 01		                    cmp eax, 1                    ; compare user input to 1
 00000515  0F 84 0000245E	                    je start                      ; if equal, then jump at start
 0000051B  E9 0000248A		                    jmp showItem                     ; otherwise exit


 00000520			               sellProduct:                                                                  ; main option 2 (_sell_product)
 00000520  BA 000013C2 R	               mov edx, offset product_options
 00000525  E8 00000000 E	               call writestring
 0000052A  E8 00000000 E	               call crlf

				               ;------------roll the dice ---------------------
 0000052F  BA 0000189B R	          mov edx, offset dice_roll
 00000534  E8 00000000 E	          call writestring
 00000539  E8 00000000 E			call crlf

 0000053E  EB 0F				jmp _skip_error_prof_sellproduct   

 00000540			_try_again_prof_sellproduct:

 00000540  BA 000018D5 R			mov edx, offset dice_roll_error_message
 00000545  E8 00000000 E	          call writestring
 0000054A  E8 00000000 E			call crlf


 0000054F			_skip_error_prof_sellproduct:
 0000054F  E8 00000000 E			call readint 
 00000554  83 F8 01			     cmp eax, 1	
 00000557  75 E7		          jne _try_again_prof_sellproduct 

 00000559  BA 000018C9 R			mov edx, offset dice_roll_status
 0000055E  E8 00000000 E	          call writestring
						
						

 00000563  EB 00				jmp _random_generate_prof_sellproduct 
				;------------ randomly generate numbers between 1 to 3 ------------------ 
 00000565			_random_generate_prof_sellproduct:         

 00000565  B8 00000003		               mov eax, 3
 0000056A  E8 00000000 E	               call randomrange                   ; generate random number 0 to 3
 0000056F  83 C0 01		               add eax, 1
 00000572  A3 00001C55 R	               mov random_choice, eax
 00000577  B8 00000BB8		               mov eax, 3000
 0000057C  E8 00000000 E	               call delay
 00000581  A1 00001C55 R	               mov eax, random_choice
 00000586  E8 00000000 E	               call writedec
 0000058B  E8 00000000 E	               call crlf
 00000590  E8 00000000 E	               call crlf

							;----- comparing _using dice value generated----
 00000595  83 F8 01		               cmp eax, 1
 00000598  74 0E		               je piano
 0000059A  83 F8 02		               cmp eax, 2
 0000059D  74 7E		               je watch
 0000059F  83 F8 03		               cmp eax, 3
 000005A2  0F 84 000000E7	               je noSell

				               ; --------------------------ouput based on the random value------------------------------------
 000005A8			               piano:                                                                  ; main option 2 sub option 1
 000005A8  BA 00001449 R	                    mov edx, offset product_option1
 000005AD  E8 00000000 E	                    call writestring
 000005B2  E8 00000000 E	                    call crlf
 000005B7  E8 00000000 E					call crlf
 000005BC  E8 00000000 E					call crlf
 000005C1  BA 000022F9 R					mov edx, offset piano_graphic
 000005C6  E8 00000000 E	                    call writestring
 000005CB  E8 00000000 E	                    call crlf
 000005D0  E8 00000000 E					call crlf
 000005D5  BA 00001BCA R	                    mov edx, offset userString1
 000005DA  E8 00000000 E	                    call writestring
 000005DF  81 C3 000000C8	                    add ebx, 200
 000005E5  8B C3		                    mov eax, ebx
 000005E7  E8 00000000 E	                    call writedec
 000005EC  BA 00001C39 R	                    mov edx, offset dollar
 000005F1  E8 00000000 E	                    call writestring
 000005F6  E8 00000000 E	                    call crlf
 000005FB  BA 00001BD8 R	                    mov edx, offset userDecision
 00000600  E8 00000000 E	                    call writestring
 00000605  E8 00000000 E	                    call readint
 0000060A  B9 00000003		                    mov ecx, 3
 0000060F  83 F8 01		                    cmp eax, 1
 00000612  0F 84 00002361	                    je start
 00000618  E9 0000238D		                    jmp showItem

 0000061D			               watch:                                                                  ; main option 2 sub option 2
 0000061D  BA 0000146D R	                    mov edx, offset product_option2
 00000622  E8 00000000 E	                    call writestring
 00000627  E8 00000000 E	                    call crlf
 0000062C  E8 00000000 E					call crlf
 00000631  E8 00000000 E					call crlf
 00000636  BA 000023E5 R					mov edx, offset watch_graphic
 0000063B  E8 00000000 E	                    call writestring
 00000640  E8 00000000 E	                    call crlf
 00000645  E8 00000000 E					call crlf
 0000064A  BA 00001BCA R	                    mov edx, offset userString1
 0000064F  E8 00000000 E	                    call writestring
 00000654  83 C3 64		                    add ebx, 100
 00000657  8B C3		                    mov eax, ebx
 00000659  E8 00000000 E	                    call writedec
 0000065E  BA 00001C39 R	                    mov edx, offset dollar
 00000663  E8 00000000 E	                    call writestring
 00000668  E8 00000000 E	                    call crlf
 0000066D  BA 00001BD8 R	                    mov edx, offset userDecision
 00000672  E8 00000000 E	                    call writestring
 00000677  E8 00000000 E	                    call readint
 0000067C  B9 00000003		                    mov ecx, 3
 00000681  83 F8 01		                    cmp eax, 1
 00000684  0F 84 000022EF	                    je start
 0000068A  E9 0000231B		                    jmp showItem

 0000068F			               noSell:                                                                  ; main option 2 sub option 3
 0000068F  BA 00001495 R	                    mov edx, offset product_option3
 00000694  E8 00000000 E	                    call writestring
 00000699  E8 00000000 E	                    call crlf
 0000069E  BA 00001BCA R	                    mov edx, offset userString1
 000006A3  E8 00000000 E	                    call writestring
 000006A8  83 C3 00		                    add ebx, 0
 000006AB  8B C3		                    mov eax, ebx
 000006AD  E8 00000000 E	                    call writedec
 000006B2  BA 00001C39 R	                    mov edx, offset dollar
 000006B7  E8 00000000 E	                    call writestring
 000006BC  E8 00000000 E	                    call crlf
 000006C1  BA 00001BD8 R	                    mov edx, offset userDecision
 000006C6  E8 00000000 E	                    call writestring
 000006CB  E8 00000000 E	                    call readint
 000006D0  B9 00000003		                    mov ecx, 3
 000006D5  83 F8 01		                    cmp eax, 1
 000006D8  0F 84 0000229B	                    je start
 000006DE  E9 000022C7		                    jmp showItem

 000006E3			          bankrupt:
				               
 000006E3  BA 00001917 R	               mov edx, offset bankruptString                                    ; main option 3 (_bank_rupt))
 000006E8  E8 00000000 E	               call writestring
 000006ED  E8 00000000 E	               call crlf
 000006F2  BA 00001BCA R	               mov edx, offset userString1
 000006F7  E8 00000000 E	               call writestring

 000006FC  2B DB		               sub ebx, ebx		; making user balance _zero 
 000006FE  8B C3		               mov eax, ebx
 00000700  E8 00000000 E	               call writedec  
 00000705  BA 00001C39 R	               mov edx, offset dollar
 0000070A  E8 00000000 E	               call writestring
 0000070F  E8 00000000 E	               call crlf
 00000714  BA 00001BD8 R	               mov edx, offset userDecision
 00000719  E8 00000000 E	               call writestring
 0000071E  E8 00000000 E	               call readint
 00000723  B9 00000003		               mov ecx, 3
 00000728  83 F8 01		               cmp eax, 1
 0000072B  0F 84 00002248	               je start
 00000731  E9 00002274		               jmp showItem

				          ; comments same as main option 1
 00000736			          buyCar:                                                                  ; main option 4 (_buy_car)
 00000736  BA 000014AC R	               mov edx, offset car_options
 0000073B  E8 00000000 E	               call writestring
 00000740  E8 00000000 E	               call crlf
				              ;------------roll the dice ---------------------
 00000745  BA 0000189B R	          mov edx, offset dice_roll
 0000074A  E8 00000000 E	          call writestring
 0000074F  E8 00000000 E			call crlf

 00000754  EB 0F				jmp _skip_error_prof_buycar    

 00000756			_try_again_prof_buycar:

 00000756  BA 000018D5 R			mov edx, offset dice_roll_error_message
 0000075B  E8 00000000 E	          call writestring
 00000760  E8 00000000 E			call crlf


 00000765			_skip_error_prof_buycar:
 00000765  E8 00000000 E			call readint 
 0000076A  83 F8 01			     cmp eax, 1	
 0000076D  75 E7		          jne _try_again_prof_buycar 

 0000076F  BA 000018C9 R			mov edx, offset dice_roll_status
 00000774  E8 00000000 E	          call writestring
						
						

 00000779  EB 00				jmp _random_generate_prof_buycar 
				;------------ randomly generate numbers between 1 to 4 ------------------ 
 0000077B			_random_generate_prof_buycar:         
 0000077B  B8 00000004		               mov eax, 4
 00000780  E8 00000000 E	               call randomrange
 00000785  83 C0 01		               add eax, 1
 00000788  A3 00001C55 R	               mov random_choice, eax
 0000078D  B8 00000BB8		               mov eax, 3000
 00000792  E8 00000000 E	               call delay
 00000797  A1 00001C55 R	               mov eax, random_choice
 0000079C  E8 00000000 E	               call writedec
 000007A1  E8 00000000 E	               call crlf
 000007A6  E8 00000000 E	               call crlf
 000007AB  83 F8 01		               cmp eax, 1
 000007AE  74 1B		               je audi
 000007B0  83 F8 02		               cmp eax, 2
 000007B3  0F 84 00000091	               je lamborghini
 000007B9  83 F8 03		               cmp eax, 3
 000007BC  0F 84 00000107	               je ferrari
 000007C2  83 F8 04		               cmp eax, 4
 000007C5  0F 84 0000017D	               je noCar

 000007CB			               audi:   
				                                                               ; main option 4 sub option 1
 000007CB  B8 00000004		                    mov eax , 4
 000007D0  89 06		                    mov [esi], eax
 000007D2  83 C6 04		                    add esi, 4
 000007D5  BA 00001526 R	                    mov edx, offset car_option1
 000007DA  E8 00000000 E	                    call writestring
 000007DF  E8 00000000 E	                    call crlf
 000007E4  E8 00000000 E					call crlf
 000007E9  E8 00000000 E					call crlf
 000007EE  BA 00002BB9 R					mov edx, offset audi_graphic
 000007F3  E8 00000000 E	                    call writestring
 000007F8  E8 00000000 E	                    call crlf
 000007FD  E8 00000000 E					call crlf
 00000802  BA 00001BCA R	                    mov edx, offset userString1
 00000807  E8 00000000 E	                    call writestring
 0000080C  81 EB 0000012C	                    sub ebx, 300
 00000812  8B C3		                    mov eax, ebx
 00000814  E8 00000000 E	                    call writedec
 00000819  BA 00001C39 R	                    mov edx, offset dollar
 0000081E  E8 00000000 E	                    call writestring
 00000823  E8 00000000 E	                    call crlf
 00000828  BA 00001BD8 R	                    mov edx, offset userDecision
 0000082D  E8 00000000 E	                    call writestring
 00000832  E8 00000000 E	                    call readint
 00000837  B9 00000003		                    mov ecx, 3
 0000083C  83 F8 01		                    cmp eax, 1
 0000083F  0F 84 00002134	                    je start
 00000845  E9 00002160		                    jmp showItem

 0000084A			               lamborghini:                                                                  ; main option 4 sub option 2
 0000084A  B8 00000005		                    mov eax , 5
 0000084F  89 06		                    mov [esi], eax
 00000851  83 C6 04		                    add esi, 4
 00000854  BA 00001540 R	                    mov edx, offset car_option2
 00000859  E8 00000000 E	                    call writestring
 0000085E  E8 00000000 E	                    call crlf
 00000863  E8 00000000 E					call crlf
 00000868  E8 00000000 E					call crlf
 0000086D  BA 00002551 R					mov edx, offset lamborghini_graphic
 00000872  E8 00000000 E	                    call writestring
 00000877  E8 00000000 E	                    call crlf
 0000087C  E8 00000000 E					call crlf
 00000881  BA 00001BCA R	                    mov edx, offset userString1
 00000886  E8 00000000 E	                    call writestring
 0000088B  81 EB 000001F4	                    sub ebx, 500
 00000891  8B C3		                    mov eax, ebx
 00000893  E8 00000000 E	                    call writedec
 00000898  BA 00001C39 R	                    mov edx, offset dollar
 0000089D  E8 00000000 E	                    call writestring
 000008A2  E8 00000000 E	                    call crlf
 000008A7  BA 00001BD8 R	                    mov edx, offset userDecision
 000008AC  E8 00000000 E	                    call writestring
 000008B1  E8 00000000 E	                    call readint
 000008B6  B9 00000003		                    mov ecx, 3
 000008BB  83 F8 01		                    cmp eax, 1
 000008BE  0F 84 000020B5	                    je start
 000008C4  E9 000020E1		                    jmp showItem

 000008C9			               ferrari:                                                                  ; main option 4 sub option 3
 000008C9  B8 00000006		                    mov eax , 6
 000008CE  89 06		                    mov [esi], eax
 000008D0  83 C6 04		                    add esi, 4
 000008D3  BA 0000155D R	                    mov edx, offset car_option3
 000008D8  E8 00000000 E	                    call writestring
 000008DD  E8 00000000 E	                    call crlf
 000008E2  E8 00000000 E					call crlf
 000008E7  E8 00000000 E					call crlf
 000008EC  BA 00002834 R					mov edx, offset ferrari_graphic
 000008F1  E8 00000000 E	                    call writestring
 000008F6  E8 00000000 E	                    call crlf
 000008FB  E8 00000000 E					call crlf
 00000900  BA 00001BCA R	                    mov edx, offset userString1
 00000905  E8 00000000 E	                    call writestring
 0000090A  81 EB 00000258	                    sub ebx, 600
 00000910  8B C3		                    mov eax, ebx
 00000912  E8 00000000 E	                    call writedec
 00000917  BA 00001C39 R	                    mov edx, offset dollar
 0000091C  E8 00000000 E	                    call writestring
 00000921  E8 00000000 E	                    call crlf
 00000926  BA 00001BD8 R	                    mov edx, offset userDecision
 0000092B  E8 00000000 E	                    call writestring
 00000930  E8 00000000 E	                    call readint
 00000935  B9 00000003		                    mov ecx, 3
 0000093A  83 F8 01		                    cmp eax, 1
 0000093D  0F 84 00002036	                    je start
 00000943  E9 00002062		                    jmp showItem

 00000948			               noCar:                                                                  ; main option 4 sub option 4
 00000948  BA 0000157E R	                    mov edx, offset car_option4
 0000094D  E8 00000000 E	                    call writestring
 00000952  E8 00000000 E	                    call crlf
 00000957  BA 00001BCA R	                    mov edx, offset userString1
 0000095C  E8 00000000 E	                    call writestring
 00000961  83 EB 00		                    sub ebx, 0
 00000964  8B C3		                    mov eax, ebx
 00000966  E8 00000000 E	                    call writedec
 0000096B  BA 00001C39 R	                    mov edx, offset dollar
 00000970  E8 00000000 E	                    call writestring
 00000975  E8 00000000 E	                    call crlf
 0000097A  BA 00001BD8 R	                    mov edx, offset userDecision
 0000097F  E8 00000000 E	                    call writestring
 00000984  E8 00000000 E	                    call readint
 00000989  B9 00000003		                    mov ecx, 3
 0000098E  83 F8 01		                    cmp eax, 1
 00000991  0F 84 00001FE2	                    je start
 00000997  E9 0000200E		                    jmp showItem

 0000099C			          invest:                                                                  ; main option 5 (_invest_)
 0000099C  BA 000015BC R	               mov edx, offset invest_options
 000009A1  E8 00000000 E	               call writestring
 000009A6  E8 00000000 E	               call crlf
				               ;------------roll the dice ---------------------
 000009AB  BA 0000189B R	          mov edx, offset dice_roll
 000009B0  E8 00000000 E	          call writestring
 000009B5  E8 00000000 E			call crlf

 000009BA  EB 0F				jmp _skip_error_prof_invest    

 000009BC			_try_again_prof_invest :

 000009BC  BA 000018D5 R			mov edx, offset dice_roll_error_message
 000009C1  E8 00000000 E	          call writestring
 000009C6  E8 00000000 E			call crlf


 000009CB			_skip_error_prof_invest :
 000009CB  E8 00000000 E			call readint 
 000009D0  83 F8 01			     cmp eax, 1	
 000009D3  75 E7		          jne _try_again_prof_invest  

 000009D5  BA 000018C9 R			mov edx, offset dice_roll_status
 000009DA  E8 00000000 E	          call writestring
						
						

 000009DF  EB 00				jmp _random_generate_prof_invest  
				;------------ randomly generate numbers between 1 to 4 ------------------ 
 000009E1			_random_generate_prof_invest :         
 000009E1  B8 00000004		               mov eax, 4
 000009E6  E8 00000000 E	               call randomrange
 000009EB  83 C0 01		               add eax, 1
 000009EE  A3 00001C55 R	               mov random_choice, eax
 000009F3  B8 00000BB8		               mov eax, 3000
 000009F8  E8 00000000 E	               call delay
 000009FD  A1 00001C55 R	               mov eax, random_choice
 00000A02  E8 00000000 E	               call writedec
 00000A07  E8 00000000 E	               call crlf
 00000A0C  E8 00000000 E	               call crlf

 00000A11  83 F8 01		               cmp eax, 1
 00000A14  74 1B		               je cokacola
 00000A16  83 F8 02		               cmp eax, 2
 00000A19  0F 84 00000091	               je acer
 00000A1F  83 F8 03		               cmp eax, 3
 00000A22  0F 84 00000107	               je spacex
 00000A28  83 F8 04		               cmp eax, 4
 00000A2B  0F 84 0000017D	               je yahoo


 00000A31			               cokacola:                                                                  ; main option 5 sub option 1
 00000A31  B8 00000007		                    mov eax , 7
 00000A36  89 06		                    mov [esi], eax
 00000A38  83 C6 04		                    add esi, 4
 00000A3B  BA 0000163B R	                    mov edx, offset invest_option1
 00000A40  E8 00000000 E	                    call writestring
 00000A45  E8 00000000 E	                    call crlf
 00000A4A  E8 00000000 E					call crlf
 00000A4F  E8 00000000 E					call crlf
 00000A54  BA 00002FF1 R					mov edx, offset coke_graphic
 00000A59  E8 00000000 E	                    call writestring
 00000A5E  E8 00000000 E	                    call crlf
 00000A63  E8 00000000 E					call crlf
 00000A68  BA 00001BCA R	                    mov edx, offset userString1
 00000A6D  E8 00000000 E	                    call writestring
 00000A72  81 C3 000000C8	                    add ebx, 200
 00000A78  8B C3		                    mov eax, ebx
 00000A7A  E8 00000000 E	                    call writedec
 00000A7F  BA 00001C39 R	                    mov edx, offset dollar
 00000A84  E8 00000000 E	                    call writestring
 00000A89  E8 00000000 E	                    call crlf
 00000A8E  BA 00001BD8 R	                    mov edx, offset userDecision
 00000A93  E8 00000000 E	                    call writestring
 00000A98  E8 00000000 E	                    call readint
 00000A9D  B9 00000003		                    mov ecx, 3
 00000AA2  83 F8 01		                    cmp eax, 1
 00000AA5  0F 84 00001ECE	                    je start
 00000AAB  E9 00001EFA		                    jmp showItem


 00000AB0			               acer:                                                                  ; main option 5 sub option 2
 00000AB0  B8 00000008		                    mov eax , 8
 00000AB5  89 06		                    mov [esi], eax
 00000AB7  83 C6 04		                    add esi, 4
 00000ABA  BA 00001654 R	                    mov edx, offset invest_option2
 00000ABF  E8 00000000 E	                    call writestring
 00000AC4  E8 00000000 E	                    call crlf
 00000AC9  E8 00000000 E					call crlf
 00000ACE  E8 00000000 E					call crlf
 00000AD3  BA 000035B2 R					mov edx, offset acer_graphic
 00000AD8  E8 00000000 E	                    call writestring
 00000ADD  E8 00000000 E	                    call crlf
 00000AE2  E8 00000000 E					call crlf
 00000AE7  BA 00001BCA R	                    mov edx, offset userString1
 00000AEC  E8 00000000 E	                    call writestring
 00000AF1  81 EB 0000012C	                    sub ebx, 300
 00000AF7  8B C3		                    mov eax, ebx
 00000AF9  E8 00000000 E	                    call writedec
 00000AFE  BA 00001C39 R	                    mov edx, offset dollar
 00000B03  E8 00000000 E	                    call writestring
 00000B08  E8 00000000 E	                    call crlf
 00000B0D  BA 00001BD8 R	                    mov edx, offset userDecision
 00000B12  E8 00000000 E	                    call writestring
 00000B17  E8 00000000 E	                    call readint
 00000B1C  B9 00000003		                    mov ecx, 3
 00000B21  83 F8 01		                    cmp eax, 1
 00000B24  0F 84 00001E4F	                    je start
 00000B2A  E9 00001E7B		                    jmp showItem


 00000B2F			               spacex:                                                                  ; main option 5 sub option 3
 00000B2F  B8 00000009		                    mov eax , 9
 00000B34  89 06		                    mov [esi], eax
 00000B36  83 C6 04		                    add esi, 4
 00000B39  BA 0000166C R	                    mov edx, offset invest_option3
 00000B3E  E8 00000000 E	                    call writestring
 00000B43  E8 00000000 E	                    call crlf
 00000B48  E8 00000000 E					call crlf
 00000B4D  E8 00000000 E					call crlf
 00000B52  BA 000033D5 R					mov edx, offset spacex_graphic
 00000B57  E8 00000000 E	                    call writestring
 00000B5C  E8 00000000 E	                    call crlf
 00000B61  E8 00000000 E					call crlf
 00000B66  BA 00001BCA R	                    mov edx, offset userString1
 00000B6B  E8 00000000 E	                    call writestring
 00000B70  81 C3 000001F4	                    add ebx, 500
 00000B76  8B C3		                    mov eax, ebx
 00000B78  E8 00000000 E	                    call writedec
 00000B7D  BA 00001C39 R	                    mov edx, offset dollar
 00000B82  E8 00000000 E	                    call writestring
 00000B87  E8 00000000 E	                    call crlf
 00000B8C  BA 00001BD8 R	                    mov edx, offset userDecision
 00000B91  E8 00000000 E	                    call writestring
 00000B96  E8 00000000 E	                    call readint
 00000B9B  B9 00000003		                    mov ecx, 3
 00000BA0  83 F8 01		                    cmp eax, 1
 00000BA3  0F 84 00001DD0	                    je start
 00000BA9  E9 00001DFC		                    jmp showItem


 00000BAE			               yahoo:                                                                  ; main option 5 sub option 4
 00000BAE  B8 0000000A		                    mov eax , 10
 00000BB3  89 06		                    mov [esi], eax
 00000BB5  83 C6 04		                    add esi, 4
 00000BB8  BA 00001697 R	                    mov edx, offset invest_option4
 00000BBD  E8 00000000 E	                    call writestring
 00000BC2  E8 00000000 E	                    call crlf
 00000BC7  E8 00000000 E					call crlf
 00000BCC  E8 00000000 E					call crlf
 00000BD1  BA 000036CA R					mov edx, offset yahoo_graphic
 00000BD6  E8 00000000 E	                    call writestring
 00000BDB  E8 00000000 E	                    call crlf
 00000BE0  E8 00000000 E					call crlf
 00000BE5  BA 00001BCA R	                    mov edx, offset userString1
 00000BEA  E8 00000000 E	                    call writestring
 00000BEF  81 EB 000001F4	                    sub ebx, 500
 00000BF5  8B C3		                    mov eax, ebx
 00000BF7  E8 00000000 E	                    call writedec
 00000BFC  BA 00001C39 R	                    mov edx, offset dollar
 00000C01  E8 00000000 E	                    call writestring
 00000C06  E8 00000000 E	                    call crlf
 00000C0B  BA 00001BD8 R	                    mov edx, offset userDecision
 00000C10  E8 00000000 E	                    call writestring
 00000C15  E8 00000000 E	                    call readint
 00000C1A  B9 00000003		                    mov ecx, 3
 00000C1F  83 F8 01		                    cmp eax, 1
 00000C22  0F 84 00001D51	                    je start
 00000C28  E9 00001D7D		                    jmp showItem

 00000C2D			          startBusiness:                                                                  ; main option 6 (_startBusiness)
 00000C2D  BA 000016BD R	               mov edx, offset business_options
 00000C32  E8 00000000 E	               call writestring
 00000C37  E8 00000000 E	               call crlf
				               ;------------roll the dice ---------------------
 00000C3C  BA 0000189B R	          mov edx, offset dice_roll
 00000C41  E8 00000000 E	          call writestring
 00000C46  E8 00000000 E			call crlf

 00000C4B  EB 0F				jmp _skip_error_prof_startbusiness   

 00000C4D			_try_again_prof_startbusiness  :

 00000C4D  BA 000018D5 R			mov edx, offset dice_roll_error_message
 00000C52  E8 00000000 E	          call writestring
 00000C57  E8 00000000 E			call crlf


 00000C5C			_skip_error_prof_startbusiness:
 00000C5C  E8 00000000 E			call readint 
 00000C61  83 F8 01			     cmp eax, 1	
 00000C64  75 E7		          jne _try_again_prof_startbusiness   

 00000C66  BA 000018C9 R			mov edx, offset dice_roll_status
 00000C6B  E8 00000000 E	          call writestring
						
						

 00000C70  EB 00				jmp _random_generate_prof_startbusiness   
				;------------ randomly generate numbers between 1 to 3 ------------------ 
 00000C72			_random_generate_prof_startbusiness:         
 00000C72  B8 00000003		               mov eax, 3
 00000C77  E8 00000000 E	               call randomrange
 00000C7C  83 C0 01		               add eax, 1
 00000C7F  A3 00001C55 R	               mov random_choice, eax
 00000C84  B8 00000BB8		               mov eax, 3000
 00000C89  E8 00000000 E	               call delay
 00000C8E  A1 00001C55 R	               mov eax, random_choice
 00000C93  E8 00000000 E	               call writedec
 00000C98  E8 00000000 E	               call crlf
 00000C9D  E8 00000000 E	               call crlf
 00000CA2  83 F8 01		               cmp eax, 1
 00000CA5  74 0E		               je profit
 00000CA7  83 F8 02		               cmp eax, 2
 00000CAA  74 5D		               je noBusiness
 00000CAC  83 F8 03		               cmp eax, 3
 00000CAF  0F 84 000000A8	               je loss

 00000CB5			               profit:                                                                  ; main option 6 sub option 1
 00000CB5  BA 0000173E R	                    mov edx, offset business_option1
 00000CBA  E8 00000000 E	                    call writestring
 00000CBF  E8 00000000 E	                    call crlf
 00000CC4  BA 00001BCA R	                    mov edx, offset userString1
 00000CC9  E8 00000000 E	                    call writestring
 00000CCE  83 C3 64		                    add ebx, 100
 00000CD1  8B C3		                    mov eax, ebx
 00000CD3  E8 00000000 E	                    call writedec
 00000CD8  BA 00001C39 R	                    mov edx, offset dollar
 00000CDD  E8 00000000 E	                    call writestring
 00000CE2  E8 00000000 E	                    call crlf
 00000CE7  BA 00001BD8 R	                    mov edx, offset userDecision
 00000CEC  E8 00000000 E	                    call writestring
 00000CF1  E8 00000000 E	                    call readint
 00000CF6  B9 00000003		                    mov ecx, 3
 00000CFB  83 F8 01		                    cmp eax, 1
 00000CFE  0F 84 00001C75	                    je start
 00000D04  E9 00001CA1		                    jmp showItem

 00000D09			               noBusiness:                                                                  ; main option 6 sub option 2
 00000D09  BA 00001782 R	                    mov edx, offset business_option2
 00000D0E  E8 00000000 E	                    call writestring
 00000D13  E8 00000000 E	                    call crlf
 00000D18  BA 00001BCA R	                    mov edx, offset userString1
 00000D1D  E8 00000000 E	                    call writestring
 00000D22  83 C3 00		                    add ebx, 0
 00000D25  8B C3		                    mov eax, ebx
 00000D27  E8 00000000 E	                    call writedec
 00000D2C  BA 00001C39 R	                    mov edx, offset dollar
 00000D31  E8 00000000 E	                    call writestring
 00000D36  E8 00000000 E	                    call crlf
 00000D3B  BA 00001BD8 R	                    mov edx, offset userDecision
 00000D40  E8 00000000 E	                    call writestring
 00000D45  E8 00000000 E	                    call readint
 00000D4A  B9 00000003		                    mov ecx, 3
 00000D4F  83 F8 01		                    cmp eax, 1
 00000D52  0F 84 00001C21	                    je start
 00000D58  E9 00001C4D		                    jmp showItem

 00000D5D			               loss:                                                                  ; main option 6 sub option 3
 00000D5D  BA 0000179B R	                    mov edx, offset business_option3
 00000D62  E8 00000000 E	                    call writestring
 00000D67  E8 00000000 E	                    call crlf
 00000D6C  BA 00001BCA R	                    mov edx, offset userString1
 00000D71  E8 00000000 E	                    call writestring
 00000D76  83 EB 32		                    sub ebx, 50
 00000D79  8B C3		                    mov eax, ebx
 00000D7B  E8 00000000 E	                    call writedec
 00000D80  BA 00001C39 R	                    mov edx, offset dollar
 00000D85  E8 00000000 E	                    call writestring
 00000D8A  E8 00000000 E	                    call crlf
 00000D8F  BA 00001BD8 R	                    mov edx, offset userDecision
 00000D94  E8 00000000 E	                    call writestring
 00000D99  E8 00000000 E	                    call readint
 00000D9E  B9 00000003		                    mov ecx, 3
 00000DA3  83 F8 01		                    cmp eax, 1
 00000DA6  0F 84 00001BCD	                    je start
 00000DAC  E9 00001BF9		                    jmp showItem

 00000DB1			          buyLottery:                                                                  ; main option 7 (_buy_lottery)
 00000DB1  BA 000017DE R	               mov edx, offset lottery_options
 00000DB6  E8 00000000 E	               call writestring
 00000DBB  E8 00000000 E	               call crlf
				               ;------------roll the dice ---------------------
 00000DC0  BA 0000189B R	          mov edx, offset dice_roll
 00000DC5  E8 00000000 E	          call writestring
 00000DCA  E8 00000000 E			call crlf

 00000DCF  EB 0F				jmp _skip_error_prof_lottery    

 00000DD1			_try_again_prof_lottery :

 00000DD1  BA 000018D5 R			mov edx, offset dice_roll_error_message
 00000DD6  E8 00000000 E	          call writestring
 00000DDB  E8 00000000 E			call crlf


 00000DE0			_skip_error_prof_lottery :
 00000DE0  E8 00000000 E			call readint 
 00000DE5  83 F8 01			     cmp eax, 1	
 00000DE8  75 E7		          jne _try_again_prof_lottery  

 00000DEA  BA 000018C9 R			mov edx, offset dice_roll_status
 00000DEF  E8 00000000 E	          call writestring
						
						

 00000DF4  EB 00				jmp _random_generate_prof_lottery  
				;------------ randomly generate numbers between 1 or 2 ------------------ 
 00000DF6			_random_generate_prof_lottery :         
 00000DF6  B8 00000002		               mov eax, 2
 00000DFB  E8 00000000 E	               call randomrange
 00000E00  83 C0 01		               add eax, 1
 00000E03  A3 00001C55 R	               mov random_choice, eax
 00000E08  B8 00000BB8		               mov eax, 3000
 00000E0D  E8 00000000 E	               call delay
 00000E12  A1 00001C55 R	               mov eax, random_choice
 00000E17  E8 00000000 E	               call writedec
 00000E1C  E8 00000000 E	               call crlf
 00000E21  E8 00000000 E	               call crlf
 00000E26  83 F8 01		               cmp eax, 1
 00000E29  74 05		               je jackpot
 00000E2B  83 F8 02		               cmp eax, 2
 00000E2E  74 75		               je nothing

 00000E30			               jackpot:                                                                  ; main option 7 sub option 1
 00000E30  BA 00001839 R	                    mov edx, offset lottery_option1
 00000E35  E8 00000000 E	                    call writestring
 00000E3A  E8 00000000 E	                    call crlf
 00000E3F  E8 00000000 E					call crlf
 00000E44  E8 00000000 E					call crlf
 00000E49  BA 0000385B R					mov edx, offset jackpot_graphic
 00000E4E  E8 00000000 E	                    call writestring
 00000E53  E8 00000000 E	                    call crlf
 00000E58  E8 00000000 E					call crlf
 00000E5D  BA 00001BCA R	                    mov edx, offset userString1
 00000E62  E8 00000000 E	                    call writestring
 00000E67  81 C3 000003E8	                    add ebx, 1000
 00000E6D  8B C3		                    mov eax, ebx
 00000E6F  E8 00000000 E	                    call writedec
 00000E74  BA 00001C39 R	                    mov edx, offset dollar
 00000E79  E8 00000000 E	                    call writestring
 00000E7E  E8 00000000 E	                    call crlf
 00000E83  BA 00001BD8 R	                    mov edx, offset userDecision
 00000E88  E8 00000000 E	                    call writestring
 00000E8D  E8 00000000 E	                    call readint
 00000E92  B9 00000003		                    mov ecx, 3
 00000E97  83 F8 01		                    cmp eax, 1
 00000E9A  0F 84 00001AD9	                    je start
 00000EA0  E9 00001B05		                    jmp showItem

 00000EA5			               nothing:                                                                  ; main option 7 sub option 2
 00000EA5  BA 00001857 R	                    mov edx, offset lottery_option2
 00000EAA  E8 00000000 E	                    call writestring
 00000EAF  E8 00000000 E	                    call crlf
 00000EB4  BA 00001BCA R	                    mov edx, offset userString1
 00000EB9  E8 00000000 E	                    call writestring
 00000EBE  83 C3 00		                    add ebx, 0
 00000EC1  8B C3		                    mov eax, ebx
 00000EC3  E8 00000000 E	                    call writedec
 00000EC8  BA 00001C39 R	                    mov edx, offset dollar
 00000ECD  E8 00000000 E	                    call writestring
 00000ED2  E8 00000000 E	                    call crlf
 00000ED7  BA 00001BD8 R	                    mov edx, offset userDecision
 00000EDC  E8 00000000 E	                    call writestring
 00000EE1  E8 00000000 E	                    call readint
 00000EE6  B9 00000003		                    mov ecx, 3
 00000EEB  83 F8 01		                    cmp eax, 1
 00000EEE  0F 84 00001A85	                    je start
 00000EF4  E9 00001AB1		                    jmp showItem



				;-------------------------- Character (Tokyo) ----------------------------------

					
 00000EF9			     _Tokyo:                                                                  ; character - Tokyo
				          ; -------------show option to tokyo -----------------------
 00000EF9  BE 00001C5D R	          mov esi, offset property_list
 00000EFE  BA 000010A8 R	          mov edx, offset welcome_tokyo
 00000F03  E8 00000000 E	          call writestring
 00000F08  E8 00000000 E	          call crlf
 00000F0D  E8 00000000 E	          call crlf
 00000F12			          tokyo_startGame:
 00000F12  BA 00001187 R	          mov edx, offset tokyo1
 00000F17  E8 00000000 E	          call writestring
 00000F1C  8B C3		          mov eax, ebx
 00000F1E  E8 00000000 E	          call writedec
 00000F23  BA 00001C39 R	          mov edx, offset dollar
 00000F28  E8 00000000 E	          call writestring
 00000F2D  E8 00000000 E	          call crlf
 00000F32  E8 00000000 E	          call crlf
 00000F37  BA 000011AA R	          mov edx, offset main_options
 00000F3C  E8 00000000 E	          call writestring
 00000F41  E8 00000000 E	          call crlf
 00000F46  E8 00000000 E	          call crlf
				          ;------------roll the dice ---------------------
 00000F4B  BA 0000189B R	          mov edx, offset dice_roll
 00000F50  E8 00000000 E	          call writestring
 00000F55  E8 00000000 E			call crlf

 00000F5A  EB 0F				jmp _skip_error_tokyo   

 00000F5C			_try_again_tokyo:

 00000F5C  BA 000018D5 R			mov edx, offset dice_roll_error_message
 00000F61  E8 00000000 E	          call writestring
 00000F66  E8 00000000 E			call crlf


 00000F6B			_skip_error_tokyo:
 00000F6B  E8 00000000 E			call readint 
 00000F70  83 F8 01			     cmp eax, 1	
 00000F73  75 E7		          jne _try_again_tokyo 

 00000F75  BA 000018C9 R			mov edx, offset dice_roll_status
 00000F7A  E8 00000000 E	          call writestring
						
						

 00000F7F  EB 00				jmp _random_generate_tokyo 
				;------------ randomly generate numbers between 1 to 7 ------------------ 
 00000F81			_random_generate_tokyo:

 00000F81  B8 00000007		          mov eax, 7
 00000F86  E8 00000000 E	          call randomrange
 00000F8B  83 C0 01		          add eax, 1
 00000F8E  A3 00001C55 R	          mov random_choice, eax
 00000F93  B8 00000BB8		          mov eax, 3000
 00000F98  E8 00000000 E	          call delay
 00000F9D  A1 00001C55 R	          mov eax, random_choice
 00000FA2  E8 00000000 E	          call writedec
 00000FA7  E8 00000000 E	          call crlf
 00000FAC  E8 00000000 E	          call crlf
				          ;--------------------compare result ----------------------------
 00000FB1  83 F8 01		          cmp eax, 1
 00000FB4  74 36		          je tokyo_buyHouse
 00000FB6  83 F8 02		          cmp eax, 2
 00000FB9  0F 84 00000293	          je tokyo_sellProduct
 00000FBF  83 F8 03		          cmp eax, 3
 00000FC2  0F 84 00000443	          je tokyo_bankrupt
 00000FC8  83 F8 04		          cmp eax, 4
 00000FCB  0F 84 0000048D	          je tokyo_buyCar
 00000FD1  83 F8 05		          cmp eax, 5
 00000FD4  0F 84 000006E5	          je tokyo_invest
 00000FDA  83 F8 06		          cmp eax, 6
 00000FDD  0F 84 0000096D	          je tokyo_startBusiness
 00000FE3  83 F8 07		          cmp eax, 7
 00000FE6  0F 84 00000AE8	          je tokyo_buyLottery
				          ;---------------------show result -------------------------------
				         

 00000FEC			tokyo_buyHouse:                                                                  ; main option 1 (_buy_house)
 00000FEC  BA 00001278 R	               mov edx, offset house_options
 00000FF1  E8 00000000 E	               call writestring
 00000FF6  E8 00000000 E	               call crlf
				               ;------------roll the dice ---------------------
 00000FFB  BA 0000189B R	          mov edx, offset dice_roll
 00001000  E8 00000000 E	          call writestring
 00001005  E8 00000000 E			call crlf

 0000100A  EB 0F				jmp _skip_error_tokyo_buyhouse   

 0000100C			_try_again_tokyo_buyhouse :

 0000100C  BA 000018D5 R			mov edx, offset dice_roll_error_message
 00001011  E8 00000000 E	          call writestring
 00001016  E8 00000000 E			call crlf


 0000101B			_skip_error_tokyo_buyhouse :
 0000101B  E8 00000000 E			call readint 
 00001020  83 F8 01			     cmp eax, 1	
 00001023  75 E7		          jne _try_again_tokyo_buyhouse  

 00001025  BA 000018C9 R			mov edx, offset dice_roll_status
 0000102A  E8 00000000 E	          call writestring
						
						

 0000102F  EB 00				jmp _random_generate_tokyo_buyhouse  
				;------------ randomly generate numbers between 1 to 4 ------------------ 
 00001031			_random_generate_tokyo_buyhouse :         
 00001031  B8 00000004		               mov eax, 4
 00001036  E8 00000000 E	               call randomrange
 0000103B  83 C0 01		               add eax, 1
 0000103E  A3 00001C55 R	               mov random_choice, eax
 00001043  B8 00000BB8		               mov eax, 3000
 00001048  E8 00000000 E	               call delay
 0000104D  A1 00001C55 R	               mov eax, random_choice
 00001052  E8 00000000 E	               call writedec
 00001057  E8 00000000 E	               call crlf
 0000105C  E8 00000000 E	               call crlf
 00001061  83 F8 01		               cmp eax, 1
 00001064  74 1B		               je tokyo_penthouse
 00001066  83 F8 02		               cmp eax, 2
 00001069  0F 84 00000091	               je tokyo_garden
 0000106F  83 F8 03		               cmp eax, 3
 00001072  0F 84 00000107	               je tokyo_sky
 00001078  83 F8 04		               cmp eax, 4
 0000107B  0F 84 0000017D	               je tokyo_noHouse

 00001081			               tokyo_penthouse:                                                                  ; main option 1 sub option 1
 00001081  B8 00000001		                    mov eax , 1
 00001086  89 06		                    mov [esi], eax
 00001088  83 C6 04		                    add esi, 4
 0000108B  BA 000012FE R	                    mov edx, offset house_option1
 00001090  E8 00000000 E	                    call writestring
 00001095  E8 00000000 E	                    call crlf
 0000109A  E8 00000000 E					call crlf
 0000109F  E8 00000000 E					call crlf
 000010A4  BA 00001E2B R					mov edx, offset penthouse_graphic
 000010A9  E8 00000000 E	                    call writestring
 000010AE  E8 00000000 E	                    call crlf
 000010B3  E8 00000000 E					call crlf
 000010B8  BA 00001BCA R	                    mov edx, offset userString1
 000010BD  E8 00000000 E	                    call writestring
 000010C2  81 EB 00000190	                    sub ebx, 400
 000010C8  8B C3		                    mov eax, ebx
 000010CA  E8 00000000 E	                    call writedec
 000010CF  BA 00001C39 R	                    mov edx, offset dollar
 000010D4  E8 00000000 E	                    call writestring
 000010D9  E8 00000000 E	                    call crlf
 000010DE  BA 00001BD8 R	                    mov edx, offset userDecision
 000010E3  E8 00000000 E	                    call writestring
 000010E8  E8 00000000 E	                    call readint
 000010ED  B9 00000001		                    mov ecx, 1
 000010F2  83 F8 01		                    cmp eax, 1
 000010F5  0F 84 0000187E	                    je start
 000010FB  E9 000018AA		                    jmp showItem

 00001100			               tokyo_garden:                                                                  ; main option 1 sub option 2
 00001100  B8 00000002		                    mov eax , 2
 00001105  89 06		                    mov [esi], eax
 00001107  83 C6 04		                    add esi, 4
 0000110A  BA 00001325 R	                    mov edx, offset house_option2
 0000110F  E8 00000000 E	                    call writestring
 00001114  E8 00000000 E	                    call crlf
 00001119  E8 00000000 E					call crlf
 0000111E  E8 00000000 E					call crlf
 00001123  BA 00001ED6 R					mov edx, offset gardenApartment_graphic
 00001128  E8 00000000 E	                    call writestring
 0000112D  E8 00000000 E	                    call crlf
 00001132  E8 00000000 E					call crlf
 00001137  BA 00001BCA R	                    mov edx, offset userString1
 0000113C  E8 00000000 E	                    call writestring
 00001141  81 EB 000000C8	                    sub ebx, 200
 00001147  8B C3		                    mov eax, ebx
 00001149  E8 00000000 E	                    call writedec
 0000114E  BA 00001C39 R	                    mov edx, offset dollar
 00001153  E8 00000000 E	                    call writestring
 00001158  E8 00000000 E	                    call crlf
 0000115D  BA 00001BD8 R	                    mov edx, offset userDecision
 00001162  E8 00000000 E	                    call writestring
 00001167  B9 00000001		                    mov ecx, 1
 0000116C  E8 00000000 E	                    call readint
 00001171  83 F8 01		                    cmp eax, 1
 00001174  0F 84 000017FF	                    je start
 0000117A  E9 0000182B		                    jmp showItem

 0000117F			               tokyo_sky:                                                                  ; main option 1 sub option 3
 0000117F  B8 00000003		                    mov eax , 3
 00001184  89 06		                    mov [esi], eax
 00001186  83 C6 04		                    add esi, 4
 00001189  BA 00001358 R	                    mov edx, offset house_option3
 0000118E  E8 00000000 E	                    call writestring
 00001193  E8 00000000 E	                    call crlf
 00001198  E8 00000000 E					call crlf
 0000119D  E8 00000000 E					call crlf
 000011A2  BA 00002024 R					mov edx, offset sky_loft_graphic
 000011A7  E8 00000000 E	                    call writestring
 000011AC  E8 00000000 E	                    call crlf
 000011B1  E8 00000000 E					call crlf
 000011B6  BA 00001BCA R	                    mov edx, offset userString1
 000011BB  E8 00000000 E	                    call writestring
 000011C0  81 EB 0000012C	                    sub ebx, 300
 000011C6  8B C3		                    mov eax, ebx
 000011C8  E8 00000000 E	                    call writedec
 000011CD  BA 00001C39 R	                    mov edx, offset dollar
 000011D2  E8 00000000 E	                    call writestring
 000011D7  E8 00000000 E	                    call crlf
 000011DC  BA 00001BD8 R	                    mov edx, offset userDecision
 000011E1  E8 00000000 E	                    call writestring
 000011E6  E8 00000000 E	                    call readint
 000011EB  B9 00000001		                    mov ecx, 1
 000011F0  83 F8 01		                    cmp eax, 1
 000011F3  0F 84 00001780	                    je start
 000011F9  E9 000017AC		                    jmp showItem

 000011FE			               tokyo_noHouse:                                                                  ; main option 1 sub option 4
 000011FE  BA 00001384 R	                    mov edx, offset house_option4
 00001203  E8 00000000 E	                    call writestring
 00001208  E8 00000000 E	                    call crlf
 0000120D  BA 00001BCA R	                    mov edx, offset userString1
 00001212  E8 00000000 E	                    call writestring
 00001217  83 EB 00		                    sub ebx, 0
 0000121A  8B C3		                    mov eax, ebx
 0000121C  E8 00000000 E	                    call writedec
 00001221  BA 00001C39 R	                    mov edx, offset dollar
 00001226  E8 00000000 E	                    call writestring
 0000122B  E8 00000000 E	                    call crlf
 00001230  BA 00001BD8 R	                    mov edx, offset userDecision
 00001235  E8 00000000 E	                    call writestring
 0000123A  E8 00000000 E	                    call readint
 0000123F  B9 00000001		                    mov ecx, 1
 00001244  83 F8 01		                    cmp eax, 1
 00001247  0F 84 0000172C	                    je start
 0000124D  E9 00001758		                    jmp showItem



				             
 00001252			tokyo_sellProduct:                                                                  ; main option 2 (_sell_product)
 00001252  BA 000013C2 R	               mov edx, offset product_options
 00001257  E8 00000000 E	               call writestring
 0000125C  E8 00000000 E	               call crlf
				               ;------------roll the dice ---------------------
 00001261  BA 0000189B R	          mov edx, offset dice_roll
 00001266  E8 00000000 E	          call writestring
 0000126B  E8 00000000 E			call crlf

 00001270  EB 0F				jmp _skip_error_tokyo_sellProduct    

 00001272			_try_again_tokyo_sellProduct :

 00001272  BA 000018D5 R			mov edx, offset dice_roll_error_message
 00001277  E8 00000000 E	          call writestring
 0000127C  E8 00000000 E			call crlf


 00001281			_skip_error_tokyo_sellProduct :
 00001281  E8 00000000 E			call readint 
 00001286  83 F8 01			     cmp eax, 1	
 00001289  75 E7		          jne _try_again_tokyo_sellProduct  

 0000128B  BA 000018C9 R			mov edx, offset dice_roll_status
 00001290  E8 00000000 E	          call writestring
						
						

 00001295  EB 00				jmp _random_generate_tokyo_sellProduct 

				;------------ randomly generate numbers between 1 to 3 ------------------ 
 00001297			_random_generate_tokyo_sellProduct :         
 00001297  B8 00000003		               mov eax, 3
 0000129C  E8 00000000 E	               call randomrange
 000012A1  83 C0 01		               add eax, 1
 000012A4  A3 00001C55 R	               mov random_choice, eax
 000012A9  B8 00000BB8		               mov eax, 3000
 000012AE  E8 00000000 E	               call delay
 000012B3  A1 00001C55 R	               mov eax, random_choice
 000012B8  E8 00000000 E	               call writedec
 000012BD  E8 00000000 E	               call crlf
 000012C2  E8 00000000 E	               call crlf
 000012C7  83 F8 01		               cmp eax, 1
 000012CA  74 0E		               je tokyo_piano
 000012CC  83 F8 02		               cmp eax, 2
 000012CF  74 79		               je tokyo_watch
 000012D1  83 F8 03		               cmp eax, 3
 000012D4  0F 84 000000DD	               je tokyo_noSell

 000012DA			               tokyo_piano:                                                                  ; main option 2 sub option 1
 000012DA  BA 00001449 R	                    mov edx, offset product_option1
 000012DF  E8 00000000 E	                    call writestring
 000012E4  E8 00000000 E	                    call crlf
 000012E9  E8 00000000 E					call crlf
 000012EE  E8 00000000 E					call crlf
 000012F3  BA 000022F9 R					mov edx, offset piano_graphic
 000012F8  E8 00000000 E	                    call writestring
 000012FD  E8 00000000 E	                    call crlf
 00001302  BA 00001BCA R	                    mov edx, offset userString1
 00001307  E8 00000000 E	                    call writestring
 0000130C  81 C3 000000C8	                    add ebx, 200
 00001312  8B C3		                    mov eax, ebx
 00001314  E8 00000000 E	                    call writedec
 00001319  BA 00001C39 R	                    mov edx, offset dollar
 0000131E  E8 00000000 E	                    call writestring
 00001323  E8 00000000 E	                    call crlf
 00001328  BA 00001BD8 R	                    mov edx, offset userDecision
 0000132D  E8 00000000 E	                    call writestring
 00001332  E8 00000000 E	                    call readint
 00001337  B9 00000001		                    mov ecx, 1
 0000133C  83 F8 01		                    cmp eax, 1
 0000133F  0F 84 00001634	                    je start
 00001345  E9 00001660		                    jmp showItem

 0000134A			               tokyo_watch:                                                                  ; main option 2 sub option 2
 0000134A  BA 0000146D R	                    mov edx, offset product_option2
 0000134F  E8 00000000 E	                    call writestring
 00001354  E8 00000000 E	                    call crlf
 00001359  E8 00000000 E					call crlf
 0000135E  E8 00000000 E					call crlf
 00001363  BA 000023E5 R					mov edx, offset watch_graphic
 00001368  E8 00000000 E	                    call writestring
 0000136D  E8 00000000 E	                    call crlf
 00001372  BA 00001BCA R	                    mov edx, offset userString1
 00001377  E8 00000000 E	                    call writestring
 0000137C  83 C3 64		                    add ebx, 100
 0000137F  8B C3		                    mov eax, ebx
 00001381  E8 00000000 E	                    call writedec
 00001386  BA 00001C39 R	                    mov edx, offset dollar
 0000138B  E8 00000000 E	                    call writestring
 00001390  E8 00000000 E	                    call crlf
 00001395  BA 00001BD8 R	                    mov edx, offset userDecision
 0000139A  E8 00000000 E	                    call writestring
 0000139F  E8 00000000 E	                    call readint
 000013A4  B9 00000001		                    mov ecx, 1
 000013A9  83 F8 01		                    cmp eax, 1
 000013AC  0F 84 000015C7	                    je start
 000013B2  E9 000015F3		                    jmp showItem

 000013B7			               tokyo_noSell:                                                                  ; main option 2 sub option 3
 000013B7  BA 00001495 R	                    mov edx, offset product_option3
 000013BC  E8 00000000 E	                    call writestring
 000013C1  E8 00000000 E	                    call crlf
 000013C6  BA 00001BCA R	                    mov edx, offset userString1
 000013CB  E8 00000000 E	                    call writestring
 000013D0  83 C3 00		                    add ebx, 0
 000013D3  8B C3		                    mov eax, ebx
 000013D5  E8 00000000 E	                    call writedec
 000013DA  BA 00001C39 R	                    mov edx, offset dollar
 000013DF  E8 00000000 E	                    call writestring
 000013E4  E8 00000000 E	                    call crlf
 000013E9  BA 00001BD8 R	                    mov edx, offset userDecision
 000013EE  E8 00000000 E	                    call writestring
 000013F3  E8 00000000 E	                    call readint
 000013F8  B9 00000001		                    mov ecx, 1
 000013FD  83 F8 01		                    cmp eax, 1
 00001400  0F 84 00001573	                    je start
 00001406  E9 0000159F		                    jmp showItem


 0000140B			          tokyo_bankrupt:                                                                  ; main option 3 (_bunkrupt)
 0000140B  BA 00001917 R	               mov edx, offset bankruptString
 00001410  E8 00000000 E	               call writestring
 00001415  E8 00000000 E	               call crlf
 0000141A  BA 00001BCA R	               mov edx, offset userString1
 0000141F  E8 00000000 E	               call writestring
 00001424  2B DB		               sub ebx, ebx
 00001426  8B C3		               mov eax, ebx
 00001428  E8 00000000 E	               call writedec
 0000142D  BA 00001C39 R	               mov edx, offset dollar
 00001432  E8 00000000 E	               call writestring
 00001437  E8 00000000 E	               call crlf
 0000143C  BA 00001BD8 R	               mov edx, offset userDecision
 00001441  E8 00000000 E	               call writestring
 00001446  E8 00000000 E	               call readint
 0000144B  B9 00000001		               mov ecx, 1
 00001450  83 F8 01		               cmp eax, 1
 00001453  0F 84 00001520	               je start
 00001459  E9 0000154C		               jmp showItem


 0000145E			          tokyo_buyCar:                                                                  ; main option 4 (_buy_car)
 0000145E  BA 000014AC R	               mov edx, offset car_options
 00001463  E8 00000000 E	               call writestring
 00001468  E8 00000000 E	               call crlf
				               ;------------roll the dice ---------------------
 0000146D  BA 0000189B R	          mov edx, offset dice_roll
 00001472  E8 00000000 E	          call writestring
 00001477  E8 00000000 E			call crlf

 0000147C  EB 0F				jmp _skip_error_tokyo_buyCar    

 0000147E			_try_again_tokyo_buyCar:

 0000147E  BA 000018D5 R			mov edx, offset dice_roll_error_message
 00001483  E8 00000000 E	          call writestring
 00001488  E8 00000000 E			call crlf


 0000148D			_skip_error_tokyo_buyCar:
 0000148D  E8 00000000 E			call readint 
 00001492  83 F8 01			     cmp eax, 1	
 00001495  75 E7		          jne _try_again_tokyo_buyCar 

 00001497  BA 000018C9 R			mov edx, offset dice_roll_status
 0000149C  E8 00000000 E	          call writestring
						
						

 000014A1  EB 00				jmp _random_generate_tokyo_buyCar 
				;------------ randomly generate numbers between 1 to 4 ------------------ 
 000014A3			_random_generate_tokyo_buyCar:         
 000014A3  B8 00000004		               mov eax, 4
 000014A8  E8 00000000 E	               call randomrange
 000014AD  83 C0 01		               add eax, 1
 000014B0  A3 00001C55 R	               mov random_choice, eax
 000014B5  B8 00000BB8		               mov eax, 3000
 000014BA  E8 00000000 E	               call delay
 000014BF  A1 00001C55 R	               mov eax, random_choice
 000014C4  E8 00000000 E	               call writedec
 000014C9  E8 00000000 E	               call crlf
 000014CE  E8 00000000 E	               call crlf
 000014D3  83 F8 01		               cmp eax, 1
 000014D6  74 1B		               je tokyo_audi
 000014D8  83 F8 02		               cmp eax, 2
 000014DB  0F 84 00000091	               je tokyo_lamborghini
 000014E1  83 F8 03		               cmp eax, 3
 000014E4  0F 84 00000107	               je tokyo_ferrari
 000014EA  83 F8 04		               cmp eax, 4
 000014ED  0F 84 00000178	               je tokyo_noCar

 000014F3			               tokyo_audi:                                                                  ; main option 4 sub option 1
 000014F3  B8 00000004		                    mov eax , 4
 000014F8  89 06		                    mov [esi], eax
 000014FA  83 C6 04		                    add esi, 4
 000014FD  BA 00001526 R	                    mov edx, offset car_option1
 00001502  E8 00000000 E	                    call writestring
 00001507  E8 00000000 E	                    call crlf
 0000150C  E8 00000000 E					call crlf
 00001511  E8 00000000 E					call crlf
 00001516  BA 00002BB9 R					mov edx, offset audi_graphic
 0000151B  E8 00000000 E	                    call writestring
 00001520  E8 00000000 E	                    call crlf
 00001525  E8 00000000 E					call crlf
 0000152A  BA 00001BCA R	                    mov edx, offset userString1
 0000152F  E8 00000000 E	                    call writestring
 00001534  81 EB 0000012C	                    sub ebx, 300
 0000153A  8B C3		                    mov eax, ebx
 0000153C  E8 00000000 E	                    call writedec
 00001541  BA 00001C39 R	                    mov edx, offset dollar
 00001546  E8 00000000 E	                    call writestring
 0000154B  E8 00000000 E	                    call crlf
 00001550  BA 00001BD8 R	                    mov edx, offset userDecision
 00001555  E8 00000000 E	                    call writestring
 0000155A  E8 00000000 E	                    call readint
 0000155F  B9 00000001		                    mov ecx, 1
 00001564  83 F8 01		                    cmp eax, 1
 00001567  0F 84 0000140C	                    je start
 0000156D  E9 00001438		                    jmp showItem

 00001572			               tokyo_lamborghini:                                                                  ; main option 4 sub option 2
 00001572  B8 00000005		                    mov eax , 5
 00001577  89 06		                    mov [esi], eax
 00001579  83 C6 04		                    add esi, 4
 0000157C  BA 00001540 R	                    mov edx, offset car_option2
 00001581  E8 00000000 E	                    call writestring
 00001586  E8 00000000 E	                    call crlf
 0000158B  E8 00000000 E					call crlf
 00001590  E8 00000000 E					call crlf
 00001595  BA 00002551 R					mov edx, offset lamborghini_graphic
 0000159A  E8 00000000 E	                    call writestring
 0000159F  E8 00000000 E	                    call crlf
 000015A4  E8 00000000 E					call crlf
 000015A9  BA 00001BCA R	                    mov edx, offset userString1
 000015AE  E8 00000000 E	                    call writestring
 000015B3  81 EB 000001F4	                    sub ebx, 500
 000015B9  8B C3		                    mov eax, ebx
 000015BB  E8 00000000 E	                    call writedec
 000015C0  BA 00001C39 R	                    mov edx, offset dollar
 000015C5  E8 00000000 E	                    call writestring
 000015CA  E8 00000000 E	                    call crlf
 000015CF  BA 00001BD8 R	                    mov edx, offset userDecision
 000015D4  E8 00000000 E	                    call writestring
 000015D9  E8 00000000 E	                    call readint
 000015DE  B9 00000001		                    mov ecx, 1
 000015E3  83 F8 01		                    cmp eax, 1
 000015E6  0F 84 0000138D	                    je start
 000015EC  E9 000013B9		                    jmp showItem

 000015F1			               tokyo_ferrari:                                                                  ; main option 4 sub option 3
 000015F1  B8 00000006		                    mov eax , 6
 000015F6  89 06		                    mov [esi], eax
 000015F8  83 C6 04		                    add esi, 4
 000015FB  BA 0000155D R	                    mov edx, offset car_option3
 00001600  E8 00000000 E	                    call writestring
 00001605  E8 00000000 E	                    call crlf
 0000160A  E8 00000000 E					call crlf
 0000160F  E8 00000000 E					call crlf
 00001614  BA 00002834 R					mov edx, offset ferrari_graphic
 00001619  E8 00000000 E	                    call writestring
 0000161E  E8 00000000 E	                    call crlf
 00001623  BA 00001BCA R	                    mov edx, offset userString1
 00001628  E8 00000000 E	                    call writestring
 0000162D  81 EB 00000258	                    sub ebx, 600
 00001633  8B C3		                    mov eax, ebx
 00001635  E8 00000000 E	                    call writedec
 0000163A  BA 00001C39 R	                    mov edx, offset dollar
 0000163F  E8 00000000 E	                    call writestring
 00001644  E8 00000000 E	                    call crlf
 00001649  BA 00001BD8 R	                    mov edx, offset userDecision
 0000164E  E8 00000000 E	                    call writestring
 00001653  E8 00000000 E	                    call readint
 00001658  B9 00000001		                    mov ecx, 1
 0000165D  83 F8 01		                    cmp eax, 1
 00001660  0F 84 00001313	                    je start
 00001666  E9 0000133F		                    jmp showItem

 0000166B			               tokyo_noCar:                                                                  ; main option 4 sub option 4
 0000166B  BA 0000157E R	                    mov edx, offset car_option4
 00001670  E8 00000000 E	                    call writestring
 00001675  E8 00000000 E	                    call crlf
 0000167A  BA 00001BCA R	                    mov edx, offset userString1
 0000167F  E8 00000000 E	                    call writestring
 00001684  83 EB 00		                    sub ebx, 0
 00001687  8B C3		                    mov eax, ebx
 00001689  E8 00000000 E	                    call writedec
 0000168E  BA 00001C39 R	                    mov edx, offset dollar
 00001693  E8 00000000 E	                    call writestring
 00001698  E8 00000000 E	                    call crlf
 0000169D  BA 00001BD8 R	                    mov edx, offset userDecision
 000016A2  E8 00000000 E	                    call writestring
 000016A7  E8 00000000 E	                    call readint
 000016AC  B9 00000001		                    mov ecx, 1
 000016B1  83 F8 01		                    cmp eax, 1
 000016B4  0F 84 000012BF	                    je start
 000016BA  E9 000012EB		                    jmp showItem


 000016BF			          tokyo_invest:                                                                  ; main option 5 (_invest)
 000016BF  BA 000015BC R	               mov edx, offset invest_options
 000016C4  E8 00000000 E	               call writestring
 000016C9  E8 00000000 E	               call crlf
				               ;------------roll the dice ---------------------
 000016CE  BA 0000189B R	          mov edx, offset dice_roll
 000016D3  E8 00000000 E	          call writestring
 000016D8  E8 00000000 E			call crlf

 000016DD  EB 0F				jmp _skip_error_tokyo_invest    

 000016DF			_try_again_tokyo_invest :

 000016DF  BA 000018D5 R			mov edx, offset dice_roll_error_message
 000016E4  E8 00000000 E	          call writestring
 000016E9  E8 00000000 E			call crlf


 000016EE			_skip_error_tokyo_invest :
 000016EE  E8 00000000 E			call readint 
 000016F3  83 F8 01			     cmp eax, 1	
 000016F6  75 E7		          jne _try_again_tokyo_invest  

 000016F8  BA 000018C9 R			mov edx, offset dice_roll_status
 000016FD  E8 00000000 E	          call writestring
						
						

 00001702  EB 00				jmp _random_generate_tokyo_invest  
				;------------ randomly generate numbers between 1 to 4 ------------------ 
 00001704			_random_generate_tokyo_invest :         
 00001704  B8 00000004		               mov eax, 4
 00001709  E8 00000000 E	               call randomrange
 0000170E  83 C0 01		               add eax, 1
 00001711  A3 00001C55 R	               mov random_choice, eax
 00001716  B8 00000BB8		               mov eax, 3000
 0000171B  E8 00000000 E	               call delay
 00001720  A1 00001C55 R	               mov eax, random_choice
 00001725  E8 00000000 E	               call writedec
 0000172A  E8 00000000 E	               call crlf
 0000172F  E8 00000000 E	               call crlf
 00001734  83 F8 01		               cmp eax, 1
 00001737  74 1B		               je tokyo_cokacola
 00001739  83 F8 02		               cmp eax, 2
 0000173C  0F 84 00000091	               je tokyo_acer
 00001742  83 F8 03		               cmp eax, 3
 00001745  0F 84 00000107	               je tokyo_spacex
 0000174B  83 F8 04		               cmp eax, 4
 0000174E  0F 84 0000017D	               je tokyo_yahoo

 00001754			               tokyo_cokacola:                                                                  ; main option 5 sub option 1
 00001754  B8 00000007		                    mov eax , 7
 00001759  89 06		                    mov [esi], eax
 0000175B  83 C6 04		                    add esi, 4
 0000175E  BA 0000163B R	                    mov edx, offset invest_option1
 00001763  E8 00000000 E	                    call writestring
 00001768  E8 00000000 E	                    call crlf
 0000176D  E8 00000000 E					call crlf
 00001772  E8 00000000 E					call crlf
 00001777  BA 00002FF1 R					mov edx, offset coke_graphic
 0000177C  E8 00000000 E	                    call writestring
 00001781  E8 00000000 E	                    call crlf
 00001786  E8 00000000 E					call crlf
 0000178B  BA 00001BCA R	                    mov edx, offset userString1
 00001790  E8 00000000 E	                    call writestring
 00001795  81 C3 000000C8	                    add ebx, 200
 0000179B  8B C3		                    mov eax, ebx
 0000179D  E8 00000000 E	                    call writedec
 000017A2  BA 00001C39 R	                    mov edx, offset dollar
 000017A7  E8 00000000 E	                    call writestring
 000017AC  E8 00000000 E	                    call crlf
 000017B1  BA 00001BD8 R	                    mov edx, offset userDecision
 000017B6  E8 00000000 E	                    call writestring
 000017BB  E8 00000000 E	                    call readint
 000017C0  B9 00000001		                    mov ecx, 1
 000017C5  83 F8 01		                    cmp eax, 1
 000017C8  0F 84 000011AB	                    je start
 000017CE  E9 000011D7		                    jmp showItem

 000017D3			               tokyo_acer:                                                                  ; main option 5 sub option 2
 000017D3  B8 00000008		                    mov eax , 8
 000017D8  89 06		                    mov [esi], eax
 000017DA  83 C6 04		                    add esi, 4
 000017DD  BA 00001654 R	                    mov edx, offset invest_option2
 000017E2  E8 00000000 E	                    call writestring
 000017E7  E8 00000000 E	                    call crlf
 000017EC  E8 00000000 E					call crlf
 000017F1  E8 00000000 E					call crlf
 000017F6  BA 000035B2 R					mov edx, offset acer_graphic
 000017FB  E8 00000000 E	                    call writestring
 00001800  E8 00000000 E	                    call crlf
 00001805  E8 00000000 E					call crlf
 0000180A  BA 00001BCA R	                    mov edx, offset userString1
 0000180F  E8 00000000 E	                    call writestring
 00001814  81 EB 0000012C	                    sub ebx, 300
 0000181A  8B C3		                    mov eax, ebx
 0000181C  E8 00000000 E	                    call writedec
 00001821  BA 00001C39 R	                    mov edx, offset dollar
 00001826  E8 00000000 E	                    call writestring
 0000182B  E8 00000000 E	                    call crlf
 00001830  BA 00001BD8 R	                    mov edx, offset userDecision
 00001835  E8 00000000 E	                    call writestring
 0000183A  E8 00000000 E	                    call readint
 0000183F  B9 00000001		                    mov ecx, 1
 00001844  83 F8 01		                    cmp eax, 1
 00001847  0F 84 0000112C	                    je start
 0000184D  E9 00001158		                    jmp showItem

 00001852			               tokyo_spacex:                                                                  ; main option 5 sub option 3
 00001852  B8 00000009		                    mov eax , 9
 00001857  89 06		                    mov [esi], eax
 00001859  83 C6 04		                    add esi, 4
 0000185C  BA 0000166C R	                    mov edx, offset invest_option3
 00001861  E8 00000000 E	                    call writestring
 00001866  E8 00000000 E	                    call crlf
 0000186B  E8 00000000 E					call crlf
 00001870  E8 00000000 E					call crlf
 00001875  BA 000033D5 R					mov edx, offset spacex_graphic
 0000187A  E8 00000000 E	                    call writestring
 0000187F  E8 00000000 E	                    call crlf
 00001884  E8 00000000 E					call crlf
 00001889  BA 00001BCA R	                    mov edx, offset userString1
 0000188E  E8 00000000 E	                    call writestring
 00001893  81 C3 000001F4	                    add ebx, 500
 00001899  8B C3		                    mov eax, ebx
 0000189B  E8 00000000 E	                    call writedec
 000018A0  BA 00001C39 R	                    mov edx, offset dollar
 000018A5  E8 00000000 E	                    call writestring
 000018AA  E8 00000000 E	                    call crlf
 000018AF  BA 00001BD8 R	                    mov edx, offset userDecision
 000018B4  E8 00000000 E	                    call writestring
 000018B9  E8 00000000 E	                    call readint
 000018BE  B9 00000001		                    mov ecx, 1
 000018C3  83 F8 01		                    cmp eax, 1
 000018C6  0F 84 000010AD	                    je start
 000018CC  E9 000010D9		                    jmp showItem

 000018D1			               tokyo_yahoo:                                                                  ; main option 5 sub option 4
 000018D1  B8 0000000A		                    mov eax , 10
 000018D6  89 06		                    mov [esi], eax
 000018D8  83 C6 04		                    add esi, 4
 000018DB  BA 00001697 R	                    mov edx, offset invest_option4
 000018E0  E8 00000000 E	                    call writestring
 000018E5  E8 00000000 E	                    call crlf
 000018EA  E8 00000000 E					call crlf
 000018EF  E8 00000000 E					call crlf
 000018F4  BA 000036CA R					mov edx, offset yahoo_graphic
 000018F9  E8 00000000 E	                    call writestring
 000018FE  E8 00000000 E	                    call crlf
 00001903  E8 00000000 E					call crlf
 00001908  BA 00001BCA R	                    mov edx, offset userString1
 0000190D  E8 00000000 E	                    call writestring
 00001912  81 EB 000001F4	                    sub ebx, 500
 00001918  8B C3		                    mov eax, ebx
 0000191A  E8 00000000 E	                    call writedec
 0000191F  BA 00001C39 R	                    mov edx, offset dollar
 00001924  E8 00000000 E	                    call writestring
 00001929  E8 00000000 E	                    call crlf
 0000192E  BA 00001BD8 R	                    mov edx, offset userDecision
 00001933  E8 00000000 E	                    call writestring
 00001938  E8 00000000 E	                    call readint
 0000193D  B9 00000001		                    mov ecx, 1
 00001942  83 F8 01		                    cmp eax, 1
 00001945  0F 84 0000102E	                    je start
 0000194B  E9 0000105A		                    jmp showItem


 00001950			          tokyo_startBusiness:                                                                  ; main option 6 (_start business_)
 00001950  BA 000016BD R	               mov edx, offset business_options
 00001955  E8 00000000 E	               call writestring
 0000195A  E8 00000000 E	               call crlf
				               ;------------roll the dice ---------------------
 0000195F  BA 0000189B R	          mov edx, offset dice_roll
 00001964  E8 00000000 E	          call writestring
 00001969  E8 00000000 E			call crlf

 0000196E  EB 0F				jmp _skip_error_tokyo_startBusiness    

 00001970			_try_again_tokyo_startBusiness:

 00001970  BA 000018D5 R			mov edx, offset dice_roll_error_message
 00001975  E8 00000000 E	          call writestring
 0000197A  E8 00000000 E			call crlf


 0000197F			_skip_error_tokyo_startBusiness:
 0000197F  E8 00000000 E			call readint 
 00001984  83 F8 01			     cmp eax, 1	
 00001987  75 E7		          jne _try_again_tokyo_startBusiness 

 00001989  BA 000018C9 R			mov edx, offset dice_roll_status
 0000198E  E8 00000000 E	          call writestring
						
						

 00001993  EB 00				jmp _random_generate_tokyo_startBusiness 
				;------------ randomly generate numbers between 1 to 3 ------------------ 
 00001995			_random_generate_tokyo_startBusiness:         
 00001995  B8 00000003		               mov eax, 3
 0000199A  E8 00000000 E	               call randomrange
 0000199F  83 C0 01		               add eax, 1
 000019A2  A3 00001C55 R	               mov random_choice, eax
 000019A7  B8 00000BB8		               mov eax, 3000
 000019AC  E8 00000000 E	               call delay
 000019B1  A1 00001C55 R	               mov eax, random_choice
 000019B6  E8 00000000 E	               call writedec
 000019BB  E8 00000000 E	               call crlf
 000019C0  E8 00000000 E	               call crlf
 000019C5  83 F8 01		               cmp eax, 1
 000019C8  74 0E		               je tokyo_profit
 000019CA  83 F8 02		               cmp eax, 2
 000019CD  74 5D		               je tokyo_noBusiness
 000019CF  83 F8 03		               cmp eax, 3
 000019D2  0F 84 000000A8	               je tokyo_loss

 000019D8			               tokyo_profit:                                                                  ; main option 6 sub option 1
 000019D8  BA 0000173E R	                    mov edx, offset business_option1
 000019DD  E8 00000000 E	                    call writestring
 000019E2  E8 00000000 E	                    call crlf
 000019E7  BA 00001BCA R	                    mov edx, offset userString1
 000019EC  E8 00000000 E	                    call writestring
 000019F1  83 C3 64		                    add ebx, 100
 000019F4  8B C3		                    mov eax, ebx
 000019F6  E8 00000000 E	                    call writedec
 000019FB  BA 00001C39 R	                    mov edx, offset dollar
 00001A00  E8 00000000 E	                    call writestring
 00001A05  E8 00000000 E	                    call crlf
 00001A0A  BA 00001BD8 R	                    mov edx, offset userDecision
 00001A0F  E8 00000000 E	                    call writestring
 00001A14  E8 00000000 E	                    call readint
 00001A19  B9 00000001		                    mov ecx, 1
 00001A1E  83 F8 01		                    cmp eax, 1
 00001A21  0F 84 00000F52	                    je start
 00001A27  E9 00000F7E		                    jmp showItem

 00001A2C			               tokyo_noBusiness:                                                                  ; main option 6 sub option 2
 00001A2C  BA 00001782 R	                    mov edx, offset business_option2
 00001A31  E8 00000000 E	                    call writestring
 00001A36  E8 00000000 E	                    call crlf
 00001A3B  BA 00001BCA R	                    mov edx, offset userString1
 00001A40  E8 00000000 E	                    call writestring
 00001A45  83 C3 00		                    add ebx, 0
 00001A48  8B C3		                    mov eax, ebx
 00001A4A  E8 00000000 E	                    call writedec
 00001A4F  BA 00001C39 R	                    mov edx, offset dollar
 00001A54  E8 00000000 E	                    call writestring
 00001A59  E8 00000000 E	                    call crlf
 00001A5E  BA 00001BD8 R	                    mov edx, offset userDecision
 00001A63  E8 00000000 E	                    call writestring
 00001A68  E8 00000000 E	                    call readint
 00001A6D  B9 00000001		                    mov ecx, 1
 00001A72  83 F8 01		                    cmp eax, 1
 00001A75  0F 84 00000EFE	                    je start
 00001A7B  E9 00000F2A		                    jmp showItem

 00001A80			               tokyo_loss:                                                                  ; main option 6 sub option 3
 00001A80  BA 0000179B R	                    mov edx, offset business_option3
 00001A85  E8 00000000 E	                    call writestring
 00001A8A  E8 00000000 E	                    call crlf
 00001A8F  BA 00001BCA R	                    mov edx, offset userString1
 00001A94  E8 00000000 E	                    call writestring
 00001A99  83 EB 32		                    sub ebx, 50
 00001A9C  8B C3		                    mov eax, ebx
 00001A9E  E8 00000000 E	                    call writedec
 00001AA3  BA 00001C39 R	                    mov edx, offset dollar
 00001AA8  E8 00000000 E	                    call writestring
 00001AAD  E8 00000000 E	                    call crlf
 00001AB2  BA 00001BD8 R	                    mov edx, offset userDecision
 00001AB7  E8 00000000 E	                    call writestring
 00001ABC  E8 00000000 E	                    call readint
 00001AC1  B9 00000001		                    mov ecx, 1
 00001AC6  83 F8 01		                    cmp eax, 1
 00001AC9  0F 84 00000EAA	                    je start
 00001ACF  E9 00000ED6		                    jmp showItem


 00001AD4			          tokyo_buyLottery:                                                                  ; main option 7 (_buy lottery_)
 00001AD4  BA 000017DE R	               mov edx, offset lottery_options
 00001AD9  E8 00000000 E	               call writestring
 00001ADE  E8 00000000 E	               call crlf
				               ;------------roll the dice ---------------------
 00001AE3  BA 0000189B R	          mov edx, offset dice_roll
 00001AE8  E8 00000000 E	          call writestring
 00001AED  E8 00000000 E			call crlf

 00001AF2  EB 0F				jmp _skip_error_tokyo_lottery    

 00001AF4			_try_again_tokyo_lottery :

 00001AF4  BA 000018D5 R			mov edx, offset dice_roll_error_message
 00001AF9  E8 00000000 E	          call writestring
 00001AFE  E8 00000000 E			call crlf


 00001B03			_skip_error_tokyo_lottery :
 00001B03  E8 00000000 E			call readint 
 00001B08  83 F8 01			     cmp eax, 1	
 00001B0B  75 E7		          jne _try_again_tokyo_lottery  

 00001B0D  BA 000018C9 R			mov edx, offset dice_roll_status
 00001B12  E8 00000000 E	          call writestring
						
						

 00001B17  EB 00				jmp _random_generate_tokyo_lottery  
				;------------ randomly generate numbers between 1 or 2 ------------------ 
 00001B19			_random_generate_tokyo_lottery :         
 00001B19  B8 00000002		               mov eax, 2
 00001B1E  E8 00000000 E	               call randomrange
 00001B23  83 C0 01		               add eax, 1
 00001B26  A3 00001C55 R	               mov random_choice, eax
 00001B2B  B8 00000BB8		               mov eax, 3000
 00001B30  E8 00000000 E	               call delay
 00001B35  A1 00001C55 R	               mov eax, random_choice
 00001B3A  E8 00000000 E	               call writedec
 00001B3F  E8 00000000 E	               call crlf
 00001B44  E8 00000000 E	               call crlf
 00001B49  83 F8 01		               cmp eax, 1
 00001B4C  74 05		               je tokyo_jackpot
 00001B4E  83 F8 02		               cmp eax, 2
 00001B51  74 75		               je tokyo_nothing

 00001B53			               tokyo_jackpot:                                                                  ; main option 7 sub option 1
 00001B53  BA 00001839 R	                    mov edx, offset lottery_option1
 00001B58  E8 00000000 E	                    call writestring
 00001B5D  E8 00000000 E	                    call crlf
 00001B62  E8 00000000 E					call crlf
 00001B67  E8 00000000 E					call crlf
 00001B6C  BA 0000385B R					mov edx, offset jackpot_graphic
 00001B71  E8 00000000 E	                    call writestring
 00001B76  E8 00000000 E	                    call crlf
 00001B7B  E8 00000000 E					call crlf
 00001B80  BA 00001BCA R	                    mov edx, offset userString1
 00001B85  E8 00000000 E	                    call writestring
 00001B8A  81 C3 000003E8	                    add ebx, 1000
 00001B90  8B C3		                    mov eax, ebx
 00001B92  E8 00000000 E	                    call writedec
 00001B97  BA 00001C39 R	                    mov edx, offset dollar
 00001B9C  E8 00000000 E	                    call writestring
 00001BA1  E8 00000000 E	                    call crlf
 00001BA6  BA 00001BD8 R	                    mov edx, offset userDecision
 00001BAB  E8 00000000 E	                    call writestring
 00001BB0  E8 00000000 E	                    call readint
 00001BB5  B9 00000001		                    mov ecx, 1
 00001BBA  83 F8 01		                    cmp eax, 1
 00001BBD  0F 84 00000DB6	                    je start
 00001BC3  E9 00000DE2		                    jmp showItem

 00001BC8			               tokyo_nothing:                                                                  ; main option 7 sub option 2
 00001BC8  BA 00001857 R	                    mov edx, offset lottery_option2
 00001BCD  E8 00000000 E	                    call writestring
 00001BD2  E8 00000000 E	                    call crlf
 00001BD7  BA 00001BCA R	                    mov edx, offset userString1
 00001BDC  E8 00000000 E	                    call writestring
 00001BE1  83 C3 00		                    add ebx, 0
 00001BE4  8B C3		                    mov eax, ebx
 00001BE6  E8 00000000 E	                    call writedec
 00001BEB  BA 00001C39 R	                    mov edx, offset dollar
 00001BF0  E8 00000000 E	                    call writestring
 00001BF5  E8 00000000 E	                    call crlf
 00001BFA  BA 00001BD8 R	                    mov edx, offset userDecision
 00001BFF  E8 00000000 E	                    call writestring
 00001C04  E8 00000000 E	                    call readint
 00001C09  B9 00000001		                    mov ecx, 1
 00001C0E  83 F8 01		                    cmp eax, 1
 00001C11  0F 84 00000D62	                    je start
 00001C17  E9 00000D8E		                    jmp showItem



								
				;------------------------------------------- Character (Denver) ------------------------------------------------


 00001C1C			     _Denver:                                                                  ; character - Denver
				          ; -------------show option to Denver -----------------------
 00001C1C  BE 00001C5D R	          mov esi, offset property_list
 00001C21  BA 000010CB R	          mov edx, offset welcome_denver
 00001C26  E8 00000000 E	          call writestring
 00001C2B  E8 00000000 E	          call crlf
 00001C30  E8 00000000 E	          call crlf
 00001C35			          denver_startGame:
 00001C35  BA 00001198 R	          mov edx, offset den 
 00001C3A  E8 00000000 E	          call writestring
 00001C3F  8B C3		          mov eax, ebx
 00001C41  E8 00000000 E	          call writedec
 00001C46  BA 00001C39 R	          mov edx, offset dollar
 00001C4B  E8 00000000 E	          call writestring
 00001C50  E8 00000000 E	          call crlf
 00001C55  E8 00000000 E	          call crlf
 00001C5A  BA 00001211 R	          mov edx, offset main_options2
 00001C5F  E8 00000000 E	          call writestring
 00001C64  E8 00000000 E	          call crlf
 00001C69  E8 00000000 E	          call crlf
				          ;------------roll the dice ---------------------
 00001C6E  BA 0000189B R	          mov edx, offset dice_roll
 00001C73  E8 00000000 E	          call writestring
 00001C78  E8 00000000 E			call crlf

 00001C7D  EB 0F				jmp _skip_error_denver    

 00001C7F			_try_again_denver:

 00001C7F  BA 000018D5 R			mov edx, offset dice_roll_error_message
 00001C84  E8 00000000 E	          call writestring
 00001C89  E8 00000000 E			call crlf


 00001C8E			_skip_error_denver:
 00001C8E  E8 00000000 E			call readint 
 00001C93  83 F8 01			     cmp eax, 1	
 00001C96  75 E7		          jne _try_again_denver 

 00001C98  BA 000018C9 R			mov edx, offset dice_roll_status
 00001C9D  E8 00000000 E	          call writestring
						
						

 00001CA2  EB 00				jmp _random_generate_denver 
				;------------ randomly generate numbers between 1 to 7 ------------------ 
 00001CA4			_random_generate_denver:         
 00001CA4  B8 00000006		          mov eax, 6
 00001CA9  E8 00000000 E	          call randomrange
 00001CAE  83 C0 01		          add eax, 1
 00001CB1  A3 00001C55 R	          mov random_choice, eax
 00001CB6  B8 00000BB8		          mov eax, 3000
 00001CBB  E8 00000000 E	          call delay
 00001CC0  A1 00001C55 R	          mov eax, random_choice
 00001CC5  E8 00000000 E	          call writedec
 00001CCA  E8 00000000 E	          call crlf
 00001CCF  E8 00000000 E	          call crlf
				          ;--------------------compare result ----------------------------
 00001CD4  83 F8 02		          cmp eax, 2
 00001CD7  74 36		          je denver_buyHouse
 00001CD9  83 F8 04		          cmp eax, 4
 00001CDC  0F 84 00000293	          je denver_sellProduct
 00001CE2  83 F8 03		          cmp eax, 3
 00001CE5  0F 84 0000044D	          je denver_bankrupt
 00001CEB  83 F8 01		          cmp eax, 1
 00001CEE  0F 84 00000497	          je denver_buyCar
 00001CF4  83 F8 05		          cmp eax, 5
 00001CF7  0F 84 000006F4	          je denver_invest
 00001CFD  83 F8 06		          cmp eax, 6
 00001D00  0F 84 0000097C	          je denver_startBusiness
 00001D06  83 F8 07		          cmp eax, 7
 00001D09  0F 84 00000AF7	          je denver_buyLottery
				          ;---------------------show result -------------------------------
 00001D0F			          denver_buyHouse:                                                                  ; main option 1
 00001D0F  BA 00001278 R	               mov edx, offset house_options
 00001D14  E8 00000000 E	               call writestring
 00001D19  E8 00000000 E	               call crlf
				               ;------------roll the dice ---------------------
 00001D1E  BA 0000189B R	          mov edx, offset dice_roll
 00001D23  E8 00000000 E	          call writestring
 00001D28  E8 00000000 E			call crlf

 00001D2D  EB 0F				jmp _skip_error_denver_buyHouse    

 00001D2F			_try_again_denver_buyHouse :

 00001D2F  BA 000018D5 R			mov edx, offset dice_roll_error_message
 00001D34  E8 00000000 E	          call writestring
 00001D39  E8 00000000 E			call crlf


 00001D3E			_skip_error_denver_buyHouse :
 00001D3E  E8 00000000 E			call readint 
 00001D43  83 F8 01			     cmp eax, 1	
 00001D46  75 E7		          jne _try_again_denver_buyHouse  

 00001D48  BA 000018C9 R			mov edx, offset dice_roll_status
 00001D4D  E8 00000000 E	          call writestring
						
						

 00001D52  EB 00				jmp _random_generate_denver_buyHouse  
				;------------ randomly generate numbers between 1 to 4 ------------------ 
 00001D54			_random_generate_denver_buyHouse :         
 00001D54  B8 00000004		               mov eax, 4
 00001D59  E8 00000000 E	               call randomrange
 00001D5E  83 C0 01		               add eax, 1
 00001D61  A3 00001C55 R	               mov random_choice, eax
 00001D66  B8 00000BB8		               mov eax, 3000
 00001D6B  E8 00000000 E	               call delay
 00001D70  A1 00001C55 R	               mov eax, random_choice
 00001D75  E8 00000000 E	               call writedec
 00001D7A  E8 00000000 E	               call crlf
 00001D7F  E8 00000000 E	               call crlf
 00001D84  83 F8 01		               cmp eax, 1
 00001D87  74 1B		               je denver_penthouse
 00001D89  83 F8 02		               cmp eax, 2
 00001D8C  0F 84 00000091	               je denver_garden
 00001D92  83 F8 03		               cmp eax, 3
 00001D95  0F 84 00000107	               je denver_sky
 00001D9B  83 F8 04		               cmp eax, 4
 00001D9E  0F 84 0000017D	               je denver_noHouse
 00001DA4			               denver_penthouse:                                                                  ; main option 1 sub option 1
 00001DA4  B8 00000001		                    mov eax , 1
 00001DA9  89 06		                    mov [esi], eax
 00001DAB  83 C6 04		                    add esi, 4
 00001DAE  BA 000012FE R	                    mov edx, offset house_option1
 00001DB3  E8 00000000 E	                    call writestring
 00001DB8  E8 00000000 E	                    call crlf
 00001DBD  E8 00000000 E					call crlf
 00001DC2  E8 00000000 E					call crlf
 00001DC7  BA 00001E2B R					mov edx, offset penthouse_graphic
 00001DCC  E8 00000000 E	                    call writestring
 00001DD1  E8 00000000 E	                    call crlf
 00001DD6  E8 00000000 E					call crlf
 00001DDB  BA 00001BCA R	                    mov edx, offset userString1
 00001DE0  E8 00000000 E	                    call writestring
 00001DE5  81 EB 00000190	                    sub ebx, 400
 00001DEB  8B C3		                    mov eax, ebx
 00001DED  E8 00000000 E	                    call writedec
 00001DF2  BA 00001C39 R	                    mov edx, offset dollar
 00001DF7  E8 00000000 E	                    call writestring
 00001DFC  E8 00000000 E	                    call crlf
 00001E01  BA 00001BD8 R	                    mov edx, offset userDecision
 00001E06  E8 00000000 E	                    call writestring
 00001E0B  E8 00000000 E	                    call readint
 00001E10  B9 00000002		                    mov ecx, 2
 00001E15  83 F8 01		                    cmp eax, 1
 00001E18  0F 84 00000B5B	                    je start
 00001E1E  E9 00000B87		                    jmp showItem
 00001E23			               denver_garden:                                                                  ; main option 1 sub option 2
 00001E23  B8 00000002		                    mov eax , 2
 00001E28  89 06		                    mov [esi], eax
 00001E2A  83 C6 04		                    add esi, 4
 00001E2D  BA 00001325 R	                    mov edx, offset house_option2
 00001E32  E8 00000000 E	                    call writestring
 00001E37  E8 00000000 E	                    call crlf
 00001E3C  E8 00000000 E					call crlf
 00001E41  E8 00000000 E					call crlf
 00001E46  BA 00001ED6 R					mov edx, offset gardenApartment_graphic
 00001E4B  E8 00000000 E	                    call writestring
 00001E50  E8 00000000 E	                    call crlf
 00001E55  E8 00000000 E					call crlf
 00001E5A  BA 00001BCA R	                    mov edx, offset userString1
 00001E5F  E8 00000000 E	                    call writestring
 00001E64  81 EB 000000C8	                    sub ebx, 200
 00001E6A  8B C3		                    mov eax, ebx
 00001E6C  E8 00000000 E	                    call writedec
 00001E71  BA 00001C39 R	                    mov edx, offset dollar
 00001E76  E8 00000000 E	                    call writestring
 00001E7B  E8 00000000 E	                    call crlf
 00001E80  BA 00001BD8 R	                    mov edx, offset userDecision
 00001E85  E8 00000000 E	                    call writestring
 00001E8A  E8 00000000 E	                    call readint
 00001E8F  B9 00000002		                    mov ecx, 2
 00001E94  83 F8 01		                    cmp eax, 1
 00001E97  0F 84 00000ADC	                    je start
 00001E9D  E9 00000B08		                    jmp showItem
 00001EA2			               denver_sky:                                                                  ; main option 1 sub option 3
 00001EA2  B8 00000003		                    mov eax , 3
 00001EA7  89 06		                    mov [esi], eax
 00001EA9  83 C6 04		                    add esi, 4
 00001EAC  BA 00001358 R	                    mov edx, offset house_option3
 00001EB1  E8 00000000 E	                    call writestring
 00001EB6  E8 00000000 E	                    call crlf
 00001EBB  E8 00000000 E					call crlf
 00001EC0  E8 00000000 E					call crlf
 00001EC5  BA 00002024 R					mov edx, offset sky_loft_graphic
 00001ECA  E8 00000000 E	                    call writestring
 00001ECF  E8 00000000 E	                    call crlf
 00001ED4  E8 00000000 E					call crlf
 00001ED9  BA 00001BCA R	                    mov edx, offset userString1
 00001EDE  E8 00000000 E	                    call writestring
 00001EE3  81 EB 0000012C	                    sub ebx, 300
 00001EE9  8B C3		                    mov eax, ebx
 00001EEB  E8 00000000 E	                    call writedec
 00001EF0  BA 00001C39 R	                    mov edx, offset dollar
 00001EF5  E8 00000000 E	                    call writestring
 00001EFA  E8 00000000 E	                    call crlf
 00001EFF  BA 00001BD8 R	                    mov edx, offset userDecision
 00001F04  E8 00000000 E	                    call writestring
 00001F09  E8 00000000 E	                    call readint
 00001F0E  B9 00000002		                    mov ecx, 2
 00001F13  83 F8 01		                    cmp eax, 1
 00001F16  0F 84 00000A5D	                    je start
 00001F1C  E9 00000A89		                    jmp showItem
 00001F21			               denver_noHouse:                                                                  ; main option 1 sub option 4
 00001F21  BA 00001384 R	                    mov edx, offset house_option4
 00001F26  E8 00000000 E	                    call writestring
 00001F2B  E8 00000000 E	                    call crlf
 00001F30  BA 00001BCA R	                    mov edx, offset userString1
 00001F35  E8 00000000 E	                    call writestring
 00001F3A  83 EB 00		                    sub ebx, 0
 00001F3D  8B C3		                    mov eax, ebx
 00001F3F  E8 00000000 E	                    call writedec
 00001F44  BA 00001C39 R	                    mov edx, offset dollar
 00001F49  E8 00000000 E	                    call writestring
 00001F4E  E8 00000000 E	                    call crlf
 00001F53  BA 00001BD8 R	                    mov edx, offset userDecision
 00001F58  E8 00000000 E	                    call writestring
 00001F5D  E8 00000000 E	                    call readint
 00001F62  B9 00000002		                    mov ecx, 2
 00001F67  83 F8 01		                    cmp eax, 1
 00001F6A  0F 84 00000A09	                    je start
 00001F70  E9 00000A35		                    jmp showItem
 00001F75			               denver_sellProduct:                                                                  ; main option 2
 00001F75  BA 000013C2 R	               mov edx, offset product_options
 00001F7A  E8 00000000 E	               call writestring
 00001F7F  E8 00000000 E	               call crlf
				               ;------------roll the dice ---------------------
 00001F84  BA 0000189B R	          mov edx, offset dice_roll
 00001F89  E8 00000000 E	          call writestring
 00001F8E  E8 00000000 E			call crlf

 00001F93  EB 0F				jmp _skip_error_denver_sellProduct    

 00001F95			_try_again_denver_sellProduct :

 00001F95  BA 000018D5 R			mov edx, offset dice_roll_error_message
 00001F9A  E8 00000000 E	          call writestring
 00001F9F  E8 00000000 E			call crlf


 00001FA4			_skip_error_denver_sellProduct :
 00001FA4  E8 00000000 E			call readint 
 00001FA9  83 F8 01			     cmp eax, 1	
 00001FAC  75 E7		          jne _try_again_denver_sellProduct  

 00001FAE  BA 000018C9 R			mov edx, offset dice_roll_status
 00001FB3  E8 00000000 E	          call writestring
						
						

 00001FB8  EB 00				jmp _random_generate_denver_sellProduct  
				;------------ randomly generate numbers between 1 to 3 ------------------ 
 00001FBA			_random_generate_denver_sellProduct :         
 00001FBA  B8 00000003		               mov eax, 3
 00001FBF  E8 00000000 E	               call randomrange
 00001FC4  83 C0 01		               add eax, 1
 00001FC7  A3 00001C55 R	               mov random_choice, eax
 00001FCC  B8 00000BB8		               mov eax, 3000
 00001FD1  E8 00000000 E	               call delay
 00001FD6  A1 00001C55 R	               mov eax, random_choice
 00001FDB  E8 00000000 E	               call writedec
 00001FE0  E8 00000000 E	               call crlf
 00001FE5  E8 00000000 E	               call crlf
 00001FEA  83 F8 01		               cmp eax, 1
 00001FED  74 0E		               je denver_piano
 00001FEF  83 F8 02		               cmp eax, 2
 00001FF2  74 7E		               je denver_watch
 00001FF4  83 F8 03		               cmp eax, 3
 00001FF7  0F 84 000000E7	               je denver_noSell
 00001FFD			               denver_piano:                                                                  ; main option 1 sub option 1
 00001FFD  BA 00001449 R	                    mov edx, offset product_option1
 00002002  E8 00000000 E	                    call writestring
 00002007  E8 00000000 E	                    call crlf
 0000200C  E8 00000000 E					call crlf
 00002011  E8 00000000 E					call crlf
 00002016  BA 000022F9 R					mov edx, offset piano_graphic
 0000201B  E8 00000000 E	                    call writestring
 00002020  E8 00000000 E	                    call crlf
 00002025  E8 00000000 E					call crlf
 0000202A  BA 00001BCA R	                    mov edx, offset userString1
 0000202F  E8 00000000 E	                    call writestring
 00002034  81 C3 000000C8	                    add ebx, 200
 0000203A  8B C3		                    mov eax, ebx
 0000203C  E8 00000000 E	                    call writedec
 00002041  BA 00001C39 R	                    mov edx, offset dollar
 00002046  E8 00000000 E	                    call writestring
 0000204B  E8 00000000 E	                    call crlf
 00002050  BA 00001BD8 R	                    mov edx, offset userDecision
 00002055  E8 00000000 E	                    call writestring
 0000205A  E8 00000000 E	                    call readint
 0000205F  B9 00000002		                    mov ecx, 2
 00002064  83 F8 01		                    cmp eax, 1
 00002067  0F 84 0000090C	                    je start
 0000206D  E9 00000938		                    jmp showItem
 00002072			               denver_watch:                                                                  ; main option 2 sub option 2
 00002072  BA 0000146D R	                    mov edx, offset product_option2
 00002077  E8 00000000 E	                    call writestring
 0000207C  E8 00000000 E	                    call crlf
 00002081  E8 00000000 E					call crlf
 00002086  E8 00000000 E					call crlf
 0000208B  BA 000023E5 R					mov edx, offset watch_graphic
 00002090  E8 00000000 E	                    call writestring
 00002095  E8 00000000 E	                    call crlf
 0000209A  E8 00000000 E					call crlf
 0000209F  BA 00001BCA R	                    mov edx, offset userString1
 000020A4  E8 00000000 E	                    call writestring
 000020A9  83 C3 64		                    add ebx, 100
 000020AC  8B C3		                    mov eax, ebx
 000020AE  E8 00000000 E	                    call writedec
 000020B3  BA 00001C39 R	                    mov edx, offset dollar
 000020B8  E8 00000000 E	                    call writestring
 000020BD  E8 00000000 E	                    call crlf
 000020C2  BA 00001BD8 R	                    mov edx, offset userDecision
 000020C7  E8 00000000 E	                    call writestring
 000020CC  E8 00000000 E	                    call readint
 000020D1  B9 00000002		                    mov ecx, 2
 000020D6  83 F8 01		                    cmp eax, 1
 000020D9  0F 84 0000089A	                    je start
 000020DF  E9 000008C6		                    jmp showItem
 000020E4			               denver_noSell:                                                                  ; main option 2 sub option 3
 000020E4  BA 00001495 R	                    mov edx, offset product_option3
 000020E9  E8 00000000 E	                    call writestring
 000020EE  E8 00000000 E	                    call crlf
 000020F3  BA 00001BCA R	                    mov edx, offset userString1
 000020F8  E8 00000000 E	                    call writestring
 000020FD  83 C3 00		                    add ebx, 0
 00002100  8B C3		                    mov eax, ebx
 00002102  E8 00000000 E	                    call writedec
 00002107  BA 00001C39 R	                    mov edx, offset dollar
 0000210C  E8 00000000 E	                    call writestring
 00002111  E8 00000000 E	                    call crlf
 00002116  BA 00001BD8 R	                    mov edx, offset userDecision
 0000211B  E8 00000000 E	                    call writestring
 00002120  E8 00000000 E	                    call readint
 00002125  B9 00000002		                    mov ecx, 2
 0000212A  83 F8 01		                    cmp eax, 1
 0000212D  0F 84 00000846	                    je start
 00002133  E9 00000872		                    jmp showItem
 00002138			          denver_bankrupt:                                                                  ; main option 3
 00002138  BA 00001917 R	               mov edx, offset bankruptString
 0000213D  E8 00000000 E	               call writestring
 00002142  E8 00000000 E	               call crlf
 00002147  BA 00001BCA R	               mov edx, offset userString1
 0000214C  E8 00000000 E	               call writestring
 00002151  2B DB		               sub ebx, ebx
 00002153  8B C3		               mov eax, ebx
 00002155  E8 00000000 E	               call writedec
 0000215A  BA 00001C39 R	               mov edx, offset dollar
 0000215F  E8 00000000 E	               call writestring
 00002164  E8 00000000 E	               call crlf
 00002169  BA 00001BD8 R	               mov edx, offset userDecision
 0000216E  E8 00000000 E	               call writestring
 00002173  E8 00000000 E	               call readint
 00002178  B9 00000002		               mov ecx, 2
 0000217D  83 F8 01		               cmp eax, 1
 00002180  0F 84 000007F3	               je start
 00002186  E9 0000081F		               jmp showItem
 0000218B			          denver_buyCar:                                                                  ; main option 4
 0000218B  BA 000014AC R	               mov edx, offset car_options
 00002190  E8 00000000 E	               call writestring
 00002195  E8 00000000 E	               call crlf
				               ;------------roll the dice ---------------------
 0000219A  BA 0000189B R	          mov edx, offset dice_roll
 0000219F  E8 00000000 E	          call writestring
 000021A4  E8 00000000 E			call crlf

 000021A9  EB 0F				jmp _skip_error_denver_buyCar    

 000021AB			_try_again_denver_buyCar:

 000021AB  BA 000018D5 R			mov edx, offset dice_roll_error_message
 000021B0  E8 00000000 E	          call writestring
 000021B5  E8 00000000 E			call crlf


 000021BA			_skip_error_denver_buyCar:
 000021BA  E8 00000000 E			call readint 
 000021BF  83 F8 01			     cmp eax, 1	
 000021C2  75 E7		          jne _try_again_denver_buyCar 

 000021C4  BA 000018C9 R			mov edx, offset dice_roll_status
 000021C9  E8 00000000 E	          call writestring
						
						

 000021CE  EB 00				jmp _random_generate_denver_buyCar 
				;------------ randomly generate numbers between 1 to 4 ------------------ 
 000021D0			_random_generate_denver_buyCar:         
 000021D0  B8 00000004		               mov eax, 4
 000021D5  E8 00000000 E	               call randomrange
 000021DA  83 C0 01		               add eax, 1
 000021DD  A3 00001C55 R	               mov random_choice, eax
 000021E2  B8 00000BB8		               mov eax, 3000
 000021E7  E8 00000000 E	               call delay
 000021EC  A1 00001C55 R	               mov eax, random_choice
 000021F1  E8 00000000 E	               call writedec
 000021F6  E8 00000000 E	               call crlf
 000021FB  E8 00000000 E	               call crlf
 00002200  83 F8 01		               cmp eax, 1
 00002203  74 1B		               je denver_audi
 00002205  83 F8 02		               cmp eax, 2
 00002208  0F 84 00000091	               je denver_lamborghini
 0000220E  83 F8 03		               cmp eax, 3
 00002211  0F 84 00000107	               je denver_ferrari
 00002217  83 F8 04		               cmp eax, 4
 0000221A  0F 84 0000017D	               je denver_noCar
 00002220			               denver_audi:                                                                  ; main option 4 sub option 1
 00002220  B8 00000004		                    mov eax , 4
 00002225  89 06		                    mov [esi], eax
 00002227  83 C6 04		                    add esi, 4
 0000222A  BA 00001526 R	                    mov edx, offset car_option1
 0000222F  E8 00000000 E	                    call writestring
 00002234  E8 00000000 E	                    call crlf
 00002239  E8 00000000 E					call crlf
 0000223E  E8 00000000 E					call crlf
 00002243  BA 00002BB9 R					mov edx, offset audi_graphic
 00002248  E8 00000000 E	                    call writestring
 0000224D  E8 00000000 E	                    call crlf
 00002252  E8 00000000 E					call crlf
 00002257  BA 00001BCA R	                    mov edx, offset userString1
 0000225C  E8 00000000 E	                    call writestring
 00002261  81 EB 0000012C	                    sub ebx, 300
 00002267  8B C3		                    mov eax, ebx
 00002269  E8 00000000 E	                    call writedec
 0000226E  BA 00001C39 R	                    mov edx, offset dollar
 00002273  E8 00000000 E	                    call writestring
 00002278  E8 00000000 E	                    call crlf
 0000227D  BA 00001BD8 R	                    mov edx, offset userDecision
 00002282  E8 00000000 E	                    call writestring
 00002287  E8 00000000 E	                    call readint
 0000228C  B9 00000002		                    mov ecx, 2
 00002291  83 F8 01		                    cmp eax, 1
 00002294  0F 84 000006DF	                    je start
 0000229A  E9 0000070B		                    jmp showItem
 0000229F			               denver_lamborghini:                                                                  ; main option 4 sub option 2
 0000229F  B8 00000005		                    mov eax , 5
 000022A4  89 06		                    mov [esi], eax
 000022A6  83 C6 04		                    add esi, 4
 000022A9  BA 00001540 R	                    mov edx, offset car_option2
 000022AE  E8 00000000 E	                    call writestring
 000022B3  E8 00000000 E	                    call crlf
 000022B8  E8 00000000 E					call crlf
 000022BD  E8 00000000 E					call crlf
 000022C2  BA 00002551 R					mov edx, offset lamborghini_graphic
 000022C7  E8 00000000 E	                    call writestring
 000022CC  E8 00000000 E	                    call crlf
 000022D1  E8 00000000 E					call crlf
 000022D6  BA 00001BCA R	                    mov edx, offset userString1
 000022DB  E8 00000000 E	                    call writestring
 000022E0  81 EB 000001F4	                    sub ebx, 500
 000022E6  8B C3		                    mov eax, ebx
 000022E8  E8 00000000 E	                    call writedec
 000022ED  BA 00001C39 R	                    mov edx, offset dollar
 000022F2  E8 00000000 E	                    call writestring
 000022F7  E8 00000000 E	                    call crlf
 000022FC  BA 00001BD8 R	                    mov edx, offset userDecision
 00002301  E8 00000000 E	                    call writestring
 00002306  E8 00000000 E	                    call readint
 0000230B  B9 00000002		                    mov ecx, 2
 00002310  83 F8 01		                    cmp eax, 1
 00002313  0F 84 00000660	                    je start
 00002319  E9 0000068C		                    jmp showItem
 0000231E			               denver_ferrari:                                                                  ; main option 4 sub option 3
 0000231E  B8 00000006		                    mov eax , 6
 00002323  89 06		                    mov [esi], eax
 00002325  83 C6 04		                    add esi, 4
 00002328  BA 0000155D R	                    mov edx, offset car_option3
 0000232D  E8 00000000 E	                    call writestring
 00002332  E8 00000000 E	                    call crlf
 00002337  E8 00000000 E					call crlf
 0000233C  E8 00000000 E					call crlf
 00002341  BA 00002834 R					mov edx, offset ferrari_graphic
 00002346  E8 00000000 E	                    call writestring
 0000234B  E8 00000000 E	                    call crlf
 00002350  E8 00000000 E					call crlf
 00002355  BA 00001BCA R	                    mov edx, offset userString1
 0000235A  E8 00000000 E	                    call writestring
 0000235F  81 EB 00000258	                    sub ebx, 600
 00002365  8B C3		                    mov eax, ebx
 00002367  E8 00000000 E	                    call writedec
 0000236C  BA 00001C39 R	                    mov edx, offset dollar
 00002371  E8 00000000 E	                    call writestring
 00002376  E8 00000000 E	                    call crlf
 0000237B  BA 00001BD8 R	                    mov edx, offset userDecision
 00002380  E8 00000000 E	                    call writestring
 00002385  E8 00000000 E	                    call readint
 0000238A  B9 00000002		                    mov ecx, 2
 0000238F  83 F8 01		                    cmp eax, 1
 00002392  0F 84 000005E1	                    je start
 00002398  E9 0000060D		                    jmp showItem
 0000239D			               denver_noCar:                                                                  ; main option 4 sub option 4
 0000239D  BA 0000157E R	                    mov edx, offset car_option4
 000023A2  E8 00000000 E	                    call writestring
 000023A7  E8 00000000 E	                    call crlf
 000023AC  BA 00001BCA R	                    mov edx, offset userString1
 000023B1  E8 00000000 E	                    call writestring
 000023B6  83 EB 00		                    sub ebx, 0
 000023B9  8B C3		                    mov eax, ebx
 000023BB  E8 00000000 E	                    call writedec
 000023C0  BA 00001C39 R	                    mov edx, offset dollar
 000023C5  E8 00000000 E	                    call writestring
 000023CA  E8 00000000 E	                    call crlf
 000023CF  BA 00001BD8 R	                    mov edx, offset userDecision
 000023D4  E8 00000000 E	                    call writestring
 000023D9  E8 00000000 E	                    call readint
 000023DE  B9 00000002		                    mov ecx, 2
 000023E3  83 F8 01		                    cmp eax, 1
 000023E6  0F 84 0000058D	                    je start
 000023EC  E9 000005B9		                    jmp showItem
 000023F1			          denver_invest:                                                                  ; main option 5
 000023F1  BA 000015BC R	               mov edx, offset invest_options
 000023F6  E8 00000000 E	               call writestring
 000023FB  E8 00000000 E	               call crlf
				              ;------------roll the dice ---------------------
 00002400  BA 0000189B R	          mov edx, offset dice_roll
 00002405  E8 00000000 E	          call writestring
 0000240A  E8 00000000 E			call crlf

 0000240F  EB 0F				jmp _skip_error_denver_invest   

 00002411			_try_again_denver_invest :

 00002411  BA 000018D5 R			mov edx, offset dice_roll_error_message
 00002416  E8 00000000 E	          call writestring
 0000241B  E8 00000000 E			call crlf


 00002420			_skip_error_denver_invest :
 00002420  E8 00000000 E			call readint 
 00002425  83 F8 01			     cmp eax, 1	
 00002428  75 E7		          jne _try_again_denver_invest  

 0000242A  BA 000018C9 R			mov edx, offset dice_roll_status
 0000242F  E8 00000000 E	          call writestring
						
						

 00002434  EB 00				jmp _random_generate_denver_invest  
				;------------ randomly generate numbers between 1 to 4 ------------------ 
 00002436			_random_generate_denver_invest :         
 00002436  B8 00000004		               mov eax, 4
 0000243B  E8 00000000 E	               call randomrange
 00002440  83 C0 01		               add eax, 1
 00002443  A3 00001C55 R	               mov random_choice, eax
 00002448  B8 00000BB8		               mov eax, 3000
 0000244D  E8 00000000 E	               call delay
 00002452  A1 00001C55 R	               mov eax, random_choice
 00002457  E8 00000000 E	               call writedec
 0000245C  E8 00000000 E	               call crlf
 00002461  E8 00000000 E	               call crlf
 00002466  83 F8 01		               cmp eax, 1
 00002469  74 1B		               je denver_cokacola
 0000246B  83 F8 02		               cmp eax, 2
 0000246E  0F 84 00000091	               je denver_acer
 00002474  83 F8 03		               cmp eax, 3
 00002477  0F 84 00000107	               je denver_spacex
 0000247D  83 F8 04		               cmp eax, 4
 00002480  0F 84 0000017D	               je denver_yahoo
 00002486			               denver_cokacola:                                                                  ; main option 5 sub option 1
 00002486  B8 00000007		                    mov eax , 7
 0000248B  89 06		                    mov [esi], eax
 0000248D  83 C6 04		                    add esi, 4
 00002490  BA 0000163B R	                    mov edx, offset invest_option1
 00002495  E8 00000000 E	                    call writestring
 0000249A  E8 00000000 E	                    call crlf
 0000249F  E8 00000000 E					call crlf
 000024A4  E8 00000000 E					call crlf
 000024A9  BA 00002FF1 R					mov edx, offset coke_graphic
 000024AE  E8 00000000 E	                    call writestring
 000024B3  E8 00000000 E	                    call crlf
 000024B8  E8 00000000 E					call crlf
 000024BD  BA 00001BCA R	                    mov edx, offset userString1
 000024C2  E8 00000000 E	                    call writestring
 000024C7  81 C3 000000C8	                    add ebx, 200
 000024CD  8B C3		                    mov eax, ebx
 000024CF  E8 00000000 E	                    call writedec
 000024D4  BA 00001C39 R	                    mov edx, offset dollar
 000024D9  E8 00000000 E	                    call writestring
 000024DE  E8 00000000 E	                    call crlf
 000024E3  BA 00001BD8 R	                    mov edx, offset userDecision
 000024E8  E8 00000000 E	                    call writestring
 000024ED  E8 00000000 E	                    call readint
 000024F2  B9 00000002		                    mov ecx, 2
 000024F7  83 F8 01		                    cmp eax, 1
 000024FA  0F 84 00000479	                    je start
 00002500  E9 000004A5		                    jmp showItem
 00002505			               denver_acer:                                                                  ; main option 5 sub option 2
 00002505  B8 00000008		                    mov eax , 8
 0000250A  89 06		                    mov [esi], eax
 0000250C  83 C6 04		                    add esi, 4
 0000250F  BA 00001654 R	                    mov edx, offset invest_option2
 00002514  E8 00000000 E	                    call writestring
 00002519  E8 00000000 E	                    call crlf
 0000251E  E8 00000000 E					call crlf
 00002523  E8 00000000 E					call crlf
 00002528  BA 000035B2 R					mov edx, offset acer_graphic
 0000252D  E8 00000000 E	                    call writestring
 00002532  E8 00000000 E	                    call crlf
 00002537  E8 00000000 E					call crlf
 0000253C  BA 00001BCA R	                    mov edx, offset userString1
 00002541  E8 00000000 E	                    call writestring
 00002546  81 EB 0000012C	                    sub ebx, 300
 0000254C  8B C3		                    mov eax, ebx
 0000254E  E8 00000000 E	                    call writedec
 00002553  BA 00001C39 R	                    mov edx, offset dollar
 00002558  E8 00000000 E	                    call writestring
 0000255D  E8 00000000 E	                    call crlf
 00002562  BA 00001BD8 R	                    mov edx, offset userDecision
 00002567  E8 00000000 E	                    call writestring
 0000256C  E8 00000000 E	                    call readint
 00002571  B9 00000002		                    mov ecx, 2
 00002576  83 F8 01		                    cmp eax, 1
 00002579  0F 84 000003FA	                    je start
 0000257F  E9 00000426		                    jmp showItem
 00002584			               denver_spacex:                                                                  ; main option 5 sub option 3
 00002584  B8 00000009		                    mov eax , 9
 00002589  89 06		                    mov [esi], eax
 0000258B  83 C6 04		                    add esi, 4
 0000258E  BA 0000166C R	                    mov edx, offset invest_option3
 00002593  E8 00000000 E	                    call writestring
 00002598  E8 00000000 E	                    call crlf
 0000259D  E8 00000000 E					call crlf
 000025A2  E8 00000000 E					call crlf
 000025A7  BA 000033D5 R					mov edx, offset spacex_graphic
 000025AC  E8 00000000 E	                    call writestring
 000025B1  E8 00000000 E	                    call crlf
 000025B6  E8 00000000 E					call crlf
 000025BB  BA 00001BCA R	                    mov edx, offset userString1
 000025C0  E8 00000000 E	                    call writestring
 000025C5  81 C3 000001F4	                    add ebx, 500
 000025CB  8B C3		                    mov eax, ebx
 000025CD  E8 00000000 E	                    call writedec
 000025D2  BA 00001C39 R	                    mov edx, offset dollar
 000025D7  E8 00000000 E	                    call writestring
 000025DC  E8 00000000 E	                    call crlf
 000025E1  BA 00001BD8 R	                    mov edx, offset userDecision
 000025E6  E8 00000000 E	                    call writestring
 000025EB  E8 00000000 E	                    call readint
 000025F0  B9 00000002		                    mov ecx, 2
 000025F5  83 F8 01		                    cmp eax, 1
 000025F8  0F 84 0000037B	                    je start
 000025FE  E9 000003A7		                    jmp showItem
 00002603			               denver_yahoo:                                                                  ; main option 5 sub option 4
 00002603  B8 0000000A		                    mov eax , 10
 00002608  89 06		                    mov [esi], eax
 0000260A  83 C6 04		                    add esi, 4
 0000260D  BA 00001697 R	                    mov edx, offset invest_option4
 00002612  E8 00000000 E	                    call writestring
 00002617  E8 00000000 E	                    call crlf
 0000261C  E8 00000000 E					call crlf
 00002621  E8 00000000 E					call crlf
 00002626  BA 000036CA R					mov edx, offset yahoo_graphic
 0000262B  E8 00000000 E	                    call writestring
 00002630  E8 00000000 E	                    call crlf
 00002635  E8 00000000 E					call crlf
 0000263A  BA 00001BCA R	                    mov edx, offset userString1
 0000263F  E8 00000000 E	                    call writestring
 00002644  81 EB 000001F4	                    sub ebx, 500
 0000264A  8B C3		                    mov eax, ebx
 0000264C  E8 00000000 E	                    call writedec
 00002651  BA 00001C39 R	                    mov edx, offset dollar
 00002656  E8 00000000 E	                    call writestring
 0000265B  E8 00000000 E	                    call crlf
 00002660  BA 00001BD8 R	                    mov edx, offset userDecision
 00002665  E8 00000000 E	                    call writestring
 0000266A  E8 00000000 E	                    call readint
 0000266F  B9 00000002		                    mov ecx, 2
 00002674  83 F8 01		                    cmp eax, 1
 00002677  0F 84 000002FC	                    je start
 0000267D  E9 00000328		                    jmp showItem
 00002682			          denver_startBusiness:                                                                  ; main option 6
 00002682  BA 000016BD R	               mov edx, offset business_options
 00002687  E8 00000000 E	               call writestring
 0000268C  E8 00000000 E	               call crlf
				               ;------------roll the dice ---------------------
 00002691  BA 0000189B R	          mov edx, offset dice_roll
 00002696  E8 00000000 E	          call writestring
 0000269B  E8 00000000 E			call crlf

 000026A0  EB 0F				jmp _skip_error_denver_startBusiness    

 000026A2			_try_again_denver_startBusiness  :

 000026A2  BA 000018D5 R			mov edx, offset dice_roll_error_message
 000026A7  E8 00000000 E	          call writestring
 000026AC  E8 00000000 E			call crlf


 000026B1			_skip_error_denver_startBusiness  :
 000026B1  E8 00000000 E			call readint 
 000026B6  83 F8 01			     cmp eax, 1	
 000026B9  75 E7		          jne _try_again_denver_startBusiness   

 000026BB  BA 000018C9 R			mov edx, offset dice_roll_status
 000026C0  E8 00000000 E	          call writestring
						
						

 000026C5  EB 00				jmp _random_generate_denver_startBusiness   
				;------------ randomly generate numbers between 1 to 3 ------------------ 
 000026C7			_random_generate_denver_startBusiness  :         
 000026C7  B8 00000003		               mov eax, 3
 000026CC  E8 00000000 E	               call randomrange
 000026D1  83 C0 01		               add eax, 1
 000026D4  A3 00001C55 R	               mov random_choice, eax
 000026D9  B8 00000BB8		               mov eax, 3000
 000026DE  E8 00000000 E	               call delay
 000026E3  A1 00001C55 R	               mov eax, random_choice
 000026E8  E8 00000000 E	               call writedec
 000026ED  E8 00000000 E	               call crlf
 000026F2  E8 00000000 E	               call crlf
 000026F7  83 F8 01		               cmp eax, 1
 000026FA  74 0E		               je denver_profit
 000026FC  83 F8 02		               cmp eax, 2
 000026FF  74 5D		               je denver_noBusiness
 00002701  83 F8 03		               cmp eax, 3
 00002704  0F 84 000000A8	               je denver_loss
 0000270A			               denver_profit:                                                                  ; main option 6 sub option 1
 0000270A  BA 0000173E R	                    mov edx, offset business_option1
 0000270F  E8 00000000 E	                    call writestring
 00002714  E8 00000000 E	                    call crlf
 00002719  BA 00001BCA R	                    mov edx, offset userString1
 0000271E  E8 00000000 E	                    call writestring
 00002723  83 C3 64		                    add ebx, 100
 00002726  8B C3		                    mov eax, ebx
 00002728  E8 00000000 E	                    call writedec
 0000272D  BA 00001C39 R	                    mov edx, offset dollar
 00002732  E8 00000000 E	                    call writestring
 00002737  E8 00000000 E	                    call crlf
 0000273C  BA 00001BD8 R	                    mov edx, offset userDecision
 00002741  E8 00000000 E	                    call writestring
 00002746  E8 00000000 E	                    call readint
 0000274B  B9 00000002		                    mov ecx, 2
 00002750  83 F8 01		                    cmp eax, 1
 00002753  0F 84 00000220	                    je start
 00002759  E9 0000024C		                    jmp showItem
 0000275E			               denver_noBusiness:                                                                  ; main option 6 sub option 2
 0000275E  BA 00001782 R	                    mov edx, offset business_option2
 00002763  E8 00000000 E	                    call writestring
 00002768  E8 00000000 E	                    call crlf
 0000276D  BA 00001BCA R	                    mov edx, offset userString1
 00002772  E8 00000000 E	                    call writestring
 00002777  83 C3 00		                    add ebx, 0
 0000277A  8B C3		                    mov eax, ebx
 0000277C  E8 00000000 E	                    call writedec
 00002781  BA 00001C39 R	                    mov edx, offset dollar
 00002786  E8 00000000 E	                    call writestring
 0000278B  E8 00000000 E	                    call crlf
 00002790  BA 00001BD8 R	                    mov edx, offset userDecision
 00002795  E8 00000000 E	                    call writestring
 0000279A  E8 00000000 E	                    call readint
 0000279F  B9 00000002		                    mov ecx, 2
 000027A4  83 F8 01		                    cmp eax, 1
 000027A7  0F 84 000001CC	                    je start
 000027AD  E9 000001F8		                    jmp showItem
 000027B2			               denver_loss:                                                                  ; main option 6 sub option 3
 000027B2  BA 0000179B R	                    mov edx, offset business_option3
 000027B7  E8 00000000 E	                    call writestring
 000027BC  E8 00000000 E	                    call crlf
 000027C1  BA 00001BCA R	                    mov edx, offset userString1
 000027C6  E8 00000000 E	                    call writestring
 000027CB  83 EB 32		                    sub ebx, 50
 000027CE  8B C3		                    mov eax, ebx
 000027D0  E8 00000000 E	                    call writedec
 000027D5  BA 00001C39 R	                    mov edx, offset dollar
 000027DA  E8 00000000 E	                    call writestring
 000027DF  E8 00000000 E	                    call crlf
 000027E4  BA 00001BD8 R	                    mov edx, offset userDecision
 000027E9  E8 00000000 E	                    call writestring
 000027EE  E8 00000000 E	                    call readint
 000027F3  B9 00000002		                    mov ecx, 2
 000027F8  83 F8 01		                    cmp eax, 1
 000027FB  0F 84 00000178	                    je start
 00002801  E9 000001A4		                    jmp showItem
 00002806			          denver_buyLottery:                                                                  ; main option 7
 00002806  BA 000017DE R	               mov edx, offset lottery_options
 0000280B  E8 00000000 E	               call writestring
 00002810  E8 00000000 E	               call crlf
				               ;------------roll the dice ---------------------
 00002815  BA 0000189B R	          mov edx, offset dice_roll
 0000281A  E8 00000000 E	          call writestring
 0000281F  E8 00000000 E			call crlf

 00002824  EB 0F				jmp _skip_error_denver_lottery    

 00002826			_try_again_denver_lottery:

 00002826  BA 000018D5 R			mov edx, offset dice_roll_error_message
 0000282B  E8 00000000 E	          call writestring
 00002830  E8 00000000 E			call crlf


 00002835			_skip_error_denver_lottery:
 00002835  E8 00000000 E			call readint 
 0000283A  83 F8 01			     cmp eax, 1	
 0000283D  75 E7		          jne _try_again_denver_lottery 

 0000283F  BA 000018C9 R			mov edx, offset dice_roll_status
 00002844  E8 00000000 E	          call writestring
						
						

 00002849  EB 00				jmp _random_generate_denver_lottery 
				;------------ randomly generate numbers between 1 or 2 ------------------ 
 0000284B			_random_generate_denver_lottery:         
 0000284B  B8 00000002		               mov eax, 2
 00002850  E8 00000000 E	               call randomrange
 00002855  83 C0 01		               add eax, 1
 00002858  A3 00001C55 R	               mov random_choice, eax
 0000285D  B8 00000BB8		               mov eax, 3000
 00002862  E8 00000000 E	               call delay
 00002867  A1 00001C55 R	               mov eax, random_choice
 0000286C  E8 00000000 E	               call writedec
 00002871  E8 00000000 E	               call crlf
 00002876  E8 00000000 E	               call crlf
 0000287B  83 F8 01		               cmp eax, 1
 0000287E  74 05		               je denver_jackpot
 00002880  83 F8 02		               cmp eax, 2
 00002883  74 75		               je denver_nothing
 00002885			               denver_jackpot:                                                                  ; main option 7 sub option 1
 00002885  BA 00001839 R	                    mov edx, offset lottery_option1
 0000288A  E8 00000000 E	                    call writestring
 0000288F  E8 00000000 E	                    call crlf
 00002894  E8 00000000 E					call crlf
 00002899  E8 00000000 E					call crlf
 0000289E  BA 0000385B R					mov edx, offset jackpot_graphic
 000028A3  E8 00000000 E	                    call writestring
 000028A8  E8 00000000 E	                    call crlf
 000028AD  E8 00000000 E					call crlf
 000028B2  BA 00001BCA R	                    mov edx, offset userString1
 000028B7  E8 00000000 E	                    call writestring
 000028BC  81 C3 000003E8	                    add ebx, 1000
 000028C2  8B C3		                    mov eax, ebx
 000028C4  E8 00000000 E	                    call writedec
 000028C9  BA 00001C39 R	                    mov edx, offset dollar
 000028CE  E8 00000000 E	                    call writestring
 000028D3  E8 00000000 E	                    call crlf
 000028D8  BA 00001BD8 R	                    mov edx, offset userDecision
 000028DD  E8 00000000 E	                    call writestring
 000028E2  E8 00000000 E	                    call readint
 000028E7  B9 00000002		                    mov ecx, 2
 000028EC  83 F8 01		                    cmp eax, 1
 000028EF  0F 84 00000084	                    je start
 000028F5  E9 000000B0		                    jmp showItem
 000028FA			               denver_nothing:                                                                  ; main option 7 sub option 2
 000028FA  BA 00001857 R	                    mov edx, offset lottery_option2
 000028FF  E8 00000000 E	                    call writestring
 00002904  E8 00000000 E	                    call crlf
 00002909  BA 00001BCA R	                    mov edx, offset userString1
 0000290E  E8 00000000 E	                    call writestring
 00002913  83 C3 00		                    add ebx, 0
 00002916  8B C3		                    mov eax, ebx
 00002918  E8 00000000 E	                    call writedec
 0000291D  BA 00001C39 R	                    mov edx, offset dollar
 00002922  E8 00000000 E	                    call writestring
 00002927  E8 00000000 E	                    call crlf
 0000292C  BA 00001BD8 R	                    mov edx, offset userDecision
 00002931  E8 00000000 E	                    call writestring
 00002936  E8 00000000 E	                    call readint
 0000293B  B9 00000002		                    mov ecx, 2
 00002940  83 F8 01		                    cmp eax, 1
 00002943  74 34		                    je start
 00002945  EB 63		                    jmp showItem
 00002947			     _Nairobi:
 00002947  BA 000010EF R	          mov edx, offset welcome_nairobi ; welcome message for nairobi character
 0000294C  E8 00000000 E	          call writestring
 00002951  E8 00000000 E	          call crlf
 00002956  E8 00000000 E	          call crlf
 0000295B  E9 FFFFD829		          jmp begin;  this character can not play and is just a comic inclusion so jump to begin and choose a character again
 00002960			     _Others:
 00002960  BA 000018ED R	          mov edx, offset welcome_other 
 00002965  E8 00000000 E	          call writestring ; if player choose below 1 or above 5 value then error message will be printed
 0000296A  E8 00000000 E	          call crlf
 0000296F  E8 00000000 E	          call crlf
 00002974  E9 FFFFD810		          jmp begin ; then show the oprions again
 00002979			     start:
 00002979  83 FB 00		          cmp ebx, 0  ; if the total_money is 0 then the game will be over
 0000297C  76 1B		          jbe gameOver
 0000297E  83 F9 01		          cmp ecx, 1   ; if total_money is more than 0 then player can continue the game. based on the ecx value we can determine which character player is currently playing
 00002981  0F 84 FFFFE58B	          je tokyo_startGame
 00002987  83 F9 02		          cmp ecx, 2
 0000298A  0F 84 FFFFF2A5	          je denver_startGame
 00002990  83 F9 03		          cmp ecx, 3
 00002993  0F 84 FFFFD847	          je professor_startGame
 00002999			     gameOver:
 00002999  BA 00001C08 R	          mov edx, offset noMoney ; if gameover appears then we will print message and exit
 0000299E  E8 00000000 E	          call writestring
 000029A3  E8 00000000 E	          call crlf
 000029A8  EB 00		          jmp showItem
 000029AA			     showItem:
 000029AA  B9 0000000B		          mov ecx, 11
 000029AF  BE 00001C5D R	          mov esi, offset property_list
 000029B4  E8 00000000 E			call crlf
 000029B9  E8 00000000 E			call crlf
 000029BE  E8 00000000 E			call crlf
 000029C3  BA 00001CD5 R	          mov edx, offset item_list
 000029C8  E8 00000000 E	          call writestring
 000029CD  E8 00000000 E	          call crlf



 000029D2			          fL:
 000029D2  8B 06		          mov eax, [esi]
 000029D4  83 F8 00		          cmp eax, 0
 000029D7  0F 84 000000F9	          je l
 000029DD  83 F8 01		          cmp eax, 1
 000029E0  74 46		          je item1
 000029E2  83 F8 02		          cmp eax, 2
 000029E5  74 55		          je item2
 000029E7  83 F8 03		          cmp eax, 3
 000029EA  74 64		          je item3
 000029EC  83 F8 04		          cmp eax, 4
 000029EF  74 70		          je item4
 000029F1  83 F8 05		          cmp eax, 5
 000029F4  74 7C		          je item5
 000029F6  83 F8 06		          cmp eax, 6
 000029F9  0F 84 00000084	          je item6
 000029FF  83 F8 07		          cmp eax, 7
 00002A02  0F 84 0000008C	          je item7
 00002A08  83 F8 08		          cmp eax, 8
 00002A0B  0F 84 00000094	          je item8
 00002A11  83 F8 09		          cmp eax, 9
 00002A14  0F 84 0000009C	          je item9
 00002A1A  83 F8 0A		          cmp eax, 10
 00002A1D  0F 84 000000A4	          je item10
 00002A23  E9 000000AE		          jmp l
 00002A28			          item1:
 00002A28  BA 00001DD3 R	          mov edx, offset Penthouse_item
 00002A2D  E8 00000000 E	          call writestring
 00002A32  E8 00000000 E	          call crlf
 00002A37  E9 0000009A		          jmp l
 00002A3C			          item2:
 00002A3C  BA 00001DDD R	          mov edx, offset Garden_Apartment_item
 00002A41  E8 00000000 E	          call writestring
 00002A46  E8 00000000 E	          call crlf
 00002A4B  E9 00000086		          jmp l
 00002A50			          item3:
 00002A50  BA 00001DEE R	          mov edx, offset Sky_Loft_item
 00002A55  E8 00000000 E	          call writestring
 00002A5A  E8 00000000 E	          call crlf
 00002A5F  EB 75		          jmp l
 00002A61			          item4:
 00002A61  BA 00001DF7 R	          mov edx, offset Audi_item
 00002A66  E8 00000000 E	          call writestring
 00002A6B  E8 00000000 E	          call crlf
 00002A70  EB 64		          jmp l
 00002A72			          item5:
 00002A72  BA 00001DFC R	          mov edx, offset Lamborghini_item
 00002A77  E8 00000000 E	          call writestring
 00002A7C  E8 00000000 E	          call crlf
 00002A81  EB 53		          jmp l
 00002A83			          item6:
 00002A83  BA 00001E08 R	          mov edx, offset Ferrari_item
 00002A88  E8 00000000 E	          call writestring
 00002A8D  E8 00000000 E	          call crlf
 00002A92  EB 42		          jmp l
 00002A94			          item7:
 00002A94  BA 00001E10 R	          mov edx, offset Cokacola_item
 00002A99  E8 00000000 E	          call writestring
 00002A9E  E8 00000000 E	          call crlf
 00002AA3  EB 31		          jmp l
 00002AA5			          item8:
 00002AA5  BA 00001E19 R	          mov edx, offset Acer_item
 00002AAA  E8 00000000 E	          call writestring
 00002AAF  E8 00000000 E	          call crlf
 00002AB4  EB 20		          jmp l
 00002AB6			          item9:
 00002AB6  BA 00001E1E R	          mov edx, offset SpaceX_item
 00002ABB  E8 00000000 E	          call writestring
 00002AC0  E8 00000000 E	          call crlf
 00002AC5  EB 0F		          jmp l
 00002AC7			          item10:
 00002AC7  BA 00001E25 R	          mov edx, offset Yahoo_item
 00002ACC  E8 00000000 E	          call writestring
 00002AD1  E8 00000000 E	          call crlf
 00002AD6			          l:
 00002AD6  83 C6 04		          add esi, 4
 00002AD9  49			          dec ecx
 00002ADA  0F 85 FFFFFEF2	          jne fL
 00002AE0  E8 00000000 E	          call crlf
 00002AE5  EB 00		          jmp _Exit
 00002AE7			_Exit:
 00002AE7  BA 00001C3B R		mov edx, offset exit_desktop_message ;
 00002AEC  E8 00000000 E	     call writestring
 00002AF1  E8 00000000 E		call crlf
				          exit
 00002AF6  6A 00	   *	    push   +000000000h
 00002AF8  E8 00000000 E   *	    call   ExitProcess
 00002AFD			main ENDP
				END main
Microsoft (R) Macro Assembler Version 14.35.32215.0	    02/27/23 21:39:50
COA-Game, Version 					     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00003C5B Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00002AFD Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00002AFD Public STDCALL
  instruct . . . . . . . . . . .	L Near	 0000008F _TEXT	
  _game_start  . . . . . . . . .	L Near	 00000156 _TEXT	
  begin  . . . . . . . . . . . .	L Near	 00000189 _TEXT	
  _Professor . . . . . . . . . .	L Near	 000001C7 _TEXT	
  professor_startGame  . . . . .	L Near	 000001E0 _TEXT	
  _try_again_prof  . . . . . . .	L Near	 0000022A _TEXT	
  _skip_error_prof . . . . . . .	L Near	 00000239 _TEXT	
  _random_generate_prof  . . . .	L Near	 0000024F _TEXT	
  buyHouse . . . . . . . . . . .	L Near	 000002BA _TEXT	
  _try_again_prof_buyhouse . . .	L Near	 000002DA _TEXT	
  _skip_error_prof_buyhouse  . .	L Near	 000002E9 _TEXT	
  _random_generate_prof_buyhouse .	L Near	 000002FF _TEXT	
  penthouse  . . . . . . . . . .	L Near	 0000034F _TEXT	
  garden . . . . . . . . . . . .	L Near	 000003CE _TEXT	
  sky  . . . . . . . . . . . . .	L Near	 0000044D _TEXT	
  noHouse  . . . . . . . . . . .	L Near	 000004CC _TEXT	
  sellProduct  . . . . . . . . .	L Near	 00000520 _TEXT	
  _try_again_prof_sellproduct  .	L Near	 00000540 _TEXT	
  _skip_error_prof_sellproduct .	L Near	 0000054F _TEXT	
  _random_generate_prof_sellproduct 	L Near	 00000565 _TEXT	
  piano  . . . . . . . . . . . .	L Near	 000005A8 _TEXT	
  watch  . . . . . . . . . . . .	L Near	 0000061D _TEXT	
  noSell . . . . . . . . . . . .	L Near	 0000068F _TEXT	
  bankrupt . . . . . . . . . . .	L Near	 000006E3 _TEXT	
  buyCar . . . . . . . . . . . .	L Near	 00000736 _TEXT	
  _try_again_prof_buycar . . . .	L Near	 00000756 _TEXT	
  _skip_error_prof_buycar  . . .	L Near	 00000765 _TEXT	
  _random_generate_prof_buycar .	L Near	 0000077B _TEXT	
  audi . . . . . . . . . . . . .	L Near	 000007CB _TEXT	
  lamborghini  . . . . . . . . .	L Near	 0000084A _TEXT	
  ferrari  . . . . . . . . . . .	L Near	 000008C9 _TEXT	
  noCar  . . . . . . . . . . . .	L Near	 00000948 _TEXT	
  invest . . . . . . . . . . . .	L Near	 0000099C _TEXT	
  _try_again_prof_invest . . . .	L Near	 000009BC _TEXT	
  _skip_error_prof_invest  . . .	L Near	 000009CB _TEXT	
  _random_generate_prof_invest .	L Near	 000009E1 _TEXT	
  cokacola . . . . . . . . . . .	L Near	 00000A31 _TEXT	
  acer . . . . . . . . . . . . .	L Near	 00000AB0 _TEXT	
  spacex . . . . . . . . . . . .	L Near	 00000B2F _TEXT	
  yahoo  . . . . . . . . . . . .	L Near	 00000BAE _TEXT	
  startBusiness  . . . . . . . .	L Near	 00000C2D _TEXT	
  _try_again_prof_startbusiness 	L Near	 00000C4D _TEXT	
  _skip_error_prof_startbusiness .	L Near	 00000C5C _TEXT	
  _random_generate_prof_startbusiness 	L Near	 00000C72 _TEXT	
  profit . . . . . . . . . . . .	L Near	 00000CB5 _TEXT	
  noBusiness . . . . . . . . . .	L Near	 00000D09 _TEXT	
  loss . . . . . . . . . . . . .	L Near	 00000D5D _TEXT	
  buyLottery . . . . . . . . . .	L Near	 00000DB1 _TEXT	
  _try_again_prof_lottery  . . .	L Near	 00000DD1 _TEXT	
  _skip_error_prof_lottery . . .	L Near	 00000DE0 _TEXT	
  _random_generate_prof_lottery 	L Near	 00000DF6 _TEXT	
  jackpot  . . . . . . . . . . .	L Near	 00000E30 _TEXT	
  nothing  . . . . . . . . . . .	L Near	 00000EA5 _TEXT	
  _Tokyo . . . . . . . . . . . .	L Near	 00000EF9 _TEXT	
  tokyo_startGame  . . . . . . .	L Near	 00000F12 _TEXT	
  _try_again_tokyo . . . . . . .	L Near	 00000F5C _TEXT	
  _skip_error_tokyo  . . . . . .	L Near	 00000F6B _TEXT	
  _random_generate_tokyo . . . .	L Near	 00000F81 _TEXT	
  tokyo_buyHouse . . . . . . . .	L Near	 00000FEC _TEXT	
  _try_again_tokyo_buyhouse  . .	L Near	 0000100C _TEXT	
  _skip_error_tokyo_buyhouse . .	L Near	 0000101B _TEXT	
  _random_generate_tokyo_buyhouse 	L Near	 00001031 _TEXT	
  tokyo_penthouse  . . . . . . .	L Near	 00001081 _TEXT	
  tokyo_garden . . . . . . . . .	L Near	 00001100 _TEXT	
  tokyo_sky  . . . . . . . . . .	L Near	 0000117F _TEXT	
  tokyo_noHouse  . . . . . . . .	L Near	 000011FE _TEXT	
  tokyo_sellProduct  . . . . . .	L Near	 00001252 _TEXT	
  _try_again_tokyo_sellProduct .	L Near	 00001272 _TEXT	
  _skip_error_tokyo_sellProduct 	L Near	 00001281 _TEXT	
  _random_generate_tokyo_sellProduct .	L Near	 00001297 _TEXT	
  tokyo_piano  . . . . . . . . .	L Near	 000012DA _TEXT	
  tokyo_watch  . . . . . . . . .	L Near	 0000134A _TEXT	
  tokyo_noSell . . . . . . . . .	L Near	 000013B7 _TEXT	
  tokyo_bankrupt . . . . . . . .	L Near	 0000140B _TEXT	
  tokyo_buyCar . . . . . . . . .	L Near	 0000145E _TEXT	
  _try_again_tokyo_buyCar  . . .	L Near	 0000147E _TEXT	
  _skip_error_tokyo_buyCar . . .	L Near	 0000148D _TEXT	
  _random_generate_tokyo_buyCar 	L Near	 000014A3 _TEXT	
  tokyo_audi . . . . . . . . . .	L Near	 000014F3 _TEXT	
  tokyo_lamborghini  . . . . . .	L Near	 00001572 _TEXT	
  tokyo_ferrari  . . . . . . . .	L Near	 000015F1 _TEXT	
  tokyo_noCar  . . . . . . . . .	L Near	 0000166B _TEXT	
  tokyo_invest . . . . . . . . .	L Near	 000016BF _TEXT	
  _try_again_tokyo_invest  . . .	L Near	 000016DF _TEXT	
  _skip_error_tokyo_invest . . .	L Near	 000016EE _TEXT	
  _random_generate_tokyo_invest 	L Near	 00001704 _TEXT	
  tokyo_cokacola . . . . . . . .	L Near	 00001754 _TEXT	
  tokyo_acer . . . . . . . . . .	L Near	 000017D3 _TEXT	
  tokyo_spacex . . . . . . . . .	L Near	 00001852 _TEXT	
  tokyo_yahoo  . . . . . . . . .	L Near	 000018D1 _TEXT	
  tokyo_startBusiness  . . . . .	L Near	 00001950 _TEXT	
  _try_again_tokyo_startBusiness .	L Near	 00001970 _TEXT	
  _skip_error_tokyo_startBusiness 	L Near	 0000197F _TEXT	
  _random_generate_tokyo_startBusiness . L Near	  00001995 _TEXT	
  tokyo_profit . . . . . . . . .	L Near	 000019D8 _TEXT	
  tokyo_noBusiness . . . . . . .	L Near	 00001A2C _TEXT	
  tokyo_loss . . . . . . . . . .	L Near	 00001A80 _TEXT	
  tokyo_buyLottery . . . . . . .	L Near	 00001AD4 _TEXT	
  _try_again_tokyo_lottery . . .	L Near	 00001AF4 _TEXT	
  _skip_error_tokyo_lottery  . .	L Near	 00001B03 _TEXT	
  _random_generate_tokyo_lottery .	L Near	 00001B19 _TEXT	
  tokyo_jackpot  . . . . . . . .	L Near	 00001B53 _TEXT	
  tokyo_nothing  . . . . . . . .	L Near	 00001BC8 _TEXT	
  _Denver  . . . . . . . . . . .	L Near	 00001C1C _TEXT	
  denver_startGame . . . . . . .	L Near	 00001C35 _TEXT	
  _try_again_denver  . . . . . .	L Near	 00001C7F _TEXT	
  _skip_error_denver . . . . . .	L Near	 00001C8E _TEXT	
  _random_generate_denver  . . .	L Near	 00001CA4 _TEXT	
  denver_buyHouse  . . . . . . .	L Near	 00001D0F _TEXT	
  _try_again_denver_buyHouse . .	L Near	 00001D2F _TEXT	
  _skip_error_denver_buyHouse  .	L Near	 00001D3E _TEXT	
  _random_generate_denver_buyHouse .	L Near	 00001D54 _TEXT	
  denver_penthouse . . . . . . .	L Near	 00001DA4 _TEXT	
  denver_garden  . . . . . . . .	L Near	 00001E23 _TEXT	
  denver_sky . . . . . . . . . .	L Near	 00001EA2 _TEXT	
  denver_noHouse . . . . . . . .	L Near	 00001F21 _TEXT	
  denver_sellProduct . . . . . .	L Near	 00001F75 _TEXT	
  _try_again_denver_sellProduct 	L Near	 00001F95 _TEXT	
  _skip_error_denver_sellProduct .	L Near	 00001FA4 _TEXT	
  _random_generate_denver_sellProduct 	L Near	 00001FBA _TEXT	
  denver_piano . . . . . . . . .	L Near	 00001FFD _TEXT	
  denver_watch . . . . . . . . .	L Near	 00002072 _TEXT	
  denver_noSell  . . . . . . . .	L Near	 000020E4 _TEXT	
  denver_bankrupt  . . . . . . .	L Near	 00002138 _TEXT	
  denver_buyCar  . . . . . . . .	L Near	 0000218B _TEXT	
  _try_again_denver_buyCar . . .	L Near	 000021AB _TEXT	
  _skip_error_denver_buyCar  . .	L Near	 000021BA _TEXT	
  _random_generate_denver_buyCar .	L Near	 000021D0 _TEXT	
  denver_audi  . . . . . . . . .	L Near	 00002220 _TEXT	
  denver_lamborghini . . . . . .	L Near	 0000229F _TEXT	
  denver_ferrari . . . . . . . .	L Near	 0000231E _TEXT	
  denver_noCar . . . . . . . . .	L Near	 0000239D _TEXT	
  denver_invest  . . . . . . . .	L Near	 000023F1 _TEXT	
  _try_again_denver_invest . . .	L Near	 00002411 _TEXT	
  _skip_error_denver_invest  . .	L Near	 00002420 _TEXT	
  _random_generate_denver_invest .	L Near	 00002436 _TEXT	
  denver_cokacola  . . . . . . .	L Near	 00002486 _TEXT	
  denver_acer  . . . . . . . . .	L Near	 00002505 _TEXT	
  denver_spacex  . . . . . . . .	L Near	 00002584 _TEXT	
  denver_yahoo . . . . . . . . .	L Near	 00002603 _TEXT	
  denver_startBusiness . . . . .	L Near	 00002682 _TEXT	
  _try_again_denver_startBusiness 	L Near	 000026A2 _TEXT	
  _skip_error_denver_startBusiness .	L Near	 000026B1 _TEXT	
  _random_generate_denver_startBusiness  L Near	  000026C7 _TEXT	
  denver_profit  . . . . . . . .	L Near	 0000270A _TEXT	
  denver_noBusiness  . . . . . .	L Near	 0000275E _TEXT	
  denver_loss  . . . . . . . . .	L Near	 000027B2 _TEXT	
  denver_buyLottery  . . . . . .	L Near	 00002806 _TEXT	
  _try_again_denver_lottery  . .	L Near	 00002826 _TEXT	
  _skip_error_denver_lottery . .	L Near	 00002835 _TEXT	
  _random_generate_denver_lottery 	L Near	 0000284B _TEXT	
  denver_jackpot . . . . . . . .	L Near	 00002885 _TEXT	
  denver_nothing . . . . . . . .	L Near	 000028FA _TEXT	
  _Nairobi . . . . . . . . . . .	L Near	 00002947 _TEXT	
  _Others  . . . . . . . . . . .	L Near	 00002960 _TEXT	
  start  . . . . . . . . . . . .	L Near	 00002979 _TEXT	
  gameOver . . . . . . . . . . .	L Near	 00002999 _TEXT	
  showItem . . . . . . . . . . .	L Near	 000029AA _TEXT	
  fL . . . . . . . . . . . . . .	L Near	 000029D2 _TEXT	
  item1  . . . . . . . . . . . .	L Near	 00002A28 _TEXT	
  item2  . . . . . . . . . . . .	L Near	 00002A3C _TEXT	
  item3  . . . . . . . . . . . .	L Near	 00002A50 _TEXT	
  item4  . . . . . . . . . . . .	L Near	 00002A61 _TEXT	
  item5  . . . . . . . . . . . .	L Near	 00002A72 _TEXT	
  item6  . . . . . . . . . . . .	L Near	 00002A83 _TEXT	
  item7  . . . . . . . . . . . .	L Near	 00002A94 _TEXT	
  item8  . . . . . . . . . . . .	L Near	 00002AA5 _TEXT	
  item9  . . . . . . . . . . . .	L Near	 00002AB6 _TEXT	
  item10 . . . . . . . . . . . .	L Near	 00002AC7 _TEXT	
  l  . . . . . . . . . . . . . .	L Near	 00002AD6 _TEXT	
  _Exit  . . . . . . . . . . . .	L Near	 00002AE7 _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
Acer_item  . . . . . . . . . . .	Byte	 00001E19 _DATA	
Audi_item  . . . . . . . . . . .	Byte	 00001DF7 _DATA	
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
Cokacola_item  . . . . . . . . .	Byte	 00001E10 _DATA	
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
Ferrari_item . . . . . . . . . .	Byte	 00001E08 _DATA	
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
Garden_Apartment_item  . . . . .	Byte	 00001DDD _DATA	
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
Lamborghini_item . . . . . . . .	Byte	 00001DFC _DATA	
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
Penthouse_item . . . . . . . . .	Byte	 00001DD3 _DATA	
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
Sky_Loft_item  . . . . . . . . .	Byte	 00001DEE _DATA	
SpaceX_item  . . . . . . . . . .	Byte	 00001E1E _DATA	
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
Yahoo_item . . . . . . . . . . .	Byte	 00001E25 _DATA	
_gameplay_message_graphic  . . .	Byte	 000003CA _DATA	
_gameplay_option_graphic . . . .	Byte	 000006C0 _DATA	
_heist_logo_graphic  . . . . . .	Byte	 00000000 _DATA	
_instruction_heading . . . . . .	Byte	 00000AD8 _DATA	
_instruction_screen_selection_message 	Byte	 00000D9E _DATA	
_instruction . . . . . . . . . .	Byte	 00000C44 _DATA	
_title . . . . . . . . . . . . .	Byte	 00000E03 _DATA	
_welcome . . . . . . . . . . . .	Byte	 00000FFA _DATA	
acer_graphic . . . . . . . . . .	Byte	 000035B2 _DATA	
audi_graphic . . . . . . . . . .	Byte	 00002BB9 _DATA	
bankruptString . . . . . . . . .	Byte	 00001917 _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
business_option1 . . . . . . . .	Byte	 0000173E _DATA	
business_option2 . . . . . . . .	Byte	 00001782 _DATA	
business_option3 . . . . . . . .	Byte	 0000179B _DATA	
business_options . . . . . . . .	Byte	 000016BD _DATA	
buyCarString . . . . . . . . . .	Byte	 00001BA6 _DATA	
buyLotteryString . . . . . . . .	Byte	 00001B77 _DATA	
car_option1  . . . . . . . . . .	Byte	 00001526 _DATA	
car_option2  . . . . . . . . . .	Byte	 00001540 _DATA	
car_option3  . . . . . . . . . .	Byte	 0000155D _DATA	
car_option4  . . . . . . . . . .	Byte	 0000157E _DATA	
car_options  . . . . . . . . . .	Byte	 000014AC _DATA	
charOption . . . . . . . . . . .	Byte	 00001013 _DATA	
coke_graphic . . . . . . . . . .	Byte	 00002FF1 _DATA	
currentMoneyString . . . . . . .	Byte	 00001BB7 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
den  . . . . . . . . . . . . . .	Byte	 00001198 _DATA	
dice_roll_error_message  . . . .	Byte	 000018D5 _DATA	
dice_roll_status . . . . . . . .	Byte	 000018C9 _DATA	
dice_roll  . . . . . . . . . . .	Byte	 0000189B _DATA	
dollar . . . . . . . . . . . . .	Byte	 00001C39 _DATA	
exit_desktop_message . . . . . .	Byte	 00001C3B _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
ferrari_graphic  . . . . . . . .	Byte	 00002834 _DATA	
gardenApartment_graphic  . . . .	Byte	 00001ED6 _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
house_option1  . . . . . . . . .	Byte	 000012FE _DATA	
house_option2  . . . . . . . . .	Byte	 00001325 _DATA	
house_option3  . . . . . . . . .	Byte	 00001358 _DATA	
house_option4  . . . . . . . . .	Byte	 00001384 _DATA	
house_options  . . . . . . . . .	Byte	 00001278 _DATA	
investString . . . . . . . . . .	Byte	 00001B8C _DATA	
invest_option1 . . . . . . . . .	Byte	 0000163B _DATA	
invest_option2 . . . . . . . . .	Byte	 00001654 _DATA	
invest_option3 . . . . . . . . .	Byte	 0000166C _DATA	
invest_option4 . . . . . . . . .	Byte	 00001697 _DATA	
invest_options . . . . . . . . .	Byte	 000015BC _DATA	
item_list  . . . . . . . . . . .	Byte	 00001CD5 _DATA	
jackpot_graphic  . . . . . . . .	Byte	 0000385B _DATA	
lamborghini_graphic  . . . . . .	Byte	 00002551 _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
lottery_option1  . . . . . . . .	Byte	 00001839 _DATA	
lottery_option2  . . . . . . . .	Byte	 00001857 _DATA	
lottery_options  . . . . . . . .	Byte	 000017DE _DATA	
magenta  . . . . . . . . . . . .	Number	 00000005h   
main_options2  . . . . . . . . .	Byte	 00001211 _DATA	
main_options . . . . . . . . . .	Byte	 000011AA _DATA	
noMoney  . . . . . . . . . . . .	Byte	 00001C08 _DATA	
penthouse_graphic  . . . . . . .	Byte	 00001E2B _DATA	
piano_graphic  . . . . . . . . .	Byte	 000022F9 _DATA	
product_option1  . . . . . . . .	Byte	 00001449 _DATA	
product_option2  . . . . . . . .	Byte	 0000146D _DATA	
product_option3  . . . . . . . .	Byte	 00001495 _DATA	
product_options  . . . . . . . .	Byte	 000013C2 _DATA	
prof1  . . . . . . . . . . . . .	Byte	 00001172 _DATA	
property_list  . . . . . . . . .	Word	 00001C5D _DATA	
random_choice  . . . . . . . . .	DWord	 00001C55 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
sellProductString  . . . . . . .	Byte	 00001906 _DATA	
sky_loft_graphic . . . . . . . .	Byte	 00002024 _DATA	
spacex_graphic . . . . . . . . .	Byte	 000033D5 _DATA	
startBussinessString . . . . . .	Byte	 00001B56 _DATA	
tokyo1 . . . . . . . . . . . . .	Byte	 00001187 _DATA	
total_money  . . . . . . . . . .	DWord	 00001C59 _DATA	
userDecision . . . . . . . . . .	Byte	 00001BD8 _DATA	
userString1  . . . . . . . . . .	Byte	 00001BCA _DATA	
watch_graphic  . . . . . . . . .	Byte	 000023E5 _DATA	
welcome_denver . . . . . . . . .	Byte	 000010CB _DATA	
welcome_nairobi  . . . . . . . .	Byte	 000010EF _DATA	
welcome_other  . . . . . . . . .	Byte	 000018ED _DATA	
welcome_prof . . . . . . . . . .	Byte	 00001081 _DATA	
welcome_tokyo  . . . . . . . . .	Byte	 000010A8 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yahoo_graphic  . . . . . . . . .	Byte	 000036CA _DATA	
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
